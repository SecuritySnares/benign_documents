%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: cikm.dvi
%%Pages: 10
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMBX12 Helvetica CMSY9 CMTT9 Times-Bold CMR9 CMTI9 CMR6
%%+ CMBX9 CMMI9 CMMI6 CMSY6 MSBM10 CMCSC10 NewCenturySchlbk-Roman Symbol
%%+ LASY9 CMMI5 CMR5 CMMI10 CMSY10 CMMI7 TeX-cmex9 Times-Roman
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips cikm.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2005.08.29:0944
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: f7b6d320.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 8r.enc
% File  8r.enc as of 2002-03-12 for PSNFSS 9
%
% This is the encoding vector for Type1 and TrueType fonts to be used
% with TeX.  This file is part of the PSNFSS bundle, version 9
% 
% Authors: S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry, W. Schmidt
%
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida + Euro.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (6) /Euro is assigned to 128, as in Windows ANSI
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /Euro /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: bbad153f.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsy10 cmsy5 cmsy6 cmsy7 cmsy8 cmsy9
%
/TeXbbad153fEncoding [
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /circlemultiply
/circledivide /circledot /circlecopyrt /openbullet /bullet
/equivasymptotic /equivalence /reflexsubset /reflexsuperset /lessequal
/greaterequal /precedesequal /followsequal /similar /approxequal
/propersubset /propersuperset /lessmuch /greatermuch /precedes /follows
/arrowleft /arrowright /arrowup /arrowdown /arrowboth /arrownortheast
/arrowsoutheast /similarequal /arrowdblleft /arrowdblright /arrowdblup
/arrowdbldown /arrowdblboth /arrownorthwest /arrowsouthwest /proportional
/prime /infinity /element /owner /triangle /triangleinv /negationslash
/mapsto /universal /existential /logicalnot /emptyset /Rfractur /Ifractur
/latticetop /perpendicular /aleph /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /union /intersection
/unionmulti /logicaland /logicalor /turnstileleft /turnstileright
/floorleft /floorright /ceilingleft /ceilingright /braceleft /braceright
/angbracketleft /angbracketright /bar /bardbl /arrowbothv /arrowdblbothv
/backslash /wreathproduct /radical /coproduct /nabla /integral
/unionsq /intersectionsq /subsetsqequal /supersetsqequal /section
/dagger /daggerdbl /paragraph /club /diamond /heart /spade /arrowleft
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /.notdef /.notdef
/circlemultiply /circledivide /circledot /circlecopyrt /openbullet
/bullet /equivasymptotic /equivalence /reflexsubset /reflexsuperset
/lessequal /greaterequal /precedesequal /followsequal /similar
/approxequal /propersubset /propersuperset /lessmuch /greatermuch
/precedes /follows /arrowleft /spade /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 09fbbfac.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsltt10 cmtt10 cmtt12 cmtt8 cmtt9
/TeX09fbbfacEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/Omega /arrowup /arrowdown /quotesingle /exclamdown /questiondown
/dotlessi /dotlessj /grave /acute /caron /breve /macron /ring /cedilla
/germandbls /ae /oe /oslash /AE /OE /Oslash /visiblespace /exclam
/quotedbl /numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon /less
/equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash /bracketright
/asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l
/m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /dieresis /visiblespace /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /space /Gamma /Delta /Theta /Lambda /Xi /Pi
/Sigma /Upsilon /Phi /Psi /.notdef /.notdef /Omega /arrowup /arrowdown
/quotesingle /exclamdown /questiondown /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /visiblespace /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 74afc74c.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmbxti10 cmff10 cmfi10 cmfib8 cmti10 cmti12 cmti7 cmti8cmti9 cmu10
%
/TeX74afc74cEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /sterling /percent
/ampersand /quoteright /parenleft /parenright /asterisk /plus /comma
/hyphen /period /slash /zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /exclamdown /equal /questiondown /question
/at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 0ef0afca.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmr5
%
/TeX0ef0afcaEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/arrowup /arrowdown /quotesingle /exclamdown /questiondown /dotlessi
/dotlessj /grave /acute /caron /breve /macron /ring /cedilla /germandbls
/ae /oe /oslash /AE /OE /Oslash /suppress /exclam /quotedblright
/numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /quotedblleft
/bracketright /circumflex /dotaccent /quoteleft /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /endash /emdash
/hungarumlaut /tilde /dieresis /suppress /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /Gamma /Delta /Theta /Lambda
/Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef /.notdef /Omega /arrowup
/arrowdown /quotesingle /exclamdown /questiondown /dotlessi /dotlessj
/grave /acute /caron /breve /macron /ring /cedilla /germandbls /ae /oe
/oslash /AE /OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: TeX-cmex9
%!PS-AdobeFont-1.0: TeX-cmex9 001.001
% Filtered by type1fix.pl 0.05
%%EndComments
13 dict dup begin
/FontInfo 16 dict dup begin
/Copyright (see\040copyright\040of\040original\040TeX\040font) def
/FamilyName (TeX\040cmex9) def
/FullName (TeX\040cmex9\040Regular) def
/ItalicAngle 0 def
/Notice (converted\040after\040April\0402001) def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Weight (Regular) def
/isFixedPitch false def
/version (001.001) def
end readonly def
/FontName /TeX-cmex9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 80 /P put
dup 81 /Q put
dup 88 /X put
dup 89 /Y put
readonly def
/FontBBox {-26 -2961 1503 773} readonly def
/UniqueID 4314405 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BAE4F093966CD2192CE95EB0F323A6BABFDACCFCF27D91F7869A0E46CA5
9AAF6905783E8AC1F3F9875A76F97187738432F8D14E61574CB292FFB9740871
66839799D8CAF6E0DFE00012EE6D46A2B3655F29705BE37FD5EDA1C765AA2CF5
C5AD37207ED1EE9DB82FF31A33307FFA16911406557336AF92F50B603C7BD336
73EC060F68318378A6F599DDADA5A21504CADBA1E1F4B1A22962BA1BB39ADC7B
E8CC92F196549457877C9636A8A7EFAC1C3745644C0FD151C70B9FAD69B02C1F
FE5ED071CA1CF3D4A70909B6A3986687D8FB87391E0C665A4EBD2993161FA81B
2B8F7221294CCB11AE65A31E8903DCC3AC1A47765E880ACDDC88509418B04F0F
2D84FD3007D411EEE2DFF237D99A10430524F07480302DFD698B571A023B08A1
36F84F09BCECBE34ECC1CFD251EBBF338CFF7C197D9B33CBD9ACA7171370527C
CFA0F7FD5DE8B62790D7DF23F004AEDA717F35B5E2B260A8AAFDE31164AFA47C
686735EC47454F42AC5037D97B410DC373EB0CEFE3C41E243EDA86FF582AB53E
7B56D103AD816F2D7DA35DE239DE30CA5645A377E77A1980B984C195E605841B
36C82FF23D95B5FF770C3AB37C2D657FD1731E91FA0446C316C68F62626B97F2
A6EB26661FB72F30CF2044F66B38189B137792BAEF480D72148BEC854A89C03B
61ADE908D4DB6F131825E69058D278EC97A1A5482E452E3B9297EDF951B926B9
A6D0AB40572802C43D9E112810113161486EB839846044C2E4EF2F18BF13EDFD
319589DCBEAC3707277A82B7736203F1487477FD89EA74E4FB8901C3EAA8260F
AA186F90C5F1E5A47621427356CDACBDA7480BE02EDE3315E09130315194588E
03C6F1494261B54A866811080E83B473994CB24E203569410E278770956E1A01
5A8214CB8FFE1D61DE29D0EA0099E4D5702FA8F9C737BDBE348F3014A172A1EA
FB2D0534138DDC6A2BF5F6A89DDDD00E20246C7C8C759A2F1B0258F0C185CE7C
ED9339B6C2F88AE4AA78FE19B7D216DF040BF9958CCA9409D86BE5B5B7ACD9CA
C023CEED0BC36B09CDB2B3B4B6D8CC29F569EC445A7BA434D18CD3E127DBD340
6945FFEF3A8797A97E9E3C62C09A72B34BEFEBDBA438B630D18C246874627160
B9BCD2F9B87B86238418B397A93EF795CEC28FB147FA9288742CEE2CBE67757A
56B678B7370B26F2989E7274BEC0CE884CC52CDC8530F6EB1DD82657DDD14988
1596BD6E96A5DA25A360E0CBDD1779C6E819E8845B573B34AF4841122CD4DCAD
3DD65A7E5F19AD4BC825200FBEEA60EA1FB32617BC48D8D94768035150B3C12A
419CC59A42C800FDBDB0052727E0E2B88790654391CEA3B50F42E8D4DF703DC9
1407BA03F9F564490B039F40B7B47AA6C23011C33229A9E1734E4720CFB62346
88B3CD8B972A0D87607B2D4075A4F9FF39572C8977B45317BECA324F3B755308
6FC2123FF48C13FE5ACC855D9B65F306C85931C6FBA1B6016246B933228DFA3B
CFC3B60904838FB662DC90461FC3E37B89595F2F813B6F0433647C99C2CF7326
D765FE30CD23262F56A90DC55E538A49593D94943988F1BD49CA4EBCD9224C7C
4725B711BCA57E7980169D622BB6F72669EDF4655291BDA95588FCC0C06883A2
27725AFFA38D1278FAB313E58889F45E7B3FB37020B6B68E3940A44469A7E9FE
5A031C8EFB2CD64537CEC2DBE5454182072565A86CFA45CC61ED3CD3C3A9DD7A
3E3A51851F4330A2946C5B37A1B83C46B15A8AC41077C52DA14CEF739CC1CCA0
9E21778845E34A7003E1C018BBB76FB79A38B8690133648D300CF4CCEAD6AF76
3FE2487AA167DA596EE6236BF43BD8A6B042D10CE2C5E41AECDD8FD6866DBDFB
D86977B917F882F2A02513F02756FFE385CB95D925AB37E000554346CBB916BB
FBC7D94B5A68F41EFA625A355F4AD329E1D5AAE319636F3893B33E0D5E21E8A1
5CE5BE3FEC19B8BA65F1B19D80BEE1E282B05C7F94A40655B2C8CAD952537942
1EF3561B7634B0CD584CD661C0A3923205E31E069165BA008F7C7216FF2F14CA
CA5E7B14A115B62544B7ECDDF1609E0C6150D084CA23E8871557BAB904345B0F
D56CA483CAFA0EDEED0E66F823A9FD958427061142DA864DF66627B953A7F768
6797569D918E5F12CBAEE27346CB26E0426E78E535380A5A623F6DA097A7B5F4
4730884AF108832BBA342EACF144805DD2914A7722BA66D0F370B863F076C4F2
AAC5B97AB7AB379AB5358C247EFDA0A4A298729FE62CF8D30F153FAB3BD97CC0
F1E4CCF4459EC55E86A2FBAD58AD853D96733984A101BA5C58391B77DF3E9BF6
F8C0146D36C49492F2176038D54AA913C3509C0BCA5ED21ED1CBF4B2D253BF88
8A234FD466F4C3807F623AB9C485C160EB757DFA75CCDCF6EB066E9D75CBF817
B4B10B30AD3BA38B271B56D06ED90B11BFF6452A437DF307AB967D0C235B02DD
3759924D31F614D4A5820B8D54BF6CD570EB34CE4E40F7D0B5FADC7BA7CA596B
2C9D34A64FABFEF9D6EE3C8421E46258C44A19D6907472451871624F63936152
9683934875C321C9EAB543F655AD09112EEF9E60447A003A9CA33F97CE95F6DA
14A1697781F8ADDC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.1: CMMI7 1.100
%%CreationDate: 1996 Jul 23 07:53:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{0 -250 1171 750}readonly def
/UniqueID 5087382 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D77639DF1232A4D6233A9CAF69B151DFD33F
C0962EAC6E3EBFB8AD256A3C654EAAF9A50C51BC6FA90B61B60401C235AFAB7B
B078D20B4B8A6D7F0300CF694E6956FF9C29C84FCC5C9E8890AA56B1BC60E868
DA8488AC4435E6B5CE34EA88E904D5C978514D7E476BF8971D419363125D4811
4D886EDDDCDDA8A6B0FDA5CF0603EA9FA5D4393BEBB26E1AB11C2D74FFA6FEE3
FAFBC6F05B801C1C3276B11080F5023902B56593F3F6B1F37997038F36B9E3AB
76C2E97E1F492D27A8E99F3E947A47166D0D0D063E4E6A9B535DC9F1BED129C5
123775D5D68787A58C93009FD5DA55B19511B95168C83429BD2D878207C39770
012318EA7AA39900C97B9D3859E3D0B04750B8390BF1F1BC29DC22BCAD50ECC6
A3C633D0937A59E859E5185AF9F56704708D5F1C50F78F43DFAC43C4E7DC9413
44CEFE43279AFD3C167C942889A352F2FF806C2FF8B3EB4908D50778AA58CFFC
4D1B14597A06A994ED8414BBE8B26E74D49F6CF54176B7297CDA112A69518050
01337CBA5478EB984CDD22020DAED9CA8311C33FBCC84177F5CE870E709FC608
D28B3A7208EFF72988C136142CE79B4E9C7B3FE588E9824ABC6F04D141E589B3
914A73A42801305439862414F893D5B6C327A7EE2730DEDE6A1597B09C258F05
261BC634F64C9F8477CD51634BA648FC70F659C90DC042C0D6B68CD1DF36D615
24F362B85A58D65A8E6DFD583EF9A79A428F2390A0B5398EEB78F4B5A89D9AD2
A517E0361749554ABD6547072398FFDD863E40501C316F28FDDF8B550FF8D663
9843D0BEA42289F85BD844891DB42EC7C51229D33EE7E83B1290404C799B8E8C
889787CDC69C6F2AE63E19FB4633FEE6B85717F348606E2EE981885B9329DF3A
74D443B2C58459A4F8A4B7E6A621F60663C8236654D6C928B65C83E299E631CC
367BFF8D0A95D951BF7FA5D0B56507BBFCB5506E9097CD1B90F836C26C25BF15
2F63D1664A67973B39B28C361C33340201F9934FF8DC61C5DE6E0A238CF02E1F
B89E94871870DD934673A9BF793A9DE4B2D031DCB687ABB509D2D5465B6BCA87
4227831B49EAFA13256C6CB10E4C20FBB991BAEAD41B7CFEAAE6ECD6371274D2
607A41227FF4FA5FF6AFA116A3D6344C48F63C51D0BB1425B7E7A9F1061A3633
426EB7492E36B0D1A0B5DFEB03A205E1E0024C526A26CCF53BF19F24C70F12FC
EA74B3B470576C28DAB673B615C010BBC37549C29D445BFF925FAFFE9687D176
13F02122175D7CD552E7E10F7E7EA4F15731DEC0536B5D1CD22B60EA8B4CC004
3035D22C10064BF81BE7917ACE3B0D42746D3753C1A414DD5EB6C4D56F23F38B
8913C8BF7C4CF42E3CE90F02C6F820BA5F7EAA929DC3343C4B3AEAA4B832DAC1
C0CF6D3E7D6F76C02571F47900F01F8710AABB837A00E0F9B1213BC384451887
44A8C0252598D160F151982F764CD4713BDDFD373BE8CEEDCF3BBFC7AA3E466F
005DD3CA504B66D5C6A3B997A7E34D9C4D738ADF4AB20F9314AB691DF39E92B0
E085E2DBE2CFC8412E2D9235CA6DF0CA2937C08AB9D83CDBC5B645B80282668F
45C5AAED5374AEFD4386E347EF3656A52F0F6264123367CDCD19246DA67A6F35
8299BB3B46EF97F9F3CF4606EA9179017F1761D4C2897F092277DEF124126253
70635CD3371EB0EAE2BA3B35939418E55631651E176051F371971CC50777BC0D
E3A79F83F2F08E11B8B2EC2A863B79433B99A558B5AA2900CE68C38CEF670BB6
C3B694F789A59E65A47E9B96BA1DDAABACF69F0177FFA4B0477EA92858415D8B
6C01C7F4876C7E206F65D05F701D98C24C8EE4EF8CE267F470B8F557A3F7D365
A5EFD38E92BA82CCA2F44FEF574F837A512AF3578D70A06C5B8F8CB779B5E195
B9CA49087AC6D76FF613A3399188E4840614777FC000C1B6355F6BD38EB076D9
815E3C25C1D5E7731E058041D083A811900E83F17FE48E27E1F59539D9E1BD4E
2FEBAD175FAA47AA552CE291E683765DF071453C6CCE88BB093913D19050715B
61288C004D34B83656A5FAA36465A67AF2F8FE06E458D71242BE18606C5F62BF
FE144F76DFB3F41D3651C7D7A2905E8AC9550F0F0BDFF9AEB61A3CB79152DC86
A0AB0681DFE21BAFCFE8CA488695C4C349D1AAF90783962DFD0E81EBEC8E1BE9
94C6625ABAC019F6B22BFE5755DCF8D5BA8E7E85A60AFC9A1294600542E6E73F
2C4F92A3BE7ACAA7EA57EBABEE64729048DF442E4C7AB7B57CEAE22AF645
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC570317AAEA74A842CFD26F9591866F5A0
9B4EAD7395F5196B36997F1D59E88165C94739E74C2B40820F8C972B175ED79D
87C9E323C3CDD5C2BEE6409017767534E19F45AFCE2C6687733451AD2E75D112
42040BADFF90F5FCF0677E04D0F721A3BD48EDD7A5865A52C5979CDA74D54F6F
EAF61DD97CE6FA77811DC7A7072212A97A20EB92520405C39A39A3A16189689B
F20052EEC2307FA7AA09D06D9D12CD4617F0B943699BBEED6ADC65D648FB8668
1B0CD94830F1532C4012464E1D2A325250626C7E5446AEF47D603D19894CCD86
F1BD0568F480882283E0EFF21761284B0FB8D0567BEB6D0BEE70C735538621F8
B8026D36B012A4DA8F00AE255DAEAD0B394E158B2CFD9BED0AF86F7545334A5F
8F80349100E008E9AB688B783D4650BA29640F5905A30F2062765127A2D3908A
E6DC85FA1E48A449D31FC8F6E4BFCD230AC3871A6BA7D852DFE04663DB61DEE0
801FEF1CC819F81726E3B0D16109277C8B702884AE416847AA9A740A5A1332FC
50FFD39757662D3199704FADE725426DA0758E21C7C064BF0558268464D8C104
E621B587C6EF45CD28AD2870A402A8FF424BB8BCA96BE82EFDC18F32B5A9D2F6
54D78212969C51C127884064D27F69EF3EEFD55E6DCC802FB3032C3924A9FF28

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
9560176671A33FC55340CD04C2DE46FD812FC2711A85C24A362F8455702DF96F
B01D007A1331C5C7CA0E329FE788CF04C2A89F841B69846BD0B2A9FFED39F625
E42D4582FA80AF59B6ECC5393AE740553FC1475826CFE884D980372A23518B71
8B4DFCA497BD0E02C2FBF800310B3877873D76A6B72393A7E785507E41C11890
13E8C1C3C1B4D4382626393C0E955A392E26857A277349BC65D092E481BCE6EA
F4AD36C3176A357D407B9BD094385D85A832B05E1475B4238E8AA54540B318FD
E7F0848C1D58E8268B7404631ADEC8F94A8C572647DB32CEB25FAF9A65292043
B121C375314DE8D50C1EBC4FA5BBD87166CE464988DF41C91298CE4B10190DC5
42A4043141B8EEBB1D8D95D11555CEB77466C01BCBD0754174F8E03A31D41D89
74D4DE0975F06E2CC24B3EB6C11D6261488FA5035E7C4FCC7FB83C1EA1F99556
57BF099237761E2E17E31FE69D6180F8A6E6791F31150478B02B0CB8F184082A
CB6DB3C23A75398E7D0AD7B5C55475A8B63E20B3FD6CC23B4B460C7ABE61E031
42814EFFE4108CFD9400089395A4C26E881BE5DDB30CAB058A3864F1EE3858DD
073AADAEAEE443AEE1C4506C93472EBCF13F0B5669E35591FCEE3FF7807FCC43
B1369509ABAB20C5800A6616194A633586A9EF4F156BC227828F11DE00ABF93E
2698D3995EF849E37F517DB037F77D10DD23D6C38FD5E7B3C04A54A2D472B3F4
34AEC4091D8EFBB6B70ACAFC88C593A3CB916FBD12D9C403CA95009CC20836B0
FB5FD730010BC221165D6CCB1EDF63E83EB6520B3E71E353B1CAFB0AB7100B6C
14292A69118457D587AF3E3E137C7E05E7D13F11B89B72516A905567FB2FF640
3D0D5F8B14B3735103B54E95BC805912D4B611ABBB84FD49ED35C6F07D7D5268
40C489E157638B7ACF34872E83556056BD2EDC21A86C00E6B2B28F091CBDA36F
F18EAABD2D03EDFF1ED2F73E185E39AD4821D14E7E48AAF6AB3C06538E30D32F
350D82B1558398F947615B2DDB73998ACFCC91A9C4A5511B01B14B36033D957C
4CFC0CD38C8C1AFFBE2E38B27A72310EEBC9B38EF5ECF90BB11F3896EE89DF2E
258BCDD9F48C549EAD93BA5BC30FB78593EBA409D712DC9F915DBB704BA662EE
2E5F6EB7C2671256302218FFD70E3DE2FA38A4061B0E7E79E5A960DED00DD5A3
CFF73499304C26A53134D06E05D6F0C11CD9F612A82E23356863FFE7BA46C53B
CFB8A4523E966F659631E65C990E2E129863DF59A241670DA7CA41B6CF0F1A58
8FF55CD8938766A9F17A3414CD87A2536565955B758A7D04F55D8591ABF2F82C
E5011147594A8D4E88333C8F71E0917838B4C5351F257854DC3F0AC9B4452D6D
2B2049FAB1495187D1F18D82AAC110A30A204615E8F7D5AD7631FD463E559D20
6CC9518EC1E365CA373B0710C04ECC3BE29D64F3C4B1186FFCED4D8431BF5091
85760A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE28661742
70616F47ECC9F6899E06FF70A2453947BFB3472B873BADA46E8AB1FC12C5A799
C8E9B1EFF93D3DB416916669C677ED0D417DAE232EBF3558E69587474C4222A2
D90491C617151512DA886550439ACB96ED016E30DD791A06C75B713F6DF765A4
4C3E2EAD39F98A50634CF2C664F1EB916A3B90C50B89DC5B3FF2A4AAADBBCC61
B264B6020BBED987A3455D763AA07D144D798CBF5FABE0BA22DB0FFE4F18B304
E461FA2515E8071EDA3AB0897B8F82840CE125E69D90259BF199B82D21CE5554
A092712A09667F43766964B53EDA756281286C96E21F13C4976A375A695FAC28
D60B54A1367BCF59100D0275E1E74ABA8E536F86D6B406080C9F522B8C171DCF
CF83E4804DB962132409F49168A57E498861F1B9C67B05BB49DC9B08F62A81E3
B9C008DCD6F13E45709626997AF9B3C37B6C99E170268E28647AD3A3DC288075
FDFC19C2F4326DE9EF1D2EFDCB8695C6C8C1EE4D9CBB28447825CC028A1A2DC4
02A6E2A933A7D89457D2A93D26DD20C885F716DC0B1B6C90A6D7187F0AD10304
22D7DFAEDB3001B93145F8E4F3F615403FEDD460B3185E60D2A5429DF046E1E5
6EBBE29D8539DAF882FC0C677D80D28634ACB28FA010D8E2123141DFA29EF3E3
FC683F1133C636A5E95A930C548635347327AA43EFCBA9DF35733477C869EDAC
128713420C31A5A70EBFCE1EB677CBAEA293482FDCCC96E36358F9EB0A9D99B6
A1B99BF948FB601347231B53BC1B0DEC5D328CFB5885D368AEC77B06F23E25C5
0F250E56221E4DED107350454FBF11FD46E5F5524AAEF1A8ABF2C20454A601EB
66978D7B7C8A127127AF0AAB738B9AF0786714C8577223C54F5D33E0F34E326D
B778C0FDD632D591FD4E04596C85FE8371EFF4812796598E260550B27DA97FFA
B173F5C48305B3FBF4EE32E21736C04F0867F427CA453744E0E08EDA0106D928
B25448C637765428636890FEBD2EE88D0CB6E7B70A8B26503C9315298F27B031
967596336088CFA6010B9339A2C76D3A0EAA54DBDC152F00B7E2EFDB6C45B9F1
5F1364E5975B735AB35864FBAF5183DB829A77FBE801580DB79031347FBC3C17
0FF2CE674849429AB65F0C525D6A4C5BA71024DED404AE213AEDE5F026958521
357B47383EDDC42019BA1473091CDEECFF82C61946E566D0C4BE729D5A27B609
47E785AC772E8DC1D9874C02555A4D772119135F4B718230C7FC2D128821EBFE
078B10174146FF6E5CB57CFA9D73FFF35E4682C387B4A94BCAA6B4640A3AF425
7A1BCF8A52B27B277A7DAA24DDB22C33D1D0519E499CDC90398CB781307EB737
B9D82084FA6D2E4B85A08DB4F17E2F0F53E58E308EF6AF0FDD9DC2D8839A4187
19667D840968C6EF91516E87AD18EFF191406BE43AE56F1235C9BD0F106F7EDD
46CD3B3F61FFA854E815857E0D8A56F7D6A49D4CC0116CAC156433E25EF6D8D2
9749D22E2FF0E3810B3DB1896503A270FF9A6845C1655D09772CEC436461CBE5
A131ECE09446F52607766A2DD8E6309DB3C40DB5A17C59DA7E172837670495E9
C8ECF8913DDF54605E5DEC535576B47AE502BF08277D50D801444FC5FBAE09A2
9FEA4EA8D9856EF5A73000162AD3FA0B94D8A187DC1355A8E61CB77DA441ED69
608129848B6D2D4C98A560A8AD60631F371A0FBEA16BA97588CE8AE99F1E55A0
C71FDD6F26513E8027912B9422CF46133BF5F04E07332454A2C3FA1866773848
43F67982FADE0B573F68F479EB1533FB87684BCFAAA779C61629E55C90929F01
5482F3F6509F50798A2140023C069CD5C3F5726FA0AE17B3B62F2E47A28DF558
A1A3BDD6A99DBCDE1A338E9AF607EF9080476FA41EC61D76F7E290C5EB7F49A4
42376BEA190C52F88D7A4F86328EFEA02E29B14940DCEEABF37CE73A09DED56F
598382E7717AC0069039F2496D0ED833544A4484D45D4A01649A2E8D8B4E25A5
AE38CC4657F94B7DC9E1C3E69F671D6679150B4C71BFF0D92AD9E91989FC18AB
ED96DC5F637CE6E190B1B46446514C7574423080F5CBE350313D142C98D58ECD
57B6DC9758640A247CA7D584C4139B219857DAE54A83B338DB44D2D2E7CAB7D7
6BE896BBAB69C2E6A24C6090118BCE6803D8D3F8EF9FD88EBC66D52CBBD1FF43
532A318F194DFC20017655B05BCE84275EB290ECA6B20443DBF597285CA837B6
79795847E7C72FFE4921610220BC241B4CE6E7BE3CF9132AD2406496586905E5
A539B14487CFEFBFAEEE8E161DA6D3E71FE99D4D27C8C9037D24099D49FCC5C3
A4E054FB7088F440257A5749FAD6AD6B78B3E0602CD3BE1EADBAD503064E0ED6
1A2A62FB36F53531EA4F970079191E79E5E4231B9B8E45135274340CEF9CDDDF
951488DA1F272326360260A9797DDD53D1CE931670FA1DBDBB75857C3500FCBF
9B41EB58239B13750B2AE34B2FEA0662DD5C0574638B82BCE9859CE2224D5C9A
DE710631E3608ADBD6FF40FF5264B2A8B3EB988F3A6D379CB68E5A460F0A21E9
942992D44F6DD387A6B9526978EA2355FA2C1CB2CF45D54FA5A2FC79D2BE8F01
CAD9CE392959C39827545C8F3E55E188FE7271F3ED074F053D5CD6E15E1067B1
454DB4E05CEF68641E629BD06CF7B9A49944E80BD8C6704AE8B731656A8FFCB5
24AEDA62339D00900309303B35D3403D28B266AA299FE642ABA7C7ACFCCA97A1
9DBE8457F97E7B1D4BD83508E42B95D4F502A82A7D37C0DF204ED26D569B116D
B8129E92F8B80C2355620C3616A414B60AF765CA1AE517BAB5EB7CF653FB06B7
14D5112E795EACA09589F3DBA6A7689A3DACDEE1E20FB4069B0068A4DAD746B4
6D4828F8093DD715602A6276EB84BB41A12C826058805AA1F77EB0BD7AF6F492
87C9081F2801BCDCE95E0EF9792490A16A5F5A570FFEA5E7254D6C95F8DDD9CF
A96E11AC87441E8C4C6734362AE8B370E42696B66A78A584CA66AAC001504F5C
E5B75928568B17979BB05B6C50095D089B73C799BF14CB445DABA748CE2E0BE5
0678EB630DFC5AC7E16B9A4E821C021B2353DC3E9B735E4E69F0C2EA0AFE2D77
7B524EE65BDC785086C492B8CF7C36E9D44622BA68BDB459C12E3F662AF21D62
5B62C7080918B18B1331FD627AC098AEAA0CCBDEBE2B7667541395BFC5C69BD9
2E8FE7EF4231446EA8F147D45C76966C07EE7F122E4862C9074A8528C5E0345B
892B19CD0B9CB5C53376E4110E98205E17C2E2D6ABAAA04BE6171E7A77915880
41ACEC9F7CDA096FFDE5C8107BE0426138E08C9082932162810A0D6C9F81E72E
81235EC491F2E56F9466DD02D44942CC4C9E2981A6AFCC249BE7AF28A087987B
F2A41BC096D06F84BCC328CFEB7410EB9F868C68AC2B4FF7896B0DEEDA3E9E72
0E7DDD1F588306AB9BD1199008CA720402704757D0895E238EE904A1A13F4DB2
D1138A49398EA55F73FBF9F9E0E5758D00AC752B59377FCEBD956BA2E437B660
FD5D583146F5056A2AFCA873862EBD1DDE86A3A136A423A4348C954C15FF6CBB
FBFABD0507942CE0602A58DEF3B1E28E98EE63EFBD809480CAC70AFFD3FBAE17
4EEABB670F88DFF19DE628D1991573D841131C6CF6382FE4E8481DD07611C6B5
D1D168C09238EFF1785A08E80AB1AB0A2BCB9AA361D06186A00AFC12D5F7B11A
13FED31EB6AD0DD3758BA3F2D84C36980E487B0A86D440C8E75164EA40621C52
AE9777B90ED679A69E394F8808EF86208FC2FD299EB4CF3FE319B8D0B4C24088
C2EDAD7E7E553E9073A6EBA840716AA951111EF7148DE468580B8453B44FF162
3136DBD2316EB8A8329BFA5A87534A748FBF8C09B949AA414B14726ED19D80D2
56BAC100CD24375C2F51267C2BE82B5A39785E6140ACCD83D60E60197B021D52
6661C8A61122E3F2307D2FECCB18BF82D57A8205C1E5822E33BC4AEA917AD593
4442648D33C1F8332A551BF1FEFBED2904153DBA41B1454BAA942280CA135336
FBB82229E5BBA182BA3CC18A88C9C5E9E4FE6C13CC14058893E291BED22126B0
21F4E51D5B6667FB5D84EC178941404811F15D21EA783A3106BA350F1E717E9E
C82B84C3C2DAE26939B2A2009A79FC407BD9C8BE16F2D25F0BA086D27813218A
2CC74E20CAD08B77087423214A12D810E7A33C0F884E7760CEA7763365C84A5A
3B9E8A8FE1E6AE1C43DE587D6E2EDCEE63A25ABC7C7217CB0109EC43A8B72DC3
F22C73915F01A04873CE1AD7FACFEA23A0BD386DD590EEA3EE60315041F7CBBB
B2A8128BD06A286F7485C9242926242C0F470EEF8BBEE27DA16A6C69546FA9F8
DD443C213171AD17A885D3508C10265111C7B86273456D8B4F2D046A1DD514AC
D8C92E1FB54C83909A7C9F4D5097AAF19CCDD3CA07435F0D2C7EE881E7A03E68
6A43C8A9469B9CE31729E48D90E4A250B00EC8D71FA950870E00DBB650852F6E
FFB3355FE5FC758646BA704DA55A091E02BBB7A12FEC38AB1DC1D50F886E99D9
49B6C3AA9A3F49397F7856B56EA0D894AE3507A8A9DB0DF8F0F2AF9F4190DD30
DB77D1225C8C82031F3AD18C8D9DC4F337078F5E4820757D621001F46B95829E
CC8890076A7194FC5A58C41EF51A5B7193A113979F2AC5FBA759DD5FF004FAAB
82DE779F211B00B3ADDB5332EB72BEA2ADA33BEF7123D83B20458F6CF4757C75
D9AB1280D4B61F283FF0D3A6EB8AE1DF654D6FFEADE78932B9FD6FB36252A404
357FEBAB8A2A1D06286A9DD5C7EA6E8E980D21D490A9E449719C1A538AA909BC
63B2C7CAD57FD60E1350644CDE2DE4CA5284BA18EA257E116FB06E574E62CD97
E10A63BC52F76523082641F23FD5383217E104B43E361088E7F8031DE425C86E
C216CDBA4E900B14B96EF100B1C1AB60407BC64C362F8851A1EBF8DD09F5C13B
4B7EC047BD964C9155A2D93B774760C01FF580E7E7AA99D422457BD2C112F4CC
026D397DA0EC2F3D5BF450DD58F3DECC071153F995DF04E520BC5D7E85D0CC8F
3B94F42E587E22D6965BC88EFBC891A152A05B9FA93A472556BEEC0DB81DCA5C
49C7786AF8D85FD4233846D63191570D08A4EAE1841CBDE87FB488A136342BED
5ABFF516D92F0F93C574AAEFF62842FD949FC5B76C8382B67FF3DC46543F46D3
669074D92A81B2616D41E23FA80159C31665E3FFA559F89AC57C2895C82A77FA
E16DF88FA88AE2E40EB594C0AE483DDE9DACA793DD15530C76DB9C91844FA6CB
C939AE42ADB000C095EE147B97C8B3F2A9DE71A76F8970A7DF21BEB05F1145D6
7254F96ABBAE0FE2198DA16B5D92594F1C9F96C3E74649D0E9D1C5B021AD76B7
B8A2A1E887AD18C6934444A1406661DD8D32ACA0A53EB3DD72D793BAAA0E2D4B
D386B73BB89BA7B411BA2D355BB474DF77AA81A767D8362CC626526CA0595860
FAF727285A78D38A7D00713C8C287D0C90F6ADC62E5ADEB10224572C4A4D924D
C41175B080AF0379B16024E3A240EE1ED15B5D3DBCD7A7479ACC5749733B4B44
E53BA5FCDD90B198D1CABA023631509DC7553066886D3412913D80B069AAAD2E
7E4AF4DDFDC8ECDAAAE4C99EB3C2840924253063C0B9D2DEE6980F33F97EBA2A
7099ED3601439F74ABB7419D4BFE98CDAD44511FE31201B3279F307957A62DF0
5E352D096F95C2B47208E1C977205056530CDCCF9F98052CDA2891D8E6F8F9ED
B84CF20252686DE13F32157B01E8DEC3506564D3B993F3C3746A510EEE361106
F35F7BB966C609457D32E35085B008C4ADAB77FE2CBE2DA0A512BEC468E261FA
08F5E2FC8732DE92918723687923DB63FE9767E82B7E0AB66AA565FA6E5FD21B
C5803B30E60A46EB9B5396392BC1586005F5213D73F94D438484D02F24
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.1: CMR5 1.00B
%%CreationDate: 1992 Feb 19 19:55:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-341 -250 1304 965}readonly def
/UniqueID 5000788 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA1F9B0FF4CFF25B8E64D0747A3
7CAD14E0DBA3E3CA95F10F24B7D5D75451845F1FB7221D7794A860756CFBB3E7
704A52A22448C34812C3DBEDD41892577AABA7D555E9298C1A0F7DA638078167
F56E29672683C51CF1C003764A8E7AD9D8ADE77B4983F56FE2D12723AAD8BF36
682CFBB71B1D12210144D39DD841A971F71DB82AC6CD815987CDCF29ABC3CC96
5EEBD5D661F452C6E0C74F9ED8D0C5B3755551A172E0FE31EA02344176E32666
14B6853A1C303A5E818C2E455A6CF8FC9A66DC6E279101D61C523BD9DB8EB82F
EAF4D7FDF6372383C0794C4568D079648689A199D4B65BA646CF95B7647E4BEC
83856C27A8EF177B3A686EDA6354FE9573E123C12EC4BA56A7E8BFB8F9B75147
9DD79A743968F36F7D0D479FA610F0816E6267E5CE327686A5485AB72201525C
FB3B7CA10E1BF26E44C24E1696CB089CB0055BD692C89B237CF269F77A31DC81
0F4B75C8400ABCFDCEC6443CD0E81871CD71AA3064ABDE882C4C52322C27FA8B
41C689F827FB0F8AAF8022CF3C1F41C0B45601190C1328831857CBF9B1E7D1AA
246117E56D6B7938488055F4E63E2A1C8D57C17D213729C68349FEC2C3466F41
171E00413D39DF1F67BC15912F30775AFDF7FB3312587E20A68CF77AD3906040
842D63C45E19278622DD228C18ABDD024DD9613CDC0B109095DB0ADC3A3C0CB5
AB597D490189EA81239E39202CBC7A829EB9B313A8F962F7879D374ADF529BD0
5533EF977142F647AD2F5975BA7E340419116099B19ACCCC37C5512599441893
4BB8166C90763910DBD81A481648B1B459D9A0714415C9BC840AC8FC69F5C765
44629CAEBCBA4BB3784231D36C9060E841D81FF0241EB7C7E9C37D13D7CA21B2
13D74257FC86D5BD08DA7A52490A985F714B817DCAE5C24A9C922809236CCF58
4EEE3A01D7995058FA1840EC1510DF95174C2D8EE90F048523CAC7108AF34486
33DD30717D5C3684DEAF8E5886A4A5BB212D13271608C802DC392FE00290485B
8C320E6B3191EF1618DA21D12AF18DEDB74363B17657576F41043340FF2E4269
F01A9759E828ED424C06654AB54FED2EDB51C3A622C23701AAA0A47317CBA333
D5D025DC142D2676CF9D514BA3062663AD77760F8F87FDF83730542D563683AF
E994689D579122A78E44F262525D3CF265F9019699E95A336D9B2A68537F4DC7
0DEB235B3FD5D2E49506B1F9E3FFD3B850E26B2B249C66B982B6E160DFDA4920
44A4141D006DAC8CA50B9FEABDFB101F31F01AA06E991CF28CD5D63C07B59FD0
D4221A52DD51C5F014F1CC3377B8313D9B0127
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI5
%!PS-AdobeFont-1.1: CMMI5 1.100
%%CreationDate: 1996 Aug 02 08:21:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{37 -250 1349 750}readonly def
/UniqueID 5087380 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA06DA87FC7163A5A2A756A598FAB07633
89DE8BB201D5DB4627484A80A431B6AFDBBBF23D4157D4AFE17E6B1C853DD417
25F84CD55402AB88AB7EEFDEDBF2C2C731BD25567C53B474CCF739188A930039
098A197F9C4BE7594D79442B2C8A67447DE44698321145D7689B91EF235EA80E
B600AA8E238064F154284096C4C2554EFE8DDF13AFF8D3CE30E0999375C0FEE6
F992DEA5FC3897E2CC8B7A90238E61E41622DE80F438DD994C73275CC52249D9
F6686F87F394FB7BB668138B210BEC9E46415A1B58C990B81E7D7DD301143517
4C2A259D2A0A1E200F8101469C10D7D537B0D4D39296A9AB3F132DA9A3B459B0
F850E2B3A03BDCB35AEF82285D19C38F474FB414F8EC971B994D1C7DD753B271
2B71549DF497C665DF0F266988209D9EB616E4D9BA229FF984E7A886DB01FD21
48ED2E4859FD6416C2CE52537464EA884C8C9C2D1083E2B83BE4B766474C23B6
6E8EC5003200AB10514BB44D14CA700416AB6B2683E80862E7D5B49A05526A32
554BB23AB8B0824BBA198E3825CE82380CC0FECF46651E3E5D77F09465E73164
20342822F29572BC7F73F2C3BF95ED3BB6FDEADC20C6AC866C4F2C679594D7E8
8D944704A3C5D771DC39503BECAB89F34D8CDB8FDB91AFE21F3F0260D05E90C5
73E2C13DFA022C4522E5918EE25038A0498FBB530DA33B0AE238B1C6ED03FC04
2BFED8236E07820C5BAB411EAE1B31D93A2FA7C374B1725FEC359ABCB88E2C89
214529A263D795AACB0B95A3AB2F4E08EF350C282CE521716DBB06E5B8291B3F
5D4ACA230FA192F64BC902A4C8842C0F916F92FBD002ADD408BF0401D0284FBB
F05D4C6DB631420747CC902C5E1617E6573612FB26C8378DF41FFB5048D3CF06
4893DBA48EF4B043D760F60C75712169D16C83EE020C45369E443E853E1809DD
F395B812067D6FDBD26111B34F42C21036AF952D0D767FD17F6959D9FDD46005
D64FFF54772B50BB9B173AE79702981F58F9F235C591F476A31852174DF0619C
A470359153DC32610E782B204E7945515464DACE9099B81EEECC7EBD4B5126AF
C3FD9DDFB329AF1C95C41FA4A5F6958869509A23BD7210386329771FA46FF926
0E54AC35106253EE140449425A8670E1F92B178A02A58EB57540F4BD8110E548
BB584EA6D625C5F5FE0124A98E49915F1A1B95D2125874360EED1C4379FEF3C6
90E5780C20309F11F2F23FAD635C44BA030B39EFF083A3ECCDD2641DCA8AF5D3
38B381954F72A516C2992AB4AE55FE4CBBB44260092DC6B313424C9E34DD8044
65A0E8A78FD38215E889E8B773AE3C54B8F896AFA7E765E4F31FD704946C1815
AC5B046515977CE1EB7782A350E195FE5B96814C80F865DFFD055D9DE90023EE
6DD5076768CDCB71180560A58FDDBF895AC7072834A093F288C3F91B1B614EF7
A5ADD5BB265799F2ECB2CF793430B5F1EC17CD74998DABD45E64F964B67BA918
D91BCADC64BB3FA90AC50EEA5FCCB17A86DE661F9D0E8B2CD773A9EAABDAAF57
9A45CD29D02C04D292ED66A0416582D19A8A7F0F915CA2485544045B7AB8B842
397057475163DD9D9B4B2C550339293A2D76E1A1BFB10F9FCDA2A418E6590C56
09E53DE7B41EF5857A1B7A8A25132FCD0024805E6E20877AF26EAA01FF983A22
4C301123F24807D63BDF9AF63A2F237B7FAB5E0D574487F8E8F660220241C6D0
C89AA890BE875580A99842AC20157BABE82D2B7728570C93BC4047E80EBC2CC2
D41AD332BCA614109D2CC1A6C60761A5793CFF0D1771B9B1959C012B7C5AE96E
C8790BA070F7B942CFC6ABFDBCDD9B23E83A6BD59C20F681C8728DEC522B3BC4
E4ABBC4BB9422E86964A3D3103F93E93C327E4F6E5BCE84CED6452AC6B7D46E3
3C937C6A594CCE3DB50B7EA69C69B87A6F8EEA80EEED4FC4BD27C1BFC878A7D2
B8A4C3AAD97B52BB2B351B76F2421483FB84BD483CD79649586F71D17952C623
659583BB7EDAAEBF0CA3C6AA51B2F0000A3176DF587FFF615EF462A3B4AF5556
39432D355C4F4E2AF93BEA31D570328031072A9B4A8DBAD1591CE5E975804676
BDDA27BA988E4C7597F01C30DC1978C2982581D721706D0B8B985648A34FD049
2C65FAC5DA02EA6459665414730D044F2EAA8CEF0BF075376374496DC0E3AAF0
2122475B043BC05CE35B6183613CA72F988058C2513120355B07AD28BF6EE968
FDA15613CCF1E4359F9996AA71C4220FCEF49CEEF9245F70CD61C8AAACD0C656
434CE7D86927B6F546435510D7EB614A82F8C3A9FF4DE59F2989EAA0A0263D04
DB475110DC670F5CEABEC0821A228310EBD7FF1AF8DBED0107C59C5014995C5C
1009C2CD21479523B3D4B20232230DB087C28BC28B466D83E974B43862865811
6B7BD95F5DA9921F1F648E93D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LASY9
%!PS-AdobeFont-1.1: LASY9 1.001
%%CreationDate: 1992 Oct 23 20:19:19
%%RevisionDate: 2001 Jun 05 20:19:19
% Copyright (C) 1997, 2001 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.001) readonly def
/Notice (Copyright (C) 1997, 2001 American Mathematical Society. All Rights Reserved) readonly def
/FullName (LASY9) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /LASY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /a49 put
readonly def
/FontBBox{-20 -196 971 683}readonly def
/UniqueID 5011948 def
currentdict end
currentfile eexec
D9D66F637A9E5292A4933615152D29EEC26E1BED2E48CAB7AC058698EA30B07E
F8BDB66981B14445E1107420FDAF32EDBD5C26E35B334E3AF24373B2A13984D9
1D56801ACCF98612DE2C19685E0F4D52369AD642D169AB57DAB10665C6C01538
4E7DF30628B47D6551F93A50553E592B5E1540B411A313F39E4149341C981D3C
705F8AD7782F59531404B3C001D8B882E0C5468D00B26040A352ED823D7C8DF4
B632A37A034C6304A39F28739AC3D634CDC707B53474E63135975E7F0FFF2458
99878B3A6D8D7AC6F2A2728768B8C2226075299B8CB08B76AED9A00BF448A646
87014E8B1C1723204BCBB97BF0F735E436F1805B4026CA792A2464E1FDFC4385
B407DAC19BC7769BBEA6BDD0EE65133044D18530C5A39158A5EB4E1CBCDD814C
9F326497D38C51A121C75E0BF2CD79ED11C7B1A5C36F6CBC2C127360675F3C6A
FB3C478FBAB07212200E28C5071E1833E27D60FB815F448550C55F3317441B25
406435197E11759CA6BE6B17AC8600E4653A99AFDAAF4FD54D28638136D701BB
FD2CF4ACFBF28E48CA313CCF5ED2BE032B7C9A07ABBEC9E6F6D90AB799716358
37ED7BFC195D7243880801BC54BA5EB6CA604BA4DB433EFBC4EEE710ECCEA919
DEA0BEAEE68DD8C9204DA9FF4A4B9DF203432482904799DCDF46556C1E68AD87
0E39714C510904F488AD722307DBF46063E8185CF7131A749844CB5CCC0284FF
62A7EB6B0779800ABA08EF65FD4A17CD265E56C22DF32F6779BF6269B21F97AC
9BEBB084D2E7C04244665182DC0E86CA91A8B1B8E28DEB6D7EEA105D839F1054
ACA14DF8CCC8A94481ACECED1628987F65CF1B313C1588EF96342B837DCAFFC3
AF8A8725C5E02DD1ACEDCE5391538883E699F8A7A101387F0753556A0B8061BE
AE0B2899DCFDEFEEA6C97ED50D764F6C7312FA4E12750B3CDEB9934BFB02BBE6
8B3EB028ABE584002EC7006627F116B1FE79A182D034DA8FD1C2D765D18C29F8
FC8E7FC3EEFC23AF7CE0B17F3065602D472407D6547A5A02CF04715238B61A4A
3DA50EBA90DA8EC4D2325FBC4D04F5760C9EEFAB81CB6F355F5988F91F9AB64F
FA390EAA719D3B36C3167E6B6F6BBD25829C3FFCB837DDD66EEFB025D9767565
7587E1F814E0470700130DFB255F9FD8BCBE749C16A9BA5F3ABCBF70C6DC4B1D
CEEEB24124ECDDB40E19492A38C398FB64BE556EEBBACC5500E976A2699F3903
C7ACE6639A526598D53F92FBE7C5918D1003C38E238655235F2021525E99B864
1C4EA045ED77D77D9A7015457A496E46C08F47F995E36D2DE80E99D39A5D4DDD
C822191B48DEC46B7AA5B83065A53D8E513BA18918A121E402D4205D7AF1E00F
0A709AECE782968845F6B1FCC3F8966A663362FE79769B97A0C817A3A8D80ACC
CBC422F928748C2D3726F171B38D03BA56EB2A9D265950D5B9BB8C8BC8A2E322
5BF8E28DFB65E1A1C6644E58B8B06897B127B0DB0C3215D366EC297A312DFC4D
7FCD00577D5381141E4254E520807B36D11DE44EF3C086440848B136EA262F60
73BAA2A4D203D04ACE7405B4C3F09703185E343C33F37073116CCD00584D1C27

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{14 -250 1077 750}readonly def
/UniqueID 5000772 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A30EB76029337
900ECFB1390CA5C0C3A04528044F266BA17BE487C79B94FAC6D6484684C5BFEA
87BCCC77D40AD11552035E95E3007126418ED49B68468B38A14E88E68A267B98
076F1C9769A5AFBC285E5B158EAC9F926F1D6C0B8F1D57D9C31D25AE27123518
9D2CD92E5689E0213089BD268DA5E47525CB8EABAA4B78A15AEA34705889AB3A
FFB8953B5B3482E52BFA0940630ADF8C0AC2177D907324299EE980E850F203CD
B627962F43D5A678C44243CDE97853BDC6AB45FD5C09AD274DAF89929F583CC9
CCC24BDFC68B92111055ABA5F26D2DC67C70906F71C2957701D65AE746A60C30
40E6CB24B97FCDAD0487AE38A201FBF0E41BABD2181981A71940F1E707F91E5D
C8CA50CB16D8702D188E56D014D92F76CE0B52ABDB9110E32438D2BBF3E6A40B
7B005F10BB437812CAC6ED2996F7606DC962C4FDE207FF322782C343DF44CEC5
FF06A55C630C20E9AE1B0D1C5673753C43BA0767D65D1B451CC6380D8BB3C4DC
81E8FD8AA79BE993218686F29D3CD925566DD587F541A0DA1B1CC3BCEA2E6C7D
5E1016F6917A871F1BBAD96AF9E867735017119A381FCF33EB2D3E1E7093FD90
CDB0CED4818CFD9E201A03430CEC713620BE0D3254158931FB657C6877C1B3D2
24030F377820DA58F4B95CFE645109F3F1B80DB5FACFD7D05AE2909EEFCF95AD
9CB286C8B6C075CA2267C101B736139863186C193E31085E7C9FD88EF8BBECE3
933542C85309013325B4BBFE9A5B606780C8580ABDA2F5D0064EBFC23939B307
08568C3B7F5F053BF367DEBA349FABB9F760C44D100BDEEFBB01F27BFC61F51B
C968C721E78497A7A3B90094FE11EEECAC09BF131308B37C296CDAC5DC116356
68D1807DEE58977065E6451BA87F9B26CD215F3DEA955E0FCD277E6D48D619BB
8DB40BEA8FC0A224BBF3CDAA0036AD352BC729DB663176034613936B747D65AB
64C2D954A113AF39E1639A4FC9CE8AC7A768D1BBC30B2732901B4EC86FC5DD3D
0C61E7809C2340C0D13720A0C149EB48F4A9DC856A6C32A3896ADC93A0C3DADE
6AD680DC5768EEB471BF6EC1CFBDDC855A2955C710E88488E6309FC6B3070504
E65FA6DE1F3BCE2A5FF4365CF216D5948266B1B10B84B376853302E1B986C209
CB2620E48ADA567FCE05D90B917BFAEF327B6517EFFFBC232E5DDBDB8F8F8F49
CE9A898A62238E34EAA84A005CF369D20455E6D2C2C601F21086F8917127F405
D5FF3FEB86D595D25C048B372318526F320EE849703834D71CE5D51F3E98C1B6
EBD3E34F748273A9D55C8911B787328E252D5527A3A62D96C1C15C03E63DB6C3
1C4578C1F07E9340BB8F6FB32024658335685DDE5B08BA8F66ED91FC7B4C82AF
EDC2DE2EFF84EC11F53CE6207529913305E3AA4F28D5B0040FFE1A5F8FDB7B84
58F65191A560F32364679E8687DC21BA93DFD1D307B43450BFB511B6C12348B0
3B23CB6B82F1AF1A9F81DE180D70095F94BA1FAF7A6C7D9C2AB294BE8D320F81
A36298D92438709C08A0C26224481E709721FC5C72C08ADF2087502748530363
2FD98A2A082C71013EB78083E3CFB864523AA00B869D5E0DDA3C9B56D7AEE15E
628F6B8E0315DB791BFB527B265E7948535FA23C7E81FB79BFE67F99CDD71833
2652CA21218D8D2E0E6C3CFC9E61369B063E2773E8E09C807DCE4BBAF5C422B9
1EBF4EC49FD55DFE667198754916AF16B72739F683BD03B4AB9C19EB0B71862A
7645D318EA36AD12CDDDC4940B9168117D429EFF698A00C2E3AA23DCB2773657
6B98D7D52DDDCABE153E516AABA962208C62B509C1DEE4B2AFF3D3122280E59E
14C19832E15119A1CAF6CD758CA96F3C8CE4164C913FB69095A688276EB6D4DD
D9E5A59C88F0823AC1D69ED6521A239188BA49019E3B1CF0E7D9EBC4CAA77D31
942E1257C894907DD6A53597501B95E727DFF50ECBA0B3B542FBC8AD51F755F8
9E7C0FC630E6192CC750C7DC96679F738037508087B9E71EA673C849C9390091
12B0EF3F0CEF7E230B6951710ED718905AD44BCAB1C9BC3739D2FBF124982C44
A4D398FAB1438931590B6D3533E0687BF2E1ADBA675B5F2090B547F0F2E93F66
FEE537B23CB9B5D2921870F9CB6CF02CBECB8F6AA0F90F78CC0F3D6BD2FB5191
2086DC6C98F1A1F2A3E60B25D836E643916D46F565A354B42CE6E9AA7DD302DD
26D08161320054F8C55E8433A6807DB4D61E9DABAD9781E85FB3DD4B2ABE57C1
803889E8941C51CB5A5F3B18A43E49B6071D73C874DB2409806EA65A9F0F15C2
3C55A7B2D74EDB5BF26BEE8B2088125CA55CA1A79165109BA75A353FE7FE3E83
D3024E824E27E9C31D85B9F10EE1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: MSBM10
%!PS-AdobeFont-1.1: MSBM10 2.1
%%CreationDate: 1993 Sep 17 11:10:37
% Math Symbol fonts were designed by the American Mathematical Society.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (2.1) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (MSBM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /MSBM10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 90 /Z put
readonly def
/FontBBox{-55 -420 2343 920}readonly def
/UniqueID 5031982 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CABB9FFC6A66A4000A13D5F68BFF326D
1D432B0D064B56C598F4338C319309181D78E1629A31ECA5DD8536379B03C383
D10F04E2C2822D3E73F25B81C424627D3D9A158EAB554233A25D3C6849ABA86F
1F25C1667CB57D2E79B7803083CB7CC0616467F68450D9A3FEAB534EB9721003
DBFEEFD050F3AC3492F5C74162A9A531ECEC0F47610B4940E946D21CAA771D30
A6C27ECBA11708CC46C62396BF9D1990D579D0C394899D24FE7A4382EA18E7E1
160E7283AF5BE17254790628E79FCC206F28B5566075B3A5697D5209062544FF
D85FD89D6F43D6588B242AB2666B5D2861CD38A8CE676503EDFAE84D12A71E77
8405E468FE391F4F3F50D2C57ED55512036B0DB8E76A7EF413ED08673E56DE2C
16A3B65CD478433C0D2F9FEC4E662D54DAA43CFA6957D2A9AF8979BE06F70B68
ED4C8C493D6DAC4971A3F1D010A7726D084EC1074FECD7D12D72AE16C26194AF
21AF5774D9B860EEE8608D34F150092F09C19959BAA670022B9A9F263CD391E3
74DD1D1B4CD4D75273CAA4E37F68C631723E08FA35AD34C0AFB4621AE6689861
854D16CE1C375FD159A337E221A6FF1CFFB5693A0623E7EBB58C2969F590D081
AD92DD9E5322E26D6A15023664AC73A355998BCC48ADD0E7A4BC79790519606F
A1FEF6075033BCD422EE8233B83D1E7C20043280D531223D5AD4D5B41669F884
95CE4D6DDE819B588742B930C579EDF743F2C74C95F717FAA6154FADC3FE2975
F59CFB1C1A29059487E75C48505BAEAD7145667D4E18E46E610C868A257173ED
0D30EAA4C090854DD8378E92D0A376226EA7DA63798F247BAC770FE26D70E72F
90CCFAADF118304646955B0310C65F6CA51BEEEF87AFFE294D08C4435C7BA92A
C61A14854278FD1DA6A516B7F548F5723C06ED9B2605882EC330DBAC2B1DC25B
BF4D62183F791DCA7486F9BDA94D14606280661A8B29C2E9F3B2C6FF071BB961
845C6C8CE222FE9265CB970A11001BD5A058C8749D63B505685E2940A75895B1
A7F64342914194484DC57FCE15451C4C82A545725124706DDF1C44252F79196A
365EF95562D6BC17232202E625A9E9056A62B78476AD0A9F5E67AA9400A884D6
930902D6D6C402500B379F3361FB95AD380F5FEB987F5908A52C886B852DA265
995C9C28C46992E0ED09C64BC6D3ED90899BDA8C346743FD32253C51D14D77BD
52250D3676F52CCE7C1B9CA28B5A8BE6FBB0F2121E448169198FFA7D3CD089C2
F6C025F1E7E973EFF8308A2FCABD144EF513EC81A30AF3A261093A5ABCF1B82D
5975A92162231A68773F8687E37048DFB892B46F19550454D55FED2F1E522EE6
903A710DD64E07B7255D2D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
/UniqueID 5000816 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFB7605D7BA557CC35D6
49F6EB651B83771034BA0C39DB8D426A24543EF4529E2D939125B5157482688E
9045C2242F4AFA4C489D975C029177CD6497EACD181FF151A45F521A4C4043C2
1F3E76EF5B3291A941583E27DFC68B9211105827590393ABFB8AA4D1623D1761
6AC0DF1D3154B0277BE821712BE7B33385E7A4105E8F3370F981B8FE9E3CF3E0
007B8C9F2D934F24D591C330487DDF179CECEC5258C47E4B32538F948AB00673
F9D549C971B0822056B339600FC1E3A5E51844CC8A75B857F15E7276260ED115
C5FD550F53CE5583743B50B0F9B7C4F836DEF1B263DB260571DCE3DFEC496E93
CB244233D14265C75105A52752F6FD65BEB401C8874BC659BC1D3ACB2B494652
F074549FA28873558649A150EC72E3ADBC7803BC5D9544F32F69E37E51E68023
1EFE3D08447DCF002B47E5E74B40AE0A68591CE2FDAC076767F59A91616E6C8B
0902351041A9E39EB7D5B3C6BA9955A5F8EE7D61EC0C68E5D07BE984CE262DE5
298990ECFC5AE969DEEEF69A96E9AEC39DE53580FDC2B6369E7792A2E9F95063
171960EEAFBDF7813CA061F160F2002CD33994953ABB7F0E6413C125DB49D747
EA9315E79269CCA9C3065CD21FBDD6E4FA1A92A39447BB7988C5E6AC715E6E17
686483A23891AA43B18D621721106248257EE902751023BBEFCFA95F2AD87EEE
ADCFCFE321F98E88C11557EE0582656B8FE9888F1E738132EF9B5B6BD3004F3E
39CC36BC3F9D9A31512BEB18F642EB7B8F62B96A797A4AF88FC5E82E621238BB
1CD5609F1AEA41FFD49D1B85511E36F8951D07D8D232115D76265AA7D096DAB2
0C93944EBB793F3A39E99D728C4E6D2AA983B7CA3CC988DAF5FB148A8865C934
1F309AD14CD55C723D9A2FDFA9164B91CB9B289EEDA3F95027588E5EF3E62706
6815CD3A489031AE8BCD56C5ECDAA1EC958E88A2BBAD38B767581E02F019564A
36E96F6F2CB422BF61A21910A8003C6DFC89BC482F2F278A00BE48B2FC358397
4218C415E31D8FEFF61B8CEBB159F404CAF84F452E4C0F597E0B5522405BAB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI6
%!PS-AdobeFont-1.1: CMMI6 1.100
%%CreationDate: 1996 Jul 23 07:53:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{11 -250 1241 750}readonly def
/UniqueID 5087381 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF0342CA1080743A076089583
6AD6FB2DC4C13F077F17789476E48402796E685107AF60A63FB0DE0266D55CF1
8D0AD65B9342CB686E564758C96164FFA711B11C1CE8C726F3C7BB1044BBD283
9AA4675747DF61E130A55E297CA5F0182A3F12F9085AF2F503481071724077A9
387E27879A9649AD5F186F33500FAC8F7FA26634BDCE1221EC0ED0E359E5EA5E
6166526FEB90C30D30099FBDC1BC2F9B62EFEEC48345160804AA98F8D0AA54B7
A480E715426651865C8E444EDB798C7E11040AF6E5A7ED1888653C6DBF5E6169
70BCD9C063B63B561EF165BF3AF11F8E519F37C6FDA2827685739DE2C48B5ADE
EE84F067D704D4511DBFA49E166D543CFD9ECD7417055D8A827F51E087CD2927
BAFC7E6CFBD70B0FE969F890A11149D3D44D422C3370495DA9951AEE7253A49F
3A9444C8CD9158D84117299F7F2332FEB0F94E6ED8BC7AA789A3219BC2F227D3
3B5BC75FB53B55D72AF4A6A7BB613FA235B11BB37D059FD87127CEF73D5B3FBF
9F91ABAD78BD9240BD9525EBA78095EA0BDB25D1A19E876F292882EAD5619D46
D20317A345D931F4FF4EAE6216C27044CBA525E3B917CEA25A04C120466C4B93
FC720E6BA832A06CCA0A3916CEF0968D49085AEBD243C41A448289A6F05CE3F5
79148DC112A3CC7E8FF810B8C1A09E05F496C0F1EBA334E42E05C376C98F5F69
C06C71BFC0A2F3AC9951CFBB143C66FB84F9C4ED27DF70869352D61BD5E11508
0797B87C71B9970647E5CA1DED00458CB76AA2504CAFD10EC7CBD90C1F718457
540141D82AE24E74C3800B3755DB2539FE4D1F966274BEC1BCD9E137E535FE11
8B43A723E87F47EE03039D318B860E3C4DD7A9814B597E9CB1550D994AFE588C
651103938AA5770085141714CC75575EF28A2834952E7444DEF91122F8B0C1B3
581C65A92AA079E1A1B8A7AF52D347F484155F5EBD101A342FFDB49A8F3A6031
53E0FFF4306A18DEE29E8E3607C2F7ACBA4751C2583FC4B87C414F717C613794
5B63CDE6A98545C8ACBCF924668B603F30DD459A14E3B2AA39F95F9656BA3DA3
C30C14FB2D8AF9D91D04FAB6AF8DC629928CFF35D9E522184A96AE42EBF55727
B5258A1160C7E73DBE89ABAC647517A2ACE37510AA3FFA8629E746F2F242431F
CA2B256DA382A088C5F96C2CAA7FB3F0FC3405F7E697B821999A3DB1B8C3C8E3
3FFC411324942E5A701E635926C0DC584BE57B577A974B0135F492582B9AB2B9
8A35078ABB0733721606524474150DF44DDFC2F76AA62C7B159717F00BA3C037
3E7E2E10AD3E820371A5BD5194BE8FACC2340CA477BEF21E13C9F204D4FA7D75
E534CB5B7182137A849D215BD460F80F2E4FB85F1F9A6F9BEF24FD6AF75429F5
BA88E14DEEC4F73CA801762594E270DC32A1E2F8DF6049E40A5F073065D9CDE6
7B051BCD0DAB43FCC7745935F1EFC18F16B3FC3E6BF142E8F7079B84A929D408
37E7D17DEDB690F1CC3CB81ADE836C4F56499DFB35257E054A3395F6C36EE288
6714C175E44505E3D55555270DF7DCFCFCB97C1B047588EDFCECF23D8CA9A6E0
C66BFD994B2F7AC0765FFEBFC270DD24C4DD39787D8DC78B2616CD78AA1080B7
C9B407169CD63630FB0463E57233755423103C78E803FD4F6A2A2EC421DB9696
7DA4F09083A3E8FBEBF5B3A539EBD8D96953C02784953E75DD28B9FE08250455
EC21A3FE256EB5736A652229A9082117D409508642EA94F94A3AFDAE70E518F1
BA0D176CF82FCF848B9F9686B67940DBD4333FAAF1F452856E67FF14017727F6
3F9FD27C65F6DA08F05CBE0D30BBA1DB90D1D4AC16BEBC3CC9AD173B7990AD4C
B8F252E0B23231297C70C29CCED2DDC649A93B4C54E0FBD37E16450E47C83AA7
54F109D319D52B78397C28F1A4F9660493ECB3E00A05B9F0F4D1849BCDB7048F
B218EBAEE80A8500513D327B104A05F11C46E015B7BC42520B11BA8BF81E5D7B
50786A4413CB0FD59A5394B26BB145E3D250CAFB29B7793CCDF8091D98EA77F7
8B1BCA70E9A5953AD8C4CE556321234325595C17503737A7E939433E81051831
C9B43AB9340E2E9A1A823D409F4B03621472074D3916D8DBFD26BAE7BF1DAACF
E4287136DA803C4B8C0B31443068C99B5C99F1909197C999ACB10FABBF9B2D1D
C1D0B1C71016B2CC4D2AD8EEA366B17B1EDCBA420A7204EC7ECD34FA1B43D2AF
2B0AA5E3ED6C8AE420CD024054BE7BB88D7C5D1C8D6051BF28F381D2889CE8DC
72B249F9BD16F38A7B7A613728519E1A730C5B3907F2B7C82B55EF1B39541F1A
B6D654F248A5250F00E729838EBA4269A8F7BB791F3511621409D66B6A33E83A
EE39DEC560CFC9731C1F4DE7716B1CBA4080461D30DE3C72291B59D0E2CCB6E3
3A89B1A4568ABEB32C9CE8C7BFE8641F1BB6E5DB9B2C83CEDEFC672F0E681036
BACC075C916C03AC92AB8BF84F46FB7C8526359114A18DFCDE4917F17E7A4A19
60466FE294BC1FBF3A5A57EE86CECE9D31957F121985592E36F46512CC953594
F0FA00E1D7EAC55679B7C00C8F1F29FBC29290F9E1F4724FEF0ADB690C3FD0A3
E980809939685265848977656168F2205854A0AD2C1C84DF6FD3B4FE854FA568
51D6217057A457F4492650F09CBDC02C7378379635640B04FB2B0ECF8598BD9A
D03FB3B8FDF7780829A266CFDE52329EB56062597BAFD36BD044F9F402947775
3A8C6AC3B9EBB81FD2E458E51AA1505BCC1C56A98CD0F5047D87CB1B10B7C4F2
8E8C0E4CEA8017DC7E9780B3EDB0D539FE4BF7B9619E42DD17C2C97490239D82
ACADAAA44F8B360CF7EDA0A20B2EFA0FE6DB519F75A76E513E9F555A9A035406
A0F2CD717F7258548EBEA0BDF8F9438F9C121BB559D6D05EFFF0E0E956AC1F90
BF3067C8CF325FDBF488A9B1E42D951DA3AEC5CB95C4B63C3AA56E58C1A7CCAD
50D989F8B2518897793BC16B097A9785F36641BC5FBA3DF631D09BECF4AE87C2
A6B9E2CDB2BF7F964FB92EC1465F7F793A05BDA0F69640FA01A6E04354548AAD
4ACF9122E8AAEE6E9A1D47501034AF55BB0C025B507D39CFCE828FB94567CAB9
C93632C33B588C0333754E91C905A57D05CD378F4F39436E15B828D2F5AF3612
39B2E2822384D238131CAF626BBB363817670919931B4E02416572CF8BDC4A31
9183888433B31C476FDEFDA066A106577FD1C88FEAAF7AF7732FB5112C6E538F
32CAB772097576B088038442946D6065B45195BD93B96B9FECE48B08D8DE333F
F07FBFDE30381017230651A979F6E21052B6AB5C2F98E36582DE9FC386C255B6
7B1ECB0390409181BCC65F4619C54FEA56756B5F90F90634E1205F5A8880C698
FF5E74DF5B0C2FD16144CF0BF3FE65D8F6AEF59271C5C9F531B48CD807DC2492
EB49FA7919D63CF47F278C21EB28EA052C4847EF6DA051222EC4ED4D0B83F37B
D7CA9BF16EC9CDD9BA38B243706B6CA591D9EB4F873C7E2C4940E9A2294469C5
A1B65758C392C7E857C23A69B5DADCB29077E37E5C12A143439A1E227E99C409
EA69F6BDC7E16072A0368A6D18595A3EC19B0E120DC65B269A9C765EC808DE40
1B4E3B4805BA4CD484A3D5A732DA58D8011793F48005EE4DCF10790BE8D65344
99613CBCE47720E93A4547FC6CEAB8A4C83E73BC1FFC287FAC226BD29F09DD8F
79D710BC6DFFA2386449FF84AEC067563723257F344529B7CF0F2423AD6F4F5B
FBD75DEB08822DAD767FA64DD1A473D7A11520639A22AD86A562DE159911A018
77D2328D88B0A8E2609EF1C53A53711806D7B843DD038A2376D17300B13E7B7F
DF7F89CE1BC508DF6985BBDB88761809B21B731D202C02EF96BBA91BA0B533CD
B85E8BEFE15E2B17E401728F89DF5CC6B33E098062A22D8A407253746A2D5FAA
487E568DEBB6182A731E4624D225D000CC614FA80C3C45A40DC86C6336DA7E51
E2CCA518BCC217837DD79C4352F6B4887081C352591F7E944773FDA41C1A471F
3893BB74799DADD1CF1727049DD20155D8802403DECE6AFEED25A117E9B4BCD3
B4A1609247AE3D5F6B0E2F6902E49E0BE7F809F47E1D9B79F8C66168BAC04B22
AC185B1B39706461AE6BF3F55A1969FD502C22C05CA0EC0EECC536BD19A977DC
B1A9221F1688819B9CA91214EF7EFCB030A5D87F9D5D1D793DBA9F56C2828C4A
08C49988C9F605C12A92DBB8DC8E202CAB1E4DA111C6C75D55CF1C8D5CDA79CC
F4883D5FC2511EB488C09D1C337AF9464D2733BDBA1C5C7F31557EC50131E588
2D31162D4CD3F0C8D7C52C2EE5DC9C496864718D710145FB9819B7945EB580FE
0994372B44024ED6C59C5BB14518D4EDD4FB8EA516E87F0EACC10C2A6C716519
2E654054333D7B7625A89741998CBD094F57E225131F51B145643741E87381E9
437F9C7EFFD8F29823DC319AB2A4D6EC01DCEB73B1ED1EAD2FCC39F1A226A105
5D129E7B93C2C577BC5D41FF90123B4B91E035112EB9359048F113CA9EEB94D0
EEB0483131520D847E42D8981338414DF94C5F586BDE44E5E9A9F1477D1956A3
9BE9CFE58A008074DA261E70AAE4AA547E1AD1D5B1BB8917FC43482060C9F13C
D29E5833CA6F857DDE9C51805D7E86E6F17BE82DD9BBD5E2DFC75C675EB7D75B
414F5791EF9C3951B15EC532701801FA4ADDEFC6CC2AC6E3092824966E5D2F60
92BB4AC032416ACD2E13FB84B9ACA23FCDBE33160928657E88A477CC6DE9647B
554EAF33E4858E8297DFE007B72366D59B4C2B8C7AFF674D6464E623328F9667
772F782AEFB686D3559169E0F1826706AA110DD1FC5D60FE0F170AB236A3ADFF
63E4849AA21D663AEB27BD8764DE3A9D51C4E7EB1F2DBD3967EB8E0F4CC74E8F
2AC2841A81D288307BD3FBAB637AA57FA616EE920655B9586373D9931DAB358C
96EC1D01E0AC6DC0BB46419DC692C65D183DDAC01F75DC81E9CEC1B5E636FDB9
ECA7AA7F34973AECF25A66BCA3488E384483FEE8067B5F087AFD32FDC409C408
9238B7ADCFCBA09D0965B41B305E91C7C800CBDC87FBFDA50E104EA1BFF29A40
B71E54D5D73281C1D55D64ECE0698B482B8147BAE08ACD5D951964F0A51A06A5
9D3AF37A4294AE6351CFCFF9280BC3E70D307B1CB8B2A3D14CAACED4E9FDC193
0B6232A789FB51F1F7B208F8D2D5614C920898D380DEF171823DB9E25FDEBDA8
C712AD2B145FE7A7B8AAC269116F05590D999D60C434290A9E0202CC18EE821C
926722063FB1B9E48C2CD5255E2BA863BFC570B34B2D1948F4EB02F7E6C2A601
01CCC34D3236F196D19B1CB805781547DBDE1B07542EEE3D4D5088DA8DBE2E8C
4F35AA6C691057BDB4F98E05523413EE0881F210747896CFD31423F6E06C6230
8CD994D2F7F617A0E3B2F4205C4CD95CAE7F09D6B1CA3B9A10156BE1FAC70831
06FDEEF5609423BD6ADFFB1FE795C8CA1C7AF7B5F709027C34E17F7C07165843
F9EBBE74C20E1CAF76832FBB05DA17CB1EA2ADEFDB800C73647C77715677AB8F
D9AE782D6CCCB0B7E4591FA157FDDC19177B09C44A8D711480F993C71BAFE5B4
B9A1B4BC687A31D8A67ED7870DFAAA9D6D836EC77C9C43DB09BABE3545077D85
A17DD66047778E0A08732A9E219FF63A80141954DAA11036860AC9C9276FDEA2
F0BC979F7CA93412708BC1845ED0CCBC6572083C237651D96FEAD4542FE4AE42
69D61368DDFF0637B9D4BF7D9C5587A1DEA4E09EDCCD0E17CDBBDE03CD59163D
AB10C209F77DCA673F971370B0D5A70CCD51FA52777B31A39437BDC956C92781
22810DBBC6EA0E9D8EC6BD054498364C2582566C9FB527CC3A0D5E252E60F7EB
6C956908299AB1662973278C87AAA729DA21AFF039F29AAC94A154DE7CFE56CD
608765A89F39605C63ECC173F9FE8F8E2592567989F0F773157EAC4E665A727F
69F2F3D89632EAA5AA105693A6A3CDEBA5C53715F7334A7E9587CBB4E859752F
D96C56B3352AA8A0E910DF6250DAF4848C5C5EA2AC88F163F42D5D3313D88458
A71910E17F80A0384A584F78C5CFF6178322D1F638B223B448CD7E6FC5D458FA
B4DF0616EFAA1D7F836F706B43B2C3E8DBE5977E976D9555D77F05447F29DF60
82C00ACD3D2F6D0626427DC59532FA554F94494A531DEDABBAA3D0D5D315EC3B
D908EFC6E14C64C0829BC06A26BC6FF944B0BC7FE59D0746DD89933959FC6076
18D4595624EFCA41C8ED47DDF7892C35E7655F53325E462556100D91482E6F26
914F7E6EF45A91FFD5E19458B0BC9D6CD7E4895518C322358131D0851E9A35F3
C58E7C7BC0F36758534F88F7B00A0AD4EA04D64BD7D1EE99E17C1497387D3E7F
CD26C7C261D184E2B3C4E6CCD24FD9E3B15B10A17F8D7E7BD0E56FAA422616F9
6515631D0A643A08EC3F46FB891C2B5998FFA1A765539E8F2787CBEB0B12F81B
34CB6ADD77623485794A0C3E6D0AA888A651051F84597F529C575130CAC26E1E
0134BC36DA3877E2B69378BEB6632B01EB51A3E9E559D199F5F1C2B14D961E0D
3E2E57533219E20DFD18CF6C37C4F357269454253716E4B9037359B0BE53C9CF
7DA314F14FE800CD4544E22FED84DD1D4B6A3F3498776B1D0EF73772ABB3923B
83185A1EB75453BF3DD724C11E548E240C31DBD6E6224305D202A32661C3FC1F
A6EA24F8CAFB2D9A122F9F05AF0B38EBFC60F8EDB6CCF59054653A8970D98E63
3B9D1005E68E359EAF7682B23EEEFAA69F4E696FFD3012CFC24C489FC93C02AF
575E2C88ED3A6F06DAE99198F36B7DD079A4874283E5844F834385E4B8A863CA
75ECC8BEFDD8D2E6B1B4B258B0B8B2EE1EF7AAFBAAA046D3E5ED67357F6ABD91
F099C23045439E450452BB65B2DE77F569DC233D481A49E86054CF648148EA6C
F09AD8F8E078C420A7B720247109062F867060DC4036FA2D4F3C9B9B90598B16
F9A6C93F28F94A6FDD03D647A2CCD4F938B3D003B4479265D3989FBD0C173B35
C0FF5C4992CD3D686515C08B61F67DEE39B339C2205AA4F0C744211E43B0984A
6F4AE019B2ECF4C8B50A57C63E5853EF1110F586D33032B5877E2B6D96251E55
926011B7CA36117E7C1D53E9DE9533E2D3C40364015B6E9C82424ABF838D7F3C
F53C4DADA9CCC0DC09DDCB210A12058E178D90A166144F24634598C3E8F5927A
8D01865CFCF0283DEAF059D3845DCF53C3FFDAC460AA9DBE4901456C6FE42134
9FF3D6E9539DA7E8FE790920D63CA36807E2AE72C1A9CEF0AD50203364DDFE18
4BEEA93FA521CBAFE78F28221F456C12F2E641C6BC7EF0282135CDEC8D0DC986
BC04F2D3330B3879CEE52DA18ADEB96DBD1FDA69EA58DA94FE94A1849CF3AA1D
1A6F2040C1AC1A148AD9D98E76C458D12797C1077976053F7D39BA9EA1BA2DC0
666B2BD75A78496D666AE98D75A7EE71CC41F1571F1A1A6BB02F0472DC4F6419
09915DA4FC3D7C3148C6C56980A53F1E26BBEA53B2685B3322E4DE6E50F80A40
E6BE9CF5FD26B87537F619817A3AB6E6394B7EE0DC874FF44C7F8C16D90055BF
22E83B2847FA9ED5D0E07A5568F0AEF1990514FAC5AAEBFEB7C99E12FF0E1976
8FA5C81FFC24AF635E597F64B9B7255C08275A68BF7BD77BFA1F0D101D7CD0FC
B603A44AD2A3E6701E25A5445DA9D4EA7AF1FB8ADE87D628A469730672EC6E5E
FB9C326845E50C2D8A3B9DADC4B69FA7AE8D6AB92F522C00D9E72471B64FCEE5
A36BD523ECBA0906217C278A4BE55D0A073787666415FBF58AA1E4188D48FB32
5D2068FF9FECCD6B4A9BD8AE0D12AE55E2D82B0AB5A7478DFDE8A96B486D85ED
27ACF87489A16EA05E79B1CFCA6381594C43C6694C3EE0586516C466A9526342
4793FB8FE6860D68DE215908A542965702CB9A975E55A1F3B3F36D6332DCDE78
6C2E769A86CA329C1C5FE58096B1C482E36B0E0BE2BB47227871532C149AE074
C19BF07A9F7FB718236CA059813F6D2836E232C68C6E0E464BD7698232BC6C60
072820FC964B652B001F0DF4DA1CD3DCD620626D7EA2724ABAFD901B6EBCEB41
968BC75699F7A0AD86F0CB195795B99B0198123C299D631F99795CE8B253859C
3E5B3E95AB30DECBA9A2EBA8F7F1EF76855172F01A863FE48A091C63DD855AC2
5F45EF83748D93DFC68D97DE96F49FC8E245A954F827BCAE7C2985E2EA1F7F8E
D70B833ADF3F509AE017C74AC1E3628B6F6005BB845705FEB7F5485DB3B96F05
DE23D6067BFA813F33C22FE149CA79199DBC6C2A5AE5F2EF1FEAFE0828780DD8
0B8E3734A32C868850DC27E31A601F20BCA97E23228A297495D87CA9BA1D65C9
9A69330EF5E974C09C18DFC204F972F27CF90E2F79AC7474943654585B3D9C1E
81BA3D882B12248BF518AB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.1: CMMI9 1.100
%%CreationDate: 1996 Jul 23 07:53:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -250 1075 750}readonly def
/UniqueID 5087384 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D6F5CA5FED4F9AC9ADE41E04F9FC52E758C9F45A92BED935
86F9CFDB57732045913A6422AD4206418610C81D882EE493DE9523CC1BFE1505
DD1390B19BC1947A01B93BC668BE9B2A0E69A968554239B88C00AF9FBDF09CCD
67D3B2094C11A04762FE8CC1E91D020A28B3C122D24BEAACF82313F4604F2FEF
6E176D730A879BE45DD0D4996EF0247AEB1CA0AB08FF374D99F06D47B36F9554
FAD9A2D3CE451B7791C3709D8A1DDDEFBD840C1B42AB824D5A0DFF0E0F15B0B7
22AEEB877FF489581DA6FA8DA64944555101EB16F7AB0B717E148B7B98D8DBFD
730C52937E226545CF8DC3E07C5BA30739BAFCD0F2B44275A6D503F582C0FB4F
449963D0AD2FAFDE33BA3D77BCA9D1DF878DDAFCA2E22CC4BACD542B282164C7
97C2BDE318AF9D501CA21F6E662E7AAB75A5F24D2C182E598D175D44E88AB19A
E7CD59584F95B389183EE21B525BF52A3F23C0FE5383A5565A19361D716F508C
AAB78411CA5A4D27552CC1C435760D5A89D535B71C593E755C616661363308DA
A683F54ED0C23FB2C225A008392B0B719F66F11A946A090B7C00B662A3C69599
B4ECB0CC70C85C4BBBF207E0026F6C7A19F2ACFB7A60804FC98A4BFFD7BFFF2B
952B42CE273B1118F73E1809D2911924A418CC45E20D9A9C026201263F4A1527
48E376774D7C218132B4D3680590AB2AA2C2EA741D7E96C49F4BA3E705E2D68A
D288EC56011CD158D02216881B7E45314D94E45D7ECA73776BA42DACC41248A4
D19B97FA93D40079BACFE26853F0DF9F75201C59C77FAD42905A1B39ABECBAB2
C0925759BF0900E0E011E8ADFAD5859FC718F307C85933D6F9FA42D823683703
8BF34F6666AE5C90B42A4BC5F2F4B170B4DD23DF5C5B2A5D955D48570DA58601
91048AD24E8038DBA81B9AD8A56C856E59B777F9A83FC5C36A88D9B0C82B0D52
6CD6872705C0A6065E06AD7225F9E5339A9EEB19218A7264B483C05E465A081E
D9BE83C8E7D4491304D54253E8215F69FF26BC5ABA631DA8F25E1E10E3ADD9FD
0C90BB88BB23A8B56F0E477E8D84AC3F2BC2BD7AFF78178F407C7E2D0CC67F45
557DE15CACE31C02F14D8C7994D2503C1D6E0EE235E8D83744E72BF04FE31738
BA9499A5778E61655EC2B505233A494D3C80A3C18EA9EC6A63DC150936E05E6B
4FAA8EB61C966A7BCC0FFE9025331936A37E5C7F0BC75B438E54FFE97C058EDC
FE36109DFDAFBD903326A9B540F24E1D096792A97F58EAE700BBD0B70F4E65A8
176D63AD5347FC6C109EA9941CFF3FAFA056062F432F4FF0026D72A85F761972
82AEB517D241D03E12CBE188FFB4DC6D041EF9C0C69C382439707F6540A0F2AC
7E07BD7CA72F25F62C715AEF86155950943170CC9903EE59226D6BDCF30C3DAF
52B979D62FDDDC614A542C1E1DF4BED482C88365A948BB035A18E894AC34E471
AF9F38100389052EEE4D0659D9B94634CE38D08409E81D416019C70750B64FCF
133C4AD3E89454A66C6E681CEF5012C6B58EEEADFAA19BBD3712F6B1E90DBA2D
EE288D988285C8BC49B43663897E1035245DE0C902BFB24DF36F9422C1E35E74
7A0DA7772CF766CF1DCE3DE7C892FF54D1D095D1B175CFF3277FF5AC034F1DF2
72E3EBB0049E4ED5C22F0C56F0A950CCA4A4FE5BB7FA46D1338C33BA1B6E73A0
DAEA5C748DB5AE7A9E3E53F108EEB58353D8EB26F1DF0D58B36CCD744E6DC774
A881540CCB8B752BD4DA57814B417A23FE46B9FC08B7D66F7329932F98AE06AC
371260614E8550F39B9F37C39C2B89C12BC0A04FBB1278146A2C339BC4B3F8D2
EFA1F486755F73AB197E8A521268E818E32060BE282AEFF7966B62AEC1703C6C
1953825071BC9A06CC19ECFB40BB6CF1EFAEFFDE3814463EA8F2B901D01A4F78
B20AAC04F5DBE84A1261093D579161C28EB9776080C02894191C1ED505FA2C2E
09F56342CE113163F5B2B81C09FD0CBC356C0102DCFF1D7E76E3F5023875C09B
7FF341010881BA04BD08DCEBECF6C50FE032443157632C0EBC36B656A579696A
D0A0D3F4695D3C22A3BDD3DE1D2487E51236A7404511DA3429C0B7C7F0EC7651
34FA395DE6DAE8E027392CF886D3160368BA03511CCCED322AE81E32025EE26D
2693CC50298A1A1266D2496DFEB9AA45EE58CA8CFCA087AE75E2C0293C7EF17F
177DDDDDFAC7342DAD5DC804C12F15E3916985B47498B0A44C3DA59955CFF576
1DBEC6EBA893E09D1D8720E4DDCD30A7FEF9E14378D10A1B4A48664C60092DC6
BA02EA415AA5A7B0F096A056DC126068BD6637A94D298A63E7B88AD18E237081
1421DAADB94CC5713033C6572BF841505C042AF9BAFC1BDEE287ACB5A94733F0
6C068B3C62BC7D2859296BB4954F6D33BC86CF0986022669DDC32F6F5F33E64F
43A0C645848423B3E5EA2ACEA742121918D8815120330CA1A1222E773CFCF7A2
CFDD78590EA7839898FA4C0E950203675DCFE2A40B98DDBEFA97A2C80FC823F7
616A1BB295877E6BF89EE0711A67046E84142F2E21D8FF8216C656E4E1F4EA65
B8CC1D25100CFF37D66D446CDFB9D3F749C37337B3AA3B3300BE23718BD0F5CC
CF462863BE3CA598F622C8B99589515785A441A51D5475BB1F1B45788414116C
FF35C5F7E33C0D807C9C2317F177F122001382BEDDA543AF63AE1024FF07A0E7
3EE91450AF979AD512E97193295C4AA36C6BC168B8B5F4E380B6AA7F35C6E5B4
C4AE641BA40588097D17530C5130D0EFB657E14734422E151F36932062289A8C
64A1F51B3168D05E3F6FEEA7ACD09D22B1FDE6456C7CBC975F3F2C03AB18537F
A2E75E2CD4D77ADC1D3B0B87AA8D676BDE1CD5EF4003A976936DDA15C80812FA
CA8E3003A39B25A0B429489210677A00C3911755E0FE01556EA1FC7C774679B2
674C58611EA5ACAEC66CDA6AFD3C78921DC852384769962C1330C70B3750A74B
2F5EF608DB0C2AD30A5960E32F79D542F5B81CB24A6FE7EDDD4703079C38B1A4
202ECD0927F957F4A5943CC312762E4D3CB748F0AF9A1A17BB7671E5B36EC65F
C1F533455CE58374528488547A1D90DC5937DA50BA4CF19D360A235380B25B13
F8440ED24AC6959A240052CE63A21AEDD49B1BACF8558C3C5F69750219BAE57F
358E6D0ECE9054D29C3E004C743E203922B455F089E767454217CBEEBB12EF32
E0472CE24C3382A418E6420CF6FB33C3FE4F4C9FB7157B49FD44368F9CD58F7D
978B4354B38617264BCC153C41D164F30425DC84298AECF75CB41E4B19FE901E
DAD847D7AA2EEB4036082AC1ED5643F5728797CAED995510FA2670C04D224DFB
AADA72200174E561EF959B9D5A8200AC9F130A2D5893983390A0287083D36452
31937BCE0B197FE70C22971F71F34071E4DADEF0631E6E9DAB02C84AD29FE794
3E0D386282B8D4DE13675D8D6B404F1131A2676DC9EB6F752DD1A6B321B93C62
BB648866885C2E9B4C13E5BB113C16C7F871D59254FD8864E3F72D6B03030C3D
CF5CD4E0A4A2252B8E25E8047B10CF4B24DF5EC8CAF7C635257DBE0F57ED4B0A
E96A585616BC26C3FA6E53C6B70C94DE1BDCC20E8E08CE114FFE73A7FDD643F9
96C3D0BD9B277F6AB338E0CDB4CDDFB2377C70AE4451D498BB1F02292636CB82
1EF1515D9624CEB84089181EB47C211992B039504BD0D54F45E5FD6F571E5861
A5312CED4650C841BD9E4C014F59FFD49E5325ECEC2343DBAE02D7956AA4FA5F
BABE920EBED0C60B92A048138844CB7215F040C1FA7BDEC8E0D393C381A781E0
9A7A7C1009A7E737AB500150F1BEEADC18398288B4AB4AAFB48D7A6026CEAD2B
CD53BCACB6490B0F8F7A17D4532514BB6C903C3CECDD405CE97F3FC75FB337F6
610D58C30E18A0769C833BE94A0CEB4FA5239E7C34220EC290313B602E871B95
B399E1C0E270630687B39AC2406B15E899759E959FC7B09B494BD9F348B130EA
BEF2713ECF3BF8F8C396F2C919B3CF1452FFD06DE6DED6E9600A0B3682692E20
0166364C8F1823783063BD8BB1D6A8DA2E47A85AEFF5A78AAF2417D663E8519F
415EB31F4DAA2FBCC23ACBFBE3E2B73C40DEF775605964B8859A89E2E2612219
15292E0881F78E961EFE3DC079C59A26227CF0917A8ABC0D9545A64EA074077E
4422ECA7CC8E97573F5977FD780091EC81FBA603E29EA29F31349651D6D3050C
7C3B5004533E0FD9A976ADF47AD1E303639967E37F40C78AB585192D55C07857
5616B2755609EBB05050CF497EDDE25668726962EEAC9443D7FB7A3076DA61D3
504B034E0EFABE2D9BF9E1D4CC9D97D3FB91EDFD89031DCE8301CE757AA97963
B637AB6648D56ACE2EE3BCBAF19C8D76D5D0C4135DB58F725ED12718E064DA95
4FA95DAB51A398CD9D1E65A689587595EDD1AE80B1B211CDF5473287FA7C31C6
059BFC44064A1DAD8C7EE02828B42FDD8D2ED1AAB8D763633B1F711429247689
0A0802D6BFF70910D81DC3E0B08809CBED25D51969BB501D2C48906937E0080A
041558B3F90063C91034DDE0B80787013674A9946EC50EB362B247581F64062E
F08EAED7F48B511844EC52CBB933247DEE1ED9A38085805BA1F67871C45263B3
5ABAFFA5734E956F96B4C0A8406B8313511D9AD07134B4F200D5338A1095744B
534CFCCB49C6D346ED44B41FEFA7EBA259F9A671AA854F8BE18F25A240770F5C
F05F3AFA302ABBECDCAB80641AA7FC871D0906DFFF51C5E2DF66F083377A0DA0
5A8DAD048436000670EB4A16D345B200D1C8DBDBD2042AE956C42850A00ECF8C
0B6E7FEB363E64E6844722BCF8B0885124107425B9FBEDFC246EEA5291225660
4FAAC446BB3E820E868330F6A02B0097D31F294C2B14B2D92C80D2BAD1A97848
76234DC67892A6540F5E4A148E073EF7C1E813F54AFE1782666481D85ABB73CA
2554EFCDC7AEB0B370C9B8EFB644771335C3EDD2AD4337A2EFFAEAE4E4FB583F
076EC11D80F76819E80AB6429F1ACC8B2FF89F7DC5FDDAEA0736573C275EDCA2
A04AFB3C98F8A793231389267099666F92EDE075263EBEB5334D962CA181F6C6
CFE5F5FC205FE8F0E77133D1B7FC82D0B86CEBFB172B83A528C51B8D9F274509
CA757DCDFF24FC66105B93A490DA34B7BDD627AF968054DCDE61B9D7B702678B
03053E845AC5006ACBC57D720772CEEC6A47CFCF0DCAA5A554F0FDC2408DDEFF
710FD467D0E80A4BC28896436DDB847FC54D43A732FE71935C2D158A3DEB7DAA
0065049475188286DBF3B1349ECAEC94C1B420401145229B2D915EE2EC94666A
F2F7A1537B0B54F42246704E1DCE29AF458AB853A38A5D8E4D566692EE95F44F
341C5E435F6DDD1400D5AF9E1D82C7A2D640C5961D1FEFC60E08BE913F2ADD88
26C8CCC2F1C2754FAB6AF0847A36659FA1538D7A23BB36EB9697902480B188FA
76AB12295B10ED55307C91068865B3C063B6B5BB8E4B553807F71E1D934307A4
7F11EE4B346F1E513AFA660B9F9D9FD164FF2C99B54446D88B6B13405B2AACC1
79B6B1B4B2477E0ACD9A0D1581BD807EBFD3E66AD22A47B748B7AB8952310A39
F0AC3A0D439A60A353237F1CA25077F92D23BCE05E0B364007EE9F6D994663ED
41992C1C9F0B5D62C265158F0A1A58E842DE73FFFC2844C5AEFF16400FA2F6A8
A1CD27F620F234D904CFD9653E0BECB2E434FFFCE2CB870E275BBD44FF0E9509
E237758DF9C1C3FDD2F95ECFB5E8B3EB78546FB284EE69B5DE2FC2C8D528366C
1905E01B3E85816E57C19270789F3664020215E4698204E0503AABDF57786419
B4BB8397EDBA4862490103585D2D8B5EF51F3CDEE644ACE109724BC2B62536B5
9E2DC55AE16CD0022C3908DB5DB2CBE69F65F9D6133D4D935E8E284CE57F9C8B
A4A2FAD60377FA8B54D25396140B10E9952E0E2AD2C8C88564201AF564BBC0C4
70C5139A346818D190AFFEFC8DB4D6E0A67789EDA3A1561CE495ABB4B3624940
931C599A85E9EB4ABFDE868DBC61EFF847CC163B738290116EDC28EAC68CC1BD
808AD412C4A92894528BABA2C868A634194821A1F007B7EF3A0BD605761706B4
3E2E6E546FAC4010C4300EAF981835CA8BD0D979C7D9C9DFA8DA8EE9F0E68A30
237909F52FA30E994FBBF93571E425BC5787AF37F33B7554B7533DDC2A69C4E5
2E344A694CAAB9D0100E521E3691EF754FFBB5AE126BBEDA7730060E2938128E
F37B542B656B13C81E2DF478EBA7AA92EB49DA597D7BE670C9FBFE20ACFDDE42
0022EA8DDF643EFD06B95D662E3FA6B581FE2557BCB4EDA68AFB7152FCFAA4AE
BF4C8CBF53C2174848AF254021585A77BAA88426090C52DF5C8622C83A8FB619
2EB97E7CB641A5304D686F81212FEA177A5D02D7DAF835070EF770C48D470263
E2E2206A4AE3CF74734C1A1600CA82B92E2B3A1E33C18EAA0ABDA2244E526E9A
199EF22CEE9CAEBA374C0208CD208F8A416E70C9D4280EADC7AAB21CBEE76F1C
EBB19381B42F06AA90EF426C684EFFC5CBA17A151A4DBE15B96FCFCA87CFB56F
2F4818AEFEA2EF9F560F6A044DB5F741B86CD223D5A306D1C06801AAAE22235B
82049C03C4C5790F64EE6F6804062CC68A896BA4092DC3EBC097170403817806
46BFC3F1BD82085A13A9C4BF22B529202C88A2EEF9D5A447450A173C87F8B458
E53141A6F29F44F1BBE55372F698C7D1D6A045FB7C70E5AEF72989B6C7E87443
10FFE1ECCC6C8882C1A6AED0E884F9F952743FDA8783AEF2476565B9047244F3
67D7822F4C74BAFE4F00FB78F7875D6F0FE240B5E49DC53B2E5A774F81C72A49
B51643332212396726060BA62F20B4B60789F91B2C49D2598F40F8D830E47F93
4CB3AC127B7E6C68EA354BC5E98B50D0528FE13500E564A62BB259F08EB3AD02
4662772BD5F3334420513ED72F3248D421A037D7948F44569E1B5E66803911EF
8BC36CB85D1AE271AE725B7F4069D3DD47DDFA309810965682C13B978222DC6B
0D2BF0E91CADC55980748A9AA8F002DFC7FE1647E61D63319CCCAEA3745E567E
8788771249A7CAA3A24CC0C0D2D50A8E83FCE48A98BEED1FCE878E955EF75152
14126F574D68B0F75C5F2D6BD0F0E3046BFD61B0552D00E4D35FFC626A31C9ED
88B48B768833FF76F913A645ADCF81B77C3C025DE04E250CD9581E80ECD1F24C
177AF4ABE0F116D6EE39BF8B22E303A0BEFC59C4068CAD93CB89E2B0ED638CE6
690D5E0A97920F05FAF6BDCD4F3DFF0ED04F60617B503B79CBBD27536EE8733E
78B6E181A769C7A0873A89FE02720FDA33C0E9083A6C449950CB2F723D838D88
1D7B7E6C3A50D0F1BB2B3DCEB8ADE35245BAB81E0B0F4687FD95F30913F2B35E
D85ACD6B64A51F7D8454B83CB41FC2C74B2E9B33B0EFD6AEC0E2C8956B490F56
83AA1819BA75BAEC7CBD7763E80B0F32480B75B8554AA910EE5C8C6C21A9E7FF
3844078A84F479A37601F4CD314106F35EE1E5E9D077FE071229053DDABA4789
DCB9051A2FAEB71EABA4CFA29FADD5848697E5AD607B8ABEF7FF2357D9154C8F
5F977D04070D99BE8EBBB1A827637A444A7069EA271D30AE7EF93C27882EF98C
124A0798C16FF5F70B821B3ACB526961476F4D193D9E59C95296194777A5822F
D139DBC49409E15D238BC7A7BE620C7C6284A581A409CC68251AC7660FFEEF4A
26D168EBCBE4ECDF6E0AE23176DA579314DD8E6A176528AC34D37555A65A68E6
8C019DC84A0EABB3BB04206C69DF15D092A94D6DEC02623A0109BC35E684D1D8
1E85DC0FFDAB6A82FC4D2033C1388B531DC024E2D71E9593B45DAAE2775AB968
ED4C24AD10ADA1EC14F1202A9E4944DC96D43D75206CDB965C7FA060F7782998
BB8E027A652543090E261E2167184996FEF5FA76509261AFE0E966A2BF4704BC
23A68947108F3CD97DC941477CE779204A743110D52B4D3F8822B479050FB374
604659A737CDCB746998A78C02318E569F7E9E4E9CE57DC6AF7B0B6EC3229D6E
EE677E9D9726567028394B2DDD25D8BAE25F3BC2FD7D7EABA3836C1BBB82DD58
7898E123C7D0CDF5707719846BEC1EC3A587C12374AFDDFABEEE30A955235294
581CDCF31898CDC1CACA6B64D6CE4C256269B2FB15774CC6D14F85F868B73934
D67A2DCD8478456BE9F8BAE1821A695B72B08FB7952B831E368956F2212C75AF
EB970CEF9F9476D4533356FE75C494FC076812F22C67AC0916E53169DE2943FD
39DB8920609CB42E9ACE77A4294BF65A3910E21C3FA1030BD9A3CEA5824D84DC
FD124712CC9650A9C49F423C9F7EA84A35A59637A4542C44DC36AA95EA3F48BA
F77BCF4A2566496458E90C3E68A4D9EAF539D26F5793320773B252F8D54A7F9D
34E42E52CF8E79EF2DD6CCD81F05A566B36022BCB7548642BA602F43A5325D30
293686FC7A56CB2FF9A0BE8C7DAD6E6F5A4E95EFA3E562BCAF31E7AE4DBCDD19
3502E41F3C6C048DC1B2B85F55903286FFB16DB66179E82EAF70526D1E39B193
C78485BCCF9D2D8C4ABF5E97396A3591BA05B62ABD561250D529AEF239490E36
D8C50B96ECFC1A916D3D1C18012816C9D88B6BFA2E0FB01596A91C9B8EF3B9AA
ECFFCC5ABC4E26265CF2ED86209B0E96364C1FAE80C649CAC69DB923E6696989
D7E886E6AD1F27E0654B11EB9ECB30331F34AED90FA866069CBBEB6EACAF25C1
A9D24C729730645F8C137CCAF1C5E54E1A2BD600E1B9749939FED3C928001E57
62893D9E895AA196290C380B2A4F74A2FCF256E9EB2EAAB841ECEE855D6713D5
1CB54B5CA32A3ADA88A819928BDC811C06F18E881F565139581861D010CB1145
74ACEAC0AE5556E88E7EB1F23793989AAD10A5F219B71993BCEDC8F943DA6D52
C6B2D86DF4B2897A8B3A6F299DCF42DD697291FFEE1DA3919E2FAC8DCC50B53D
0703FB26F0ADDB4B6561DD527CA872A1E26B1E958A56637E20B1263F8738BF4A
7BE493892BA98E852D9B9BB87D9B5036BF94F60F4D8B320571BBAAC4BD02B088
102D65FC1F44EDCC4BCE6BEB4F64C05403AD3BE91D79F96A5D8E34FF5F50353A
970466AEE644B283CE44F50F7AD4D405A7A51932A1175205A946DAA73A32EC5B
FFB460CB2B9BD5A2015578D06E54F703F1C9A51AABB02694BF7BC261C4E490EA
8A664C340302D187BA0DADA86EA663BC11C22BC908E477429C14713CA72DA42F
4BA16198A46C3C3E2F0F3F9D6F48E2241FA52B3F09FC7EFFF64616FCE58F1E56
E35C530C2D5511A6A8AD846FDCAA5E15BB774F92CCB4858567D2DD064CC899C7
5FE03ED69258E7BDAFAA4B29E0C88B84AF6A2F57E9CA62BF9D24F9BD186CC8E9
4128A3393AA2BBCE36DF5A770B89C6E2A655C054522D6AFD10C7CD7D4BBC3FC8
885C308985AAC301DD50482A3879550E8971E075E0501DF34A252AC8D14480F7
16E17E3AAED59DB5063513B703A9E665274CFB566EA682D1F5EB45DD169052FB
CC599AA827E353D20E9FA0DC0F2D5B63D91E4C96C28FBDA3868748852BE50D2C
4E5E455007A8712260DA64DF06B68774FDFFB21C77839AF9D53F562574B1B618
7C2BDD1C6798E99D2FAF94382C790BED1822AB3E2945DE71B92410F0A439567C
011CED7F67C3AE2DD6605631869CF252340966A8015A769B872CC06E1352974E
33243350DE27B4FFAF01CD086FDAECE92D3F4D88346868C8D2C2594AF3D4DA1D
A6B29FB7F53C0206AF3CB423014F6B3B561D77B67294DDA893FFF3F1FC775116
23E34208F3F34E8B62E0D2BE47DE398B42B29EEC62138033E76B8399DE5C2519
9D9ECAFEC73128E3D65EEDB0DC0DA5DCA7CB5D4D06BBC060232D1D6C715C838E
FDBA03667E134BC94123F7F74A10C42A96C45AC246A8510D072F8F144B52A3CC
F09061CC5BE56513162216B10242AD7D6E8C3AD085EF5CBC05781226D1BC89D9
3C080C67F61F3F75F15BA7FFAF448DAE5DC88D4E9A53FF19E2E7AE6138FFDB6B
75A25E16FF2E0AA1D40ED3CF85BFD8F9787F11C1ED3E07DCF32B24DAF8BD0A75
09D85990DEB2A6B8941461D3F75208306C24F979DFA0823A6E69716C23BD0802
59293A8900C0569DE59F2BDA79AD627F6136515DA7B8ED1A9C5E4B192BE57FAC
6F9FEF1A527551832A5194A4551E43C8FEA94DA686A417D98312CA3786538D2E
F80022C6E524A9DCE4E8A4EB5DF6AF6DA57A2049AB43B3ACABEF769A3F8EB420
2221C5D50C2ED6B0F63A4A6DE0FDD3352F624BA4D4C40E3D5AFBB2EE077F9860
9B9C110B5349C3BAB6F034069A16158395DCC7E61F431BACCDA10FB2C620FC6C
6208815493A0192DCA2D7FD92B65199A472FF858E0FC1B5DE56362B16A108C73
780C2AD94599BD790BB6885675EE6B428D21D89142D749EDD521348D1C9281E1
676F297B5E2D81E3E915528AC70D7BA2ACC8D9F8B6FD6491841829BF002F6A89
35FE486D10401FEEBF5829A388956E84AB6741A730822E9F2463D4F701A0B5C1
FDB9C4A0B7C82CDD5A2F96000AAB7873542CD9682BBB98D734E7C0F600CD23DF
BE9F2D4B21A9FA863BB59C8640A876247046DD08BB40EF96134A9BFD6CFA1D81
322689D75E38FBB4F1EFA4DB33E7240C29820D4D8DDBE895A494F9A1B7EF77EF
380F5469FDF6D300401706456FB9C9860E95E0B965C99587E4C3FD32C38F4E25
2D1ECD4F8C8C6D9D3FD163A775602B78B019E4B41DECE02F5981194C1E53770A
54ABC0E9390C8CE01439F744AF9AF5AB1EC249797E339CE8EE7F90EB68272346
8189F40B24F1B3E9D5928FA536864BE701C1C7E81737E1C982E349FE1F223FD5
BBD8BF696CCB9B1D7B9578107B208985CBA6271D44EC1CDE839CB77AB49853F7
2CF5E75F80C0350D023EB9CBCC42B31E27FA0E8F052331183451248CD0FBCE94
663D7719F993F76B1EF679252DB11386D756310CC87BAFDEDDEFA19FD7CE7CF8
5FC0942B025866BC66B63BC1E0CD787647630DB1C44DEC5878A224EDAF340965
5B5386E2BBA1CF01092BC1AC61FA48BF4E1599B8C076EDB1C1EEF80449C7DF6B
9D48031770A2B399021399705096699FF833906427D94FD9AE975CF909972FDE
2E61257C0DCF335BB5DDC95B92FF33D6B8A0E1CB1BBC7D1F8138945701BA7134
84E7D2A36623370C7729A23A2FA4F117C6D5CF4ABB2387F472FCDA10BB2B6FE9
0C2EF70BD3D5BB632053A41B8C1D993C8632223C2BF3D425B52F7455FE1A8F22
427F28D0BEF38EB4158BE378029A80C662490EACFDCBC549B555D02DAF15687E
8FC0E2AD02E256345673EE048C3D805D37253DF5E5F55BEF4BEC0AB285E75A4F
C3CE87C1C551689141779B27847BD1E8353D56C1F9114423971A50D8984360C5
98EC8F0025C2775187D1E9E2567D0EA5C761A9877731416D0363C6AEEB421217
2230E5072785666651D6A41DD8CBD38E3126DEB4A587E92C3941F52E2F464D34
F31ED62F1AB6BD8AB66D804D9BE6AF003B0E9CB93A097AC52BDA69B6BD32832F
88BDE162D8D11651F6073F282FF76CBFDC27143510982C0151170BF0C4995A41
B160E1E2BFE811B86E3C446BC2ED7215BCEE2F3DE69C1DC46CCF3FD22CB0C93B
A4D7CA001A4F22956AEEA18B09DFA8F7DF5641B53A25FE04F2DA67EC4AC42EBE
04E8EB5237D1DF0F70F8B12AEF1EE5D1011468C159922BB4B4EEB324E58E27F6
1FE22EFD162692123621E1577251F9DCE8AF358156116F62A06561EB9049D311
AAAB6E9403A416F702DB50030B9B09C4401B32919B7BA66E031687CF74415838
99FAC96465F97A4E86EAC488B7BD0DF0059E084EBD23F0E42D8A0975B1B053D8
A2B05F801ED1A247D900C89F1C6A5FBD072E8AB1AD08D7222ABACAC38FEE49A6
47B1A1EFCC9CB7EE93C6FBD64F063EBBB97655C80EDE038710C9DD8F21604D29
B480ADF66671A4B9B5353536C931A162771DD44FEAAA9DE9CF1DA61079509DF7
5705DA7128D2A02BEE20BA74F000A898F96EAB44EF4FC559E6F355FADF315F01
A15554BDA5BE302713F3D7127CCDFAFE5FA405F480C096130CB0DC5577A85614
ABECCCC72AC7A888FB1C2E53E1B96EF306B643A52A38FD976BCBD676ABF1B132
C6E5ADA1776944D9D4A894CC83274D3A6F625C55ACB5489EC7E7E7BC08BCCCFF
24B35B709895BA43F982EA1697F5FE4A3B91B3DD7234FF02BF45F52166EA7E27
3A67E156568E3424CCE7E04E05A06A2D85209065960F418B33DA640D2232F804
45403F8329C4898B32612D778D3C79175165F933320D0A92BA7CC5E4674E32AC
C025F5ABADA232B99A527DD4A7406092AF9FE7A99C7813701C144B71D9D58D1C
737A86493AAC148A5F8E389D8C62DAB16C5D2FA9E0E9D24FECD6B4BEDFEFA5E8
DF456FF50524CAFC54A2AA6DACD6AA5C1AD76080DBAA6A446039AD460AA4BE25
002B19CBDAAC9C47C7BEBAEA023CA02C8CBFD7A3830021841F5F558ADB324D21
23D91FE58DF81C6F9649DB885B920329DF52AE7727AB9C2AB09C937CD2EB73ED
2EAE8965C9C4ACEC071E6DC99235794788A3F919B256A575BFBDB12D0C26F27C
ABA6ACF86CA60606449CFE3EF8C5089EF1459B4C0F1E5575F6347688E2507D2E
09ED8F17DD7F49096CA2B4A8DEDDD41C4BA7815591AD0C012CA002E6F2C55C7D
BF46373C73AD8905052A8B17C7E6D9A252F521076E9120396B0EDD45EC79FDA6
1EB0BF8FC68ED87996F76B63D09944958C7A9D8731EF41C0B6F5544437523337
4533091B05A39CD0EE7DCB25BDFA7BA7F5BEF374CFE055370DA2A564896CFB7A
D3A89E8D9AD9D5C2D29E4D78C76AA70CAFB391121D66C3402C14A534C7D0FD94
CD0B98D9AB991CE6348157F4085AF756DA28A0297E0C196B74731D5511744F55
D7C53D86718607E8834F148EA28F19912E4CB9635B5F86AEE1E4BBDC4F0BA0CF
41F494CF0B634E532233F1571358990722ECAB9A9EEB4C23C7F19F747E013494
2473D7EEE2F84885F601011A9290D50074AA748794ACFA9F2854C8DBD3A5859A
FE58892F923D5C991FF09927DC70C009052FCB15AC2501BD88C223247C319F60
A6FB273D92E5CEE0DAD8A04748CF70F46B20ECFA4E3A45BAD7FC0931C8524F6F
DE560AB88B426A472EE67B41C748FF1CDAB4A0A4244F5BE1E120B3B029C0C9B6
EBCA95027B3F32C72F80EF7EC2AEB792864A76CD1FB7D10DFAB58AE538A51931
857454CADE337CE6D2474F1FDC521CA5B4E00A5BC71A8C598FB204DBD546751C
B2C83593F2A1515BCAB4C5DA463B1B5E5F827FC256FE5248AA1E1B44292E823E
C75702B4387F3BD51DA24BAF61FE9C5F5EA94C32ED9168DE3066293B5FBF49DC
F5F6C41D14CBDFC9D20D22F80A7238FE0EEB0B5CE49C75AF109AD7A8E6FF194C
03015EFADEE5320B9EBEDF70682F9FE50D5C5E333846C51EC38570DFE5823943
AF226A7BC264477B2AA5B509D135E1C9FDACA671CE7441A6A9413376925D9EC6
AEE562155FB2BEECF5B7CAD025391826B289F53D4F6A6D6C61E0D2479448F09E
50D667281BE806E977FF3AA16A4C9D26CDEEA3FAB7005AFF316C010935E6AD81
B7C7FB1C18E0AC9035682C7B2D4880AEA45D98D95A078EE86B39BB9DBE457595
68D7BCDBC05574CE178660B067446A1403D16DEE874331DBB29830B2CC1F6AA2
5486C64C70C645D9D9F0CBE3CE2A9A4E57B8FE94A12444030A10AD1525EDFDE7
65F13A3CEF252F3294B0153D66BFB729435085243D09644D5281E188ACEBD06C
04A57FA9E5B735B9BFBA3B30C88835C82875961D9A0B1E1209AB01F1F9E336D3
588A6B1D6149AEE894E7A86755BC8DFD6FD8E3EECE3B5E7C2C93EE398226D02B
51C4A516B97F3C9C3A4162C0DD5A78341DE607F07D2D7858B088749D6BF12107
486BFA56CFA29519E7D456033067048BB5FCA85805AB1D378B393086DA632974
862F5233935BB75FCD712EB15979BDE58BC80A9125E9B82D0049FE4B95E160A5
68A80EEDD7641DBCB0DD16841DF451A077AF2E35C2F0F8B1FBDF61F9074B2BA9
0CA603EF8334BD4D13A9E150DC6CF0712124E2D0478496497BA066E928A2A33C
30734FB1017ACBD0120D06BADD71810C0F9DF164EF4308F669BEA8E055809D6B
BD828A15A4202145BB9ADDE00C33635C19CE122684D152B621074E887672437D
9452371CC0569683EC895DF4C9415EC0273488C7DEE7908FB914D2251D84EA2F
1F1477C266245840E95C5045F010372776309B2D1C31CEB59BA705E99C559B74
4156808CA36EB61EF90E912D8BDEA81BB1FCE3FDED22143DF14D378C394B0344
35BFD00EFF4F1DD454752B36BFE057EC95A75A27347F52F2358FC4C1EF2C40E3
1C6E7AC3415860D3DD9703BB4E56BA123CAF093DBD90F4074357CC2A94944609
18035A7E0BB0286007DB6F3F5B7E1EB3EED2F62A1A72EA56712A113E17494E57
12EB244F6D2C709E34F5103132C911CD3CD52AEA80510F4D1DFD249797107FA7
D8D60EA6AA63BB60AA6CD5ED906CBB8F70A9FF9A57F295BD8C56119948EB1690
18EE1A57EFE8B132D2390E4F57C491F246ADB9F7617EFDE1FAFA3CDD3DBCCF0B
7734492530F251035456DC2031F642B297EDECD0DF1F970835D5BA12041CBA08
94823C520FF03CCA9741F6287F81716915A28F77EFF8863B3D74492511B3D7F9
3CBE11C3D296567E0FA2DA6F53FB3F021E9CA6756738532EB77E9FCC6F0147FB
81685FB585D8860226E5CB276614247D7E76BAD963C37DC70C468731CD0CCFA5
5F7DABF3333D79BDAEF31CF5D10A9D57B6EDAC7312B6E2DBAC8F8757CACFB2F8
C83F63AA1F2F0E5E928D07BC943F3A0AEBC368097106241DE039AE0730A8981D
2A3816639261062A1133770CDC7D6534C32E32937FF0989531F88F384F0E00A9
28289342
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX9
%!PS-AdobeFont-1.1: CMBX9 1.0
%%CreationDate: 1991 Aug 20 16:36:25
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-58 -250 1195 750}readonly def
/UniqueID 5000767 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D635D93B1823EC35EB8316AA1
86031FCC99F57CB21E8400E54AA474B57112F0D4754A16BEC19117E9D3638986
0777A71B135CC18E20E193AE6C2BCD89F4A27516DBD2BFE69FF9920D547796F9
89E0825B6BD5F492B36AF136EA91B826501ADB1979A4204B2CB5C0517F2B9494
9B2077F316D2B3DA256C99F7549E6BC4B04FE12072B09B4F5D482A126AE351F3
97DB85F3026A793B51E6B28B54661FEB087F011F0BFF67272DD1E8825C180723
22AE77CD6166D2605D0C0F131537417CB60086F08E7197AA916D590944BD801B
DEE8F29FFC516E11396CCB8395CFEC9262E22521882DC0316B0A129DBFA5FB57
E656890C2471675E0566FE461028FB05532E274E6DF77E7D320D09B2203BBB5A
8B185B66B2F8A18A49589C4EE27596DD56260D0D759D2A12CEF7FC3010BA1B36
85A2FD45129DC01A0C7570423305C25D957DFF9215102FFF35F428C823D549E5
014E7F99ACA6C10B3C92805376D0F3F280D65852CEA54F5CC9DEF9EC1347824B
0733D3341B34937316E77E952AD9366D3B2ED045165565F07CB636385E5A5911
2620E185B105EF6C93890833054E05B6301137338A3F1D6AB2F9CF18910F1991
46D29AC241478CC22252F00C264EAAF68C6D7FFD12256EAF52A5C68C3F621717
A771A7A61C60A975786E983FB96F8A141375207181B0830A94E5D19383AABD28
5D1EDA2419EE704B30DB5B64FB2F06382136D3019E6EE10F7A3EC00CCDF64980
B68598FE1A396EC7225A2862E413B344B10CFC67C566CC6F6816BF8CE42CF3DD
64F003A17932DD484BD93709D579C02C0185F75CE61D2C571E1CE26324922476
8199E9FF463321CBCF789F7B236F23A1AC5EC7E643A546672EE3543B7320FEB0
D6EE07E74E40B278998118FDC03C8ECC1B7C2D3BD23F57515AC3582AE72C15C7
E7443A5629A1B5F0B5FD7B7484E7936B66B6BED401EBEA01E77246772A98A65C
8FA8C80A085A08CF26BCD746245F7036726A3CC60ABE3C6FAFC86B2365EE7D89
B783D08016B542EA71FF97876EEE2EC89C8E251BD6AC9DA70086CC5B341065CB
867CD9F97B14C4A5F78855FBDE180ED1747311602932AC00F55498E794CD0364
3F079D3F8DF39DC9E8C11CA255023A4F69D4678D09CEFEE825B1AE1523AD5A9D
EAEEF7CA7D3A6E39219205E38E87FAD7B1EC0C328B349653DC07C43885D841DB
FEF4D7EB1705C8BD08CB937B8299527F3E3D3641A08E92DC8460BDF29F35C836
5C513BF56276FFE1CF9B84FD1561F67BA74633543BF66C3763EA87D1E5C0BCED
FC208D1C3E3324D12DDAB5AD9836A80D3D65AABB0BF84B0EEB4FE5F1FB0482A8
5F0AA6BF7DCD628E4A13C46A6D0D214EF2B2B996ED75FC529456429DD310D5BD
63B9E8D0C95A2D7F78C56F5B6FCA0BCDB3A037FE6058C9C7BDF99CD61B0AA2A1
A63CC8053F55320CAA5D3FA25EDC503E8B2A4067AA8CCE5044FDE2192CFA2784
215A9A021AB4B5B61C4E96D6DB4103C31EF17D49E998574DB8B7CAA0EB9D247F
2D612AB1FB183B8459C83E24E27123DACBE65FC2B425318BD6CFA06C969747B6
EA72A2422028FDB308060A763BE66AAF5EF550F155D46C2308205C5C8755246E
B30412F77F52E655A8CC79199307E6B83D20196809EC26E7C897ED2C0A6A8752
1E3823172C2EA3CE0898CC4B1D313E9ED133C49C5324468DC9F093A1BF7F3DDA
E0551C0302049851D56666FE1D170D6FBA11E0C77C9295D01455F44C7550626D
E4D98D39BC7043328137C3A2F0A0414C77B5EDE9C235228ACA183E5F70A7C58B
68E6860F5D5D7A7CC665E1D622D1578BCC1A44CAB51F5E6512F19001A05D5556
1B6CC655ADC10C0E44A5AF1F30EE6185B2018E0C2E6325697013D19A97A3D5D8
7D0288AB5F89C119C457F21CA77A2C86E9C8021A90768190D53AC59AD3F6F3CF
808EAD894D38FB3BDA675FD2DFF95B230623B81354C219FB4FDF8E4F6036469E
D9A37746D440161601D62E558B69E41879948D709C05F44CFAA4B8F8F82F59FA
54560DFD4411AB797C54AE9E84F3D20E44648118B870DB311B8609304C1504CF
B985C3355C0DCC4C82197C65156B1936E71BE971C41F51E97E893C0CA44A7967
E376B4E442C21026F5A2AEBE1DA1A1E804848BB6C16EFCD118E88160A413443D
E4299D31F1948D34F5CAA502BEE6F070630882A713754BAE35298D043738AED1
F3310C5426F9656AD69659F82C99C4596C4C53A88A501B11389FE4FC1DAF03BF
2A325B7E5E7196046E133059E305690A9E55D0539254B727A8EB6431BF365F95
7B51B7F317C9D17ED76C2356CD43C0F9BB0D87050293B76C9064689EC8FB503B
1F2AA523B05F940BA40CD2714A12EFBDCCD1FFED73DF9594A8ABAC90CFC7D945
543F60F30032174F703C8F510B1A9FB9D9D6040DE6A43085228BE0D54671887B
6DF58968923AB396D991389B82DCDE6C60B4CB25A842F91BA1654FE90B2D28CE
CA4E0FC4EB11347BA0AAC440EB8F7C753267B42226CD3F187C7B7076B5D1E2E8
D24D822952A25767A0AFD30DE69C29BFE8096A6F4DBA183812AAD47B344AD96B
1B952732E41064A8CAF8C1B2DAA24FF71612C73F5C100EAA549F95ADF4BB812C
9F4A8D21DC7DC8578A3B5ACA293E655DBB809C395D9D9F4E19C40C9D302FF830
E04EF0C0E9A574028520B6618DE58E4068C49FA20CB7687C211D3ACFE7B9DD84
3544E15B0F52B495CD01208B6A307DAB75107F09F7C070484803B361792969CF
3448D14AD2F37B7A809A516CCF72657F35F1C4E629727083D4666BE8C5A6B2C9
EA4752E90B17D4A7C5246200E2425F1289562579303D3E355AC71C061FB1841B
487046045164713EE80E67E1B272B3968059A69D318CA4E35C3D57663BDF5F83
F0A4EC03BF2370592EFA2A30D7CE61BDA5B50CF64C0B09672AE49AF4A75A1538
81753945284F8B0A1D85BDB9A518E09DCB2B53932FD536F45C28A8B1B54E91A1
AC8B11653D238AFAF53E4F589F5B7727F0E93C1667CEE2115C1EEA61C0042043
9A7D0F7698B371A265A74775341260B5BC882AC8316ABC9C17BCE03BEB8C2791
0AC013E5338D80F0632B82767FE6D96AD32B1867C3D4083D2AFAF285D6543B6D
4BAE613A0CE4DDD09FC120CAA93C07C33B435BBE06EDC733280E4F15B8428590
7AF942763CDC56D378D4B36D0A6F0D123C0216EA85D8E87F0A67F586C66AB3A6
3EC3EC293325781D1E4785828EB4FDC8AE12E81B0909CD8B2EFE6A5A62CF96F4
880FE993212AACEBCBB86E4C9F1C06B70AA22A5CF5665BE9A5855E20BCA3372F
3D7F792E9AA797102452BC74DECD7B73A4E5FF242E2B4DB53DCB9B427265E6FB
A6896BE82D0004927A3878E61BD23CEF83888D327776393B548CF1698FEDA260
736BAA44817F55BDB4F4241A43803AF4C9A61833AA73D8F45F5FB37A4008071D
505D69BEB8E2566B3E176EE06D119D1167730182699CD93E40F5071CE2A25C2A
040D7CC118E84BEF25F91429F6BBAB8D40919EF16A2678808241FFF8DD1E7F1B
03EDC7FC25F39CF40D067CCF7D50C7C194C4559534A5B013B11E5A4B659B5F55
CD48C1C344BD858E7F06E133E7791DE90F52CBFAC0E1704FDAD05337C511C161
965D7F2CEF7BC04A0940E390CD5BBB095C27333385BAE14B0806723A5D49BC76
DD52C6A326C7598FF8371035C6B2726E41F0C027852A8F907419E204F87FF7F3
7C3D29E808DE00C75BB593B99C06C02C66C2995986F23E7168DFE9FA8FD0B436
06B7099998240A4D2E31D8F193E3B77547BF0D77ACE8D771EC98786DAA87EE08
D21FC8D1F4263C00AEED0BFD142765F21052F2E6522C16CDFC0136DE39FA0F6C
EB42B1EE76BE8110AFAA2489C4BDC3DBCC023F7F35CDE78786D7CE1DFBF48241
47001BF3FE09037DF71205A296ECA3F48E42E89E205A07D9F3C39E2B24E40A56
3B809E21CFBAAFA4C84AB72775EBFCA526472A9FFAEFD83F9C77C810DD8175F4
DD9CEB998303BE980FDF1598C71204D81D1374EE1E1DC8740BA87430DA488834
81EF4363A8F7433F5B25A622582332A6879F75A7C16EFDF7C119B19C6FEDA5E5
AF27D2FE5DD96C745B5766C9B00BA67C38379F1632289ED1CC845A8C9AAB7F17
3DCAAFFD1051E392C42ADB9F4E74B6669B3CA4AD45B3572C0A727D0163E5108B
4B2D86C6F0469B1FDD6C8A80E8D176C429E67F853C06A5D4EE20BB121AFC305B
9F645A23458DDB1D8A0324EB1BD6A8CB6E0D82960F2F2E1AE16AA03A7FFF61CF
272383D7203D1470B249AA9A9A9094FA8AD956E6B567492F7408B0B9E6AFF4E7
1CD5559AC54BF6D0C85AB189412EE309A3AFE4EC9B7BD477A6F438DC510C471D
80069BAEAE017C641BEFA679E6FBFD93B62D18FEC43B031309D7F5E3D895BE88
3795C54739910C46CBEFD126D4F1B8CC40B1263F13A4125C35B74E119033BE66
07A6CF20285ED7AB77A6ECC5E66478CFFDC7372114F5FB7B4E8AB31118B3D3BF
82E9F2A9B0F0ABE48717540F443C3EF8A1CFE43403EEF03A0BFFB7F9638E9ED7
CCD61BC0732F31DCE7A976B77223F9960C513F35DE19C2D52CE00355594F9C12
021813A50293CD6F7FD6865BF2931004CCFB0715CEF7C7E5D078A87325113EF0
63DA709751634074D3571C8821852FDCAACF070C9AA6862F2FA6AAB867AFDD14
181B700C2512253BCE2856BB096F94E02730A1C3A72423586A536E5F76BE0CA1
406CC19C5B41C9D9FE701F8270C487644A04D171C2F3A0653BA2F318658B42FF
23BA9D332188ADBC11EB22924D64AF44116DA2D13FED857AB6745FFA7E36BBF8
01DBC4FA542DB363DC312C191D142C094216B75473854B7A8265B393D14A25CD
948969F3B0517761C89DA4F96186ED35C34D7427D27287B45085D287E1C713AE
E57C8BE2B9A705250DD8F6D2A6F5CA5C91AEE1856D749B3612BF8DC4D6BD7FEE
EE4C3EFA22C35519EC257F39235996CAB5171DAF1B49B3569C4394E70E9B8EA1
40060FB0960B34B2D0A01F2DFAA1C02DE22E3AC79A73BCAB9B3800FB86596B10
8CF8F0F5B148F9EBCF4CEC782E3BB01775B67C08DB2762C3D6617DD7BC4BFC16
269E5E397A125DE0AB699F32C93D1DA3F056278E5FD7295693DAF15A9917D52F
C29389F3BBE55A09301C645EEA6C1E1AF1E0E9B66741E0D7EE21A8EFCE5D9E65
3BAF09E1328EF37A3006E0B0D3D25FF866BD8115EB88CE4933BF302EA5932A70
3EAC4863761AAE4C1BB8FE5F934CAA0CF59FD361AD16938612FF1A5236B1F2B6
1499D95AA0445830035B08E7A78CA598F6C91C87C54227F31285E36FD0773680
8F61B782375B3285896E2764CDA131983972F5DE503F9F7485694B32FC583E96
C5B56BA7070D54B7A160C05F4298063B9267266AE46A32C2EDCA0009A06BD283
F5007B35FC56D7CC42674851D1FDD46D2BE36A3B4FE7677912ED24BA9AFC6E54
53BA278A02C0C6F2C6B279484CF1F526FE3A4392DE8400A1748DE728468EBFD6
320FC01848EB393268C756B74EAED8AA31782C74979FD5A215C3E05A6B0FAE80
DDE70978E7AACAF4EAECF797BD0D4DE0F1300949217745785DA11339A08B8885
7D89F3709ED53716D252A188B9BDDAE92055A96AF88324109C7CC410550BA158
C11A17661DCEFDCFE1F1698AEE5306B09D3FC02A2BF63E9C7EE6D87331669AEB
518696A0EA5C5DF9BED560F41C635EFF83461255F47990A5AA195B5F6604128E
13031E9BF18594CD79901DD2D196D1C2861187B9DDCB4C736B1D5D2FBFC66714
C7E5AD7EF89951125950087D4D38C1C61CAA1904C83D1F5D39E2C173085664CF
6661B999E6303CE6FAF8476761BAD4B3D4BF995F612E6869447CCFA9D0849592
8324AF7D144A19250C9A3AAD370B9ED6FBB2D9C200A302213E9F0A00930F64E0
4A7EE890E7B0689F218BCD7CA6AC54966D735B9DFB4E360C8F21FAD9D893756C
BF4D1647CF096F3C5A971D19077BCEDBA1186E4F17C3B65C97B6EB080ED2B4CC
08CE39CC9FBA40A7071AA10B339C33D8F14B097C81FA8FF4638EFEC8F1E42420
97E3C3C87DB20EFFF57243C0D5CCEEF723022E75F3C9866A4E7ED6B8FA6B9CE7
E26E880B9BDD3D8EE86FCF82911599E38ED84F1FA332AD3AEDCE0EBA211E7253
CFED4CBAA60220D1F59547CFBBE0B67F3016016F9D25AA725F32BDEC3ADF18D7
561AC3BC2C78B1026A679AF97B7F49FDA8A0073ADB8890E4D28D33A04253609F
A57B13E0A5D29B3E078BBB9900886D397CFE48B9A1DA7318453E2FB594D64B61
BFBA96A8168291E172BED1E2A5AD7D955AD689F60E8DAD4B84ABD81C9A8A482F
4B299CA2FFAED28C363A239B988260402A6450A19CBE8C085CBD23084F5F3192
F0B3712247100B77A408A8F6C9E5D6456A3F6D785CDF87677A49723BF3BDA033
8E41007AC4EAF4E9318E3E4BE0DA7C0C50DED8FEE564AC07C5D3656EB949644C
818B85082A7FC0F75E6B43B444AF7FC0DEA6E4DFB1497F35D919226BBA421B60
D230C4184D6E5D087826421F958E0884C9D32B17511AB1A232B85751368C75B2
0FB73A685207731848E73133AB7237BD036C75FCE7AE451326A956CD0854DBB1
FDE195D96AA9F3AEC49FB90C3AC9C8641F0CA087454CD8BD676D2CE7BB323181
D9AEFDC0EF1696A3C759D250EBBC8C369402D80B5205CE896D6AC7C34E62F549
88808DBE0A3D022F6FEBE8361ADBFBA75EDE7671E02E35A295B650ADE81AFD03
01F70A1EE266AD3CBD5492E696265CCEFC8CB4947FBA982F85B94DEC38BCFE82
4241D70AF6356F741513469EFC34D58E8E79DA9CA25EA231A114594400C0CC72
241F0424CCC8CF9575E259080490F7AA3A880AFDEBB75F771D323463EE435FDA
4C3DD1332F58841539CECF963EDAC67E56E31A483CE879BCCD63531FD4A24CCE
2C1AF7E511BFD2DE9F48E97A4CE67B60E091E1B226EABB2C9AEB934D7ED6C29B
9F4AA1E324684636AC8B4BB92D0250B8946B99F62CD437AA48C71C4CC249F59F
22791EF64B0B17170F2837B160FC91125307C98B498D8368A563DC798392D175
C82DA024F1D51ED91EF336CF7B1DC80A35A9B0C7F47458972086025B2966BDC0
F479FE6600AD34A20FEE276F07BE6D752C7E80D2CC3AB52D3C7ABB24B4D9F6A0
E91AD35445807315FE000A86D33AC54F2AC0151999A96F717091CA339D0833B1
4446E30BF5FBFC9811F6B3F69B77F3A4EF4E46E3D7DF49958A1F76B5C9DFC2DF
103A8E98D60275F780D24D00E7C465408C8680837230FB758DA9D7ED75A088AF
EF02D7DD293147054053EF385218C6AE63C42C42A714378A36C158A6B01439E9
6252D77B268FBC5DC24A5E6FD5C9374F028B185859D80BA048B860DA27F0AB94
CF3A84AB674F19D3F5BC32F00971C0E951ABE8EF9D1268C93EAEFFAF709B85D1
7D24EFA831F80AB6EC8A78D4987AD6C20C1C1304863BD7929DE499FA01745E4E
DECEE525E1C5A24D86B6EB8CFE1744A4B37A857A0FA440209810CA093FFF0C2F
334199C485185A97C6B3FD0C6E385731E97B5407FBF3561B9432030CE74B3A7E
F9E93DB4A14CE711E12510B764DB6AD645CBAD4744D70AA4B317F1E394B438EA
316E742B18F4CFB694942DA811800C77458A0C4A66729BF23E67BABD3445FC8A
8CDCD326E65A83F7C052AA1C07903D5D7D86538762554512C36E8B3875524DDB
E2E458E66488830F8CBC418888E1317D2B6DC67746D4CD69E793995B1B5A091F
8A3BD91C7857DE3B2195E1C947B47DD52E30986E4C60FA35D166B539941CBC47
B063A6600C8CCB71C21DE0E2AE6CA14F1639875B014FEF8F8BC770E9E2AB45D4
5DF79675BE2288110376046EEFEEC443106DAF1C67B4FCA753F1A1AEEAFE4F79
C13708A1FA05BD0695BE23807770E7922439E4D8BF07CC5CD88BCD33215BC4B9
E63D920AE0B8578737F20392B717E1086942335CA971078369467FD12CD59271
9B89E512A1E87BC3064BCA6220595620DDD982DCE09A2F4D4C0C33FE36089544
66C72382E48B72B52A611EB76DF57210C9FCD3033E594618FEDDFFF7BC4EE337
5C46EE90D885A71093B7BFF750422249E6E7D382409EF2E44E9DB4B9A68E2C82
B6199A6FA9ACD74D029047E54F9EAE5D941B228EFA0A15412ABA6D7178D542F2
64616F21258C6F564FA02E21C830473ADC3842CF03718D0AF2C02D9311A3AA1C
A41027E3CB65D5D6299375F60393AC15CAE41B0E19D036A090F848D6D315BE03
A85BFF694C61CC4447D8D8BD4788A893D4EDD9FD8452C874DA5437786D3A007F
AD885C80C5EE4845E0B9D539E92AAAEA5A54F0B439628F19A6D34EED8E51EC33
1AC241DD45EAD89B5DC76DE173F585640D7925E601B4170A7AAF397A7C627FA9
3648DB9678B82079996B5C0760E681734377BDB7E8CC70068BC1A7899C8C83FD
6E341F1CF62BD1C3D22FAB8AD842708F8DFB9E0AE0A36DFE101B57E2E7B0557A
2EE15FB6F661D956814AC26A92FCBF6B4EE18E49E1D9787A25754A70BD7FC21E
F24C5D6C165DECCA549BAB92B6396AA72E37E319C9269A15386ACA26C384CC6E
59B3C0075606C2155AF213E082C883A4F9AA8FE840E340D690ADDC7E18C69923
4883751DDC4BC3D00FD860EA18C18A98E01C9F43E3B9924DCF0557C8F93CE21A
E1AE2C6FEAE83C7E689D9731FC27D40E8AA29594B79B968614076EF0A7CFD701
22A860825412143758BA4CCC7F9773BE3C123B96C7EC4D75E12F3ED2D0CDAA5E
48827F13927635BC70807D4A19B71C2C1EC6664607C82619F6294C037DEFDA66
13F496E358BF2AD960EB9D800412DEF3E31454CF19D4C8BCBE23659E7591D0D0
9ED25485E526D75665523B15562B8D468EE1E8C9C8F5CD01B79C9F39565A1AF0
07C14D2DCD4B4508F236FD1B853D9BDBF93CF835A84821CF65A0D7D579C67E6A
2ED0E9EC3964DDE62395D5F8C3F3542D0860347CD294FA35572ADE08F59659F5
69E72F89B13A4C362503147418943255BE1EF3CDE72D6C96A4E8D26E98183F93
8FE6A11523A6FD012C2DB082BADDEBF9EBE67CC3B860B5CCAF75307E4F99D1D4
2B1FFA54D0A58205FB99866D738ED001571B48457360FFF0579EA8BC9C0D6E30
9CDEFA92398ED2C045A36AF4AA75115341F07DCBA2C0E7BEC97E4FDCDE9D1BE0
993317C5FF2188EB8A7BF102E67A5FEA3BF6926D41FB449080A27BA592739A53
6672F64BD2FA62305156896253E99BE1EA62B0E668A36D8099259C6E7E95185C
E46AB637E9DF1B108E02963C74693016B030F23A200736B7026FA0E8C691D4C6
0037BC69914F269A071A1E679CB259A88E15A47A24D52D46B045EF3B015FBEEA
3B322494D0453F949F6594DAAF9D82A82CF9679B3CB676B74C9809FA494E34CB
7AEB75F5655E77590F301382C57FEE76296B8D8A0F268F04CEB0407A29E8D059
21FA810120AD5C1FF3B1958777B60BF7F04DCC6378A3C95DB5CDB5A00148173D
F180386911576451566783973D365EDD2245F7555F1EC6E632AC746941C63FC6
C45D07AF8E3BADC6DEC13FB239DB9F86EF8744D0133F31E6B07A5E429ED31780
E5BC7A996477A04A644A7ECAD0209F6EF68BE2516D6CC39DF8CF7699029ADD02
CFCCE2B4602BF524AF567C1A3227D2B5BA780E6E804E3B1F87452B974E5A1AE8
9C923881233AE50B89339874BB64582F8571B2861C4F27AAD4705BB471F53A8B
C9D235130704D1D8C77B94FEBFF2A16313DE2413AE47C5551ECE0286ECCB2EF8
F428E290525B5D86BF51B5315F66052F89620A765D6CF733BE9ADD12E2ED26B5
A6C633E58437AA345F17C694EF0498E99C5BFCFA3026B28DF4666CFAEB039411
E595AABB626EBB47CAC613BDDDFEA3358E940923232D7E86EF163B5F4F6FA061
D81301815CEEF677BA419B26E9714FF325CA610EB94424FEA0DE25A73A8EE8D0
DFD5D4914D08BC87D5B533FEB189A285172CF42D0E56204C354D979F3713F61D
CD36A651A01C2C9E49775538B6B9E7FDA2364E51238E2170B4B639EC2D77B1D3
A9E16AB78D2B8B60E42872127A2FE0EDC83F42F07DCD7A68EF4AC74E9C7426CA
8C11234192B23DEC787413CF80546F64135BD810B2D8F62C328167ED494D8D37
7126542DE8434E87A711C075225E0595B06E8A45913E8B50BD656A7991251512
1259BCA006B87B09904BDC681CA7F81E0DB85D3CC1645D1EC68337682CC1CCD4
C4D90CE664841AA23E8E45A9D7FF317E8FDE9DC433235CC832645E5D77DFBE1E
DCD165A3D90B721EB8777E943D1E40150F7023968D48116EACE6209BA4B69412
8167F6F014E67A9B10A16D366BE4E90123CF70BF2C49DD7684BD3776CB1C186E
33F053458A275ED8B8FAD03D09A1918C3B246951C7ED7C529C42F9EFC88D19B6
24B01744D57783330D0C995355C2465E07A26E3578C834FE03A01B1FBCE8F961
945D28C91804E9BFA1109E1B0E9FE12AF1DCDBFD4DDF7FEDFC78E2A44DFDEAD1
C920525E85D01B17B8E13C0256323E6E184A1BDA25711474059D32AB3D795DBF
F60A15E9B3F040CC9698C0C0A0D87923648E501CF2C0F826AE246E3B23ACD515
6D403840E59835F93196808FD7E0EFDF67F57F32D60B9E2D0B84168C55FA3BC3
F92971EC5AF53B065242278C037BD1A3A1C20D91BDD425C0E106948FE4B6A8AC
3FCDB8F86B307DFB4884D4E9858209C6B4833855ECCC798FC6C284197F343801
AA31D17322C29AC0CF8C646B41EB526AF94C3C6B7F4277F18F0BFEAA4F1D1AD4
4295EC426F11C10E3D51276F4BB7E299EBEA3976B1C24A4060354C871384FAB9
AD3AE2D55738BD3989A285340DF1E258C192A3D159D9EC67122FA7C7D8FC2DF1
F2823FD28B8A1551127678DCA596E45E24A27497EDF862A8BB4E947AC03FEEC2
AEE5B3014EF7FF32F350F9FFF51A8929AC01DADFA81F8229289CB0A55E97E91D
95D1FEC85AC95B41C30565CBC15B6AD5701523F5D43687823212E9B89CDBA120
CBA00B57310B8C987A27FC39C314D15D94E9B66C82D9A3A60C86AE5A6BF6A18A
10ECF7E1F542FAADADEF012E4D6584CFB381FF60B74E64E8AF283157234A09D0
5614E6DA5C483916AA278DBE7C6DE2D09C3CA3E1442CFDC82A740C9DBF93CDEA
0A8C45228D49CF1088A0F72C4744300DFC5AA3F99350DDAB7DB794B62BE752A9
E63A44DCE3AF66F7B630F7A89546C4D8B81E7BE130B39EE06A46CD4817BA7527
593EF86E7BD4347175F3E847DF0372D746AC560E1EEAD2E867D0791CA23BB411
0B15D07460F6E667342EB564BB75CD1820B9382A93E235A34AF1F6B4776CA744
802F769B6288C1A8D9A84B72325986B627511A1591BB2C09F258BA04116B66DD
04B24A3AB2F7D3FC9E02F88AF0D18671E785DA8EC8DE0DFD0A178BC0C5C13E20
942C4EC4EFD1B7CADD4EAC6C3475878041A95D0EFCD395FC01B751EF030BB6B4
DD683F0A339255205528CCCAF2F38526BAA30EAAC0FE3A8807F3B2CF8C4BD77F
D7693CC773A6F024187014E8171A4265F80D2A2581951BECD0B991C21526593A
CE289F636603C6404245A5CC5C9F762065D2F0FEDCCA2457611F064E40752F5F
4AA6953A5B903CBDE5BD23AE4B8040B8A26FBF56B53094A93D642F938435F13D
BD5BCDA4303989F8766D9DD8C871164FA782F16EA23A4717427078F7B51A7C9B
6C14B81C48EFD6CC38DF35EFD13E5A6FA628E31F1A4244693CD0601494607294
D3290A862C6A193B70EA69901862F3905545328484DB3B5F253584BE22E929F2
987C682218B71B81489AE8250A0B5ADD94DC859AC69F135DFFF70BFF11238128
394BDA56837857BDE85EB513EAEF680E05AD02689609F3AC7F895040584DB406
3AEC6C3E936EDDCB2A3DDAD63A8A3DA4DCA2FF323E8E3677C83F46B98797A057
EB3528A094E6B2080B0D50BD4F37988FA19F1DCA455E4F123A9006743922707F
19720E3B9E55B3ABD3A738AE8044BC9430B53D13CC90D85E620B2E2F69BE1A50
00BBE680270614008812A418B1E24FC5F6AC9B575338D7E73E453F73EE24B39B
BE3EC02DF7773BB1BA0A3E66343977C93C468E778D2974E7D43C849CD3174AC1
56B663C05708ABB22FF1AED9A207437EAEE75530F5C122195F81E12E1FD183FF
A1FDCC6EE3B0162A04E1EC02C56E3DE6CB5906E25755C4712028C0BF0FE88797
DD6B963CB3387EFB73F8C47351ED14A80F389C31EE3E97AEC799F1A371A35532
4C6AC393CD743E42936D9A4CE3B454ECA95E7849329A8F9CB44ABE37FD8AD7C9
68FECC73977A10938B81AF9F1AC2B4BE64BEB3D58979BF714B8848F8F9E55153
631D2A3A73246C00233BD184C0B28B364B272EA4B64C8B0EDEF491AB6317801F
BEB0896217ADACD88234FB07A7BCC11591FE7514C8C6DFC6C36BBB55ADF43FCC
A6B004F6527FD9464E828E34D7C69238068C0CD4AAF31454067AA722D77F4E31
06B565526253607934280EAEC4B510F85D901060496DA8C3DB4EA81B7E710C90
A16CD0D7CF76F372E52402135F1BE6A2DD83855E7D2E42480052012DAB84CAEE
FE4FA5CCE5A9C096FADEFCBB5B052FE91AC07FBB751ACE4841156B1172986139
994F3B02BB21D77A7B71709D84F19C735F7364A42ACF1A122546F34DB0779303
68FDCD8A0DFA5FB24691A119DC2F1344A69BDE7FEB971089414B58E08C66717D
19BAF225AA122BA98A3A6AE85D046E08D60E17EF5836E04C1F8CA701AD6599D5
8FC92B27BB2D9DF7EEF71F62E3B533181A700E274D1F908B8312E1C079B82CF9
02A3A3B157F4ABACCFA03AF2EB4630090E96151E52628BF949415173DECE3244
FB639EA8F9731E74308087B3E414F3289195C736F4BAE8CE5E291FF2E970A8A2
3A6E00FE2A85DE6F3715ED4A23CA0F7D50B4954E72F378A1AE85BCDF504F626A
45953DE8E44DA00211B58758A51E9BBB0E50329080ED8E82E4D35FE01F65A6E6
8F7187B5E18861F009FE689F7A5A69051858237E0BB82E6CABB8A86D15
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.1: CMR6 1.0
%%CreationDate: 1991 Aug 20 16:39:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-20 -250 1193 750}readonly def
/UniqueID 5000789 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA17D1AFFF95F4224CF7ECEE45C
BFB7C8C77C22A01C345078D28D3ECBF804CDC2FE5025FA0D05CCC5EFC0C4F87E
CBED13DDDF8F34E404F471C6DD2E43331D73E89BBC71E7BF889F6293793FEF5A
C9DD3792F032E37A364C70914843F7AA314413D022AE3238730B420A7E9D0CF5
D0E24F501451F9CDECE10AF7E14FF15C4F12F3FCA47DD9CD3C7AEA8D1551017D
23131C09ED104C052054520268A4FA3C6338BA6CF14C3DE3BAF2EA35296EE3D8
D6496277E11DFF6076FE64C8A8C3419FA774473D63223FFA41CBAE609C3D976B
93DFB4079ADC7C4EF07303F93808DDA9F651F61BCCF79555059A44CBAF84A711
6D98083CEF58230D54AD486C74C4A257FC703ACF918219D0A597A5F680B606E4
EF94ADF8BF91A5096A806DB64EC96636A98397D22A74932EB7346A9C4B5EE953
CB3C80AA634BFC28AA938C704BDA8DC4D13551CCFE2B2784BE8BF54502EBA9AF
D49B79237B9C56310550BC30E9108BB06EAC755D6AA4E688EFE2A0AAB17F20FE
00CD0BFF1B9CB6BDA0FA3A29A3117388B6686657A150CE6421FD5D420F4F7FB5
B0DAA1BA19D638676E9CF159AC7325EF17B9F74E082BEF75E10A31C7011C0FFA
99B797CE549B5C45238DD0FADD6B99D233AC69282DF0D91EA2DBD08CE0083904
A6D968D5AE3BD159D01BDFF42D16111BC0A517C66B43972080D9DD4F3B9AE7FB
11B035CE715C1218B2D779761D8D7E9DEBE277531BD58F313EBD27E33BEF9DC5
50C7821A8BBC3B9FDF899D7EAA0B94493B97AFEAC503EB5ED7A7AB65763C9AE4
247C7C9B60444EFCA66AB8108DF1020D68BD8DEBF0B78E1B6E3C60111AE3DB2A
02F22320FFDCFA47B1165182DFE81199F3F4BDD7108D8360A13FDE0AF860E251
F8CAB1F7BF10E38A538D5931CFAC885116DE719D3E9591995957F6DBE7536C9D
CC78DC4D31474DFCF67653E9B3F4D7B3036F584B582576A6921AF76EA7B04555
BFCDA8662A190470E6026263A7F260EC5D71E69AD6C65C30ED45D8538986FB19
540B980DA7BAECEFC35D775C2DCD0E31360E729FF781811B558166E01BFE4824
73B4B7D702C115A99D980E549988272CD6FD5EF731E17F718755F3C11E2B7238
5F6941E8F903CE257D2AEFAB8CDDEDF9281DF46331E83724FCD23A317B70CF9A
F08B162A48F5AB9B676989EA0FB8133A4953577FE7D978F65719B1FCDD9494B1
3180CFFD0B175ED4F3B2809C3612F6585321DBF5D2908D60FDC243B66DDCEA88
52853DADC589AC9C8D7C29273BAD22F75B2E6ECAADAA90E4B26ED5D34975A12D
E8F2AA1581855207B44C693D328BAC98F590D37B0FB7EE42E42DFADADC58EB58
B7D996458938063C2F87AA2C467FAF0AC5230FC15CAF17E0C81C524087C2CC45
839A0F432380ADBA8109C1A13340002BF1176330347835BE0E372D1D4C693364
5054B5320FE9A3EFCE0A9C82CE83397917B5657289012B58F53C0B61529368D2
72EA7780C14EC04A1FF9AF435EF84CA2C762BD04F076E0BDE011C18E4BFD808D
7D3D3B8B38ABF6E33F85922EF7F11F855CAE0EE9F5001357C90121F2D497B12A
B244B45D1B95B0F38BFFC60AEAE15A27C6D745038537DD898CCA86E75920430C
7C3576C114233CEEE295F0362A05377751538719AFC2208A787CD363CD10B604
DAAE5763309BD47D4B3466DBAE658B2DC8BC7F5C92C445E39A096414D1F0DE2F
3A97C24CC059786F0BA6067D85D6EC9CFABDCCAD065950C4EAF317E68C1D1304
DBC3E4AA71C134638E20A92DA4A96E23BACF76C1CCEE6B28EB61B7021A825FB5
C441ED2358B008BE475AFAD58A759D2953F4F0F86F2A3A4407C95655EB645C2C
68F59E552F78F5A11426F0633850EBA04EC4083E3BACDD4FB7631EBFFF788167
A02993C6BBBEE49615441FA756842D859E3861C738C67FD2DF21178BC74608CE
60EF1AD5A5E76231DA6DBFD4276A5D4784CE4F02DBDF9E929E21A427248348B6
6C7D47FD80D83B5E7780B48C7596EE8D384583B060AFC9613471095A441928D5
2A00F0010E0652117564C0725535FD5D9205ED5396DA2B0561394F5D2E6E0C26
45716D6E573F3B9A0BCA96C42785132AB5D1260FFDA453D983108179839AA7B7
E1463B192CC64327F8D6AD1717833929A63D89FAB9987511D5CC9E05D9E0421D
B8C4A029EC254E721F6A1DF110F9625C03370FADADD0AF894A150D9438682D37
F4C9460E27B57CA6C307FD1EE6A6CBBCE104D7042D1CE30703BBF1AD8FDCED9E
54EB78DEDE1E3869D733B3CA1E868CF6F541B736294589FB773A6FA04690D83C
0971DA91053C823DB5FF2B3E781DA6EF51C69DD277F3753374C9FE622711F6D6
0E25FF85A740FCCACA7BEEEAEC6C904554A290B621DB62C430A45E63B1AE5358
382AFBB1AD60EEF91749D1235D7A071B820C4543193680132E7BF1F45DB57551
E4AE39149B98BB904CFC87EBDE944E2E7CA45E772CCFD49CE937C76015B02144
E0CCB54ED5940BCDF100722FF0908E8E7F6745FB5F2C001E298E726FA1D2C5DB
7D6D5A86A4386722BEAFBA39EAAEDCF0300A8A2A335B75238079AEE46CAEA78A
AFCE76024D19A1BACE6643A5DBDF22BDB763889666F9F2184F926AD4E0506E2C
CD5C9F399C24EEE5F75CA9C16A9CE095CB6B3A39F146A9F9A853EE2FE302ECC6
5BD1415AD623D1EB0E58B256F1D2691736BCA5923985B7B8C4520FAF79068B75
37CE3D3B2A673B2F501365EBDBF1957C400753CB52F5BD5EB274A671D98CD02E
58A638F6E712105E3101A40B884EA04371FC32EEACACE368F62D28BA60D03150
EBD163D720632A1FCBEADB26BF39375F86669BAACCE3B56700A6F12CF75BCE18
B6E57A629FD5D8EFC517665532B336E8DEDC4A8E80B42E74A49A4A89C1E61D4B
CD2E8230D19C4B5E0ECBCD6A76C4B6359123B6CD6FB52D5BF6084978ADA9F610
25AE0B9C569E799DC3913E279E64563EB30AECF5FDE9ED317963F02DAEEAF0F7
6D15AC5954F3A4C6F75DAB3E592339A87E19E22AD3C987D5A9236E4BD68DB75A
CD71447EE7668528B4057B2B5E0BCB9FC3A658794D833CEF3E3B54B62D805E72
792AC4C2A606CC91A1C38E7C284FA066553F6D450C3225F61DBAB62290B1AAE5
4C7E1149079F49EBFC8F2F8F4C218C1DD1CFC8D3521CB8223DA814B50A7D380A
A162EC3313567AEA7AE68492DECF1525F37C0779B2B774B5AFA302E207
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI9
%!PS-AdobeFont-1.1: CMTI9 1.0
%%CreationDate: 1991 Aug 18 21:08:07
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-35 -250 1148 750}readonly def
/UniqueID 5000827 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB3DF7BFF10C9BDA4EFE5F68A8CB1526990D1357AE6D2F7C2D2EF8496
4E47B39E6712EB8908A3265E5FAB40567E866C244814449F1E993AAB422C3F1D
DFA8C7118584F2E5197FD4BFA3A8AE9E953C6CD4672C0FF51E41C3A919749C1A
F06650DF4C5E17492164BDBCDF22609A74BFA7F69960A64B9F949FFC2A807458
8579366C4F41BDE1FDFBCC4845FA19BBB6963D65EE8532549274BAEBDFF24FA6
03235D1BE37C06B1938AF369DA75BF38DDBC87A1FF445EAA16E1895ABE9506B9
211955753E447865D33CEF007391D2666A046277A30A49804FFCED3FEA5EB2C3
E52EE14A9F75241EA10C91974CDA6236EB840FD44D6DDE4D9B3266C3B99BD38B
D835BCA8CB819C073480FB972CC028D218F6A1D344CE1B63F4FBF2C826F412E1
6E0B05A26125865A14FD7B7030B478BB8BC6BC395335C3BA940E1C348267F4F9
0AF97BBEE253511940F1048E175D3569F7D05A28851B6F50765FEB6C9654FEDC
1BF52F535DB5BB90C1BD5D2EBF75E0AEBE82B20507F3C28A03746781018D4EB2
298E4F2C27ACF73FA73EBE43F014BB575AAD516C0407B29E1653375135ECB74D
C91372F06FA8EF37C31AF3FA48AE65318EAA6C34830A5377ABB2DFA5DA53A574
4266FD34C25C8025FD7DD45F44301DCF03F51335198F9EE71CBD72BB906F445D
EE6AFBA2FA06A0A045D56CDE98A6F0DE807D81F26D017B74D1C7A5AE254B7705
7D96CFB3C342DD38DB5730ED913639C2BF3CEBFA6F3D493DCE5F8218F8BD8035
9E6CDFB95628F7198CFA2EBDE1905F051BFC4F835C5A787E3B43EAD947EC893D
9D1B04A9A7EE7CF3E02A58BB0867AA7C77F30CFEBCB4B3E6EC68F6B234FB6B26
7A9D88A3CBF7A29AD997ECEDDDE430803034817B3DD99F712206F67C692874C6
C7E6111BF52370D54CDCE046951BB4EFFF0C3AA8DB6E9C8C91C1AAC5B29FCAF4
CA5D21794AE7E09F884AB643C4AFAEB9763D056C8D0B7290BF689F7F4C037360
BCBE91A54C102DB8FBD6BFB40FB08AE0687B8D4749BB72341E195389F8CB68EA
11C0FA37538AB8F90204FC816F300BB61C8F12DD453457104D48EE3B46B25727
D92149B9B55A67879C0A650F5B885029FBD48554D32EB33D703588E291F9FF47
79CE67BA1DB316C6D6C99E6693C926BA22AB5D55D3829846511FEC2D5E6A14BF
FA8D80F1AE886905D589E3421BC4C9FD7FB392F8A884BE83377AE9D2D81E29A1
D19D3E12F152A8D062F6B42920B59031D7064400CF8BE5DE91EA67F42F93F8C2
A9310F79CB2F879B3C248C3FF33DD29BE0DEC9570B8EB6307FB583FD68C38711
ABCCAE1574109C85F3248D4364E51B1B35DFFA9BD4FA842F2AAC649E5CA3D530
04E93654EB2586D750F157B390E6165788C3F9E0089A5881E902AFD39C702CDE
DBE4F272987242576162735752BE83E48E6B79B2538DD84C32F4BBC2F70D5914
B1EECD88082F3DFED248CB4E1E46E8AE7C87AC209BFF00CBEE4D3BD3025C0224
B988BD75EA320B37EC52BF89D3DDE3D69096A9C02A064A538E2C827049C71CF2
12AA509A7CF013B8599283799D5C5887AF11C56D8BE25570CFC67C2B23614943
AF2C6D3FF570E5405FA3BEE64122689AA6689BDA2E3851BAE523EF1C18B70A99
61E923526FD49472B0FF06994FAE0DBB9E9CE6FEDD756FFB567B08FEBE283B55
8A1769FC07D783F0EE14D84DC34623053009841DC33A0550FBBCEF05F2E373B1
109E43F263347585D1D1F0A0F891B55A7F69A2A3A4DE8630F3DF082FB0140D76
15B5AA8C8C1892424CC1A0CFFF3C76FA2069AAD56E51894B2EAD7964354F08CA
3590913D686F80CDE7AE0619B1AB895A979BA01F085D6CCE44ED9737F3798E0D
66E19888828F5E8F2EEEA6D845699FB269528DF427F3CBC79FDB7623AB099402
5B619F46026C7D366760DC01F0AAB9D2F0B48CB9FFF905C3B2CDC1E268EC3344
0B593A90F11F5F7894FACB6A088D76F10304296A36DD48705B1B47E1E00C20FA
92CAEFA1B932136074E907945CE2BE5D48EB88D6BF38982E53D5FF2993B21A31
DA46D2A104352F6426898CC2B961EBED52CCD4076536A5F0F20B288CFF969841
4CF004F0DE552FD9E63D01905793B25F3646A5E24A54212DD626E1FF7B1DE2B4
AFE144967D406B860EF817E16188606A31434D909753D398AFA3D0453CA62BC6
822FC0C9E36120DB9C6E7D5573C592EC2CC619A67767ED6E8B35EF556E1EBB64
FEBB0C9D84585A23DEEFEBBB878FD29EF2ED05813765F783F02E14E213C1C81D
AD90A82F04BF422CE24D8C48FE267125B25A7B20E8CBC66367EDA433C8D0890A
FEA7B091110C4168BBA842EB71203FBAC0B122B95970B6F7A0734D08EA5E1082
054ABAB9283562C9D7A4AFBD6C47D2898FA3D1648DE399420BF8330B0709BE18
99ABC0787DA4228E78F28C7EC52BDF3D5B1FA5062549CF67941C68BFFF9E1D1A
B99CF249F6F237994FE7BD1E3D8D78B652038691C000D4A550F5EC4D3CF86369
DC988FAC302AA399A85909D1BF4EE4C999537919B72F4EF45A6589FC2084EA64
E42D46794C02B7D326EADBE2101A8631141D61CE523DE7F337AFA789F36F5ED4
FA2C3CB5253FD439495230ED5BA74EB5227587679326EDAC028817E53645BADF
E91CD6EC783F5DF285DB5B262834CEE19ACEAA8D31F529E30043A1E23CA4AC5E
C305822357A3DE2551C225EBC342CD31A9FF3F825FDF91012D04208876C35BDB
6D1C58FE4ECC6567F378D7662C6DF859F872F07B2E75638AE4B49FB4EFD0A7AA
3AD416A65CCF73215D3DE2F40D46235BB6C380CD7E61A9A386FA0CDB77328D59
92FFDBA788F0992BC7BF3E74CBF9F42DD7AEB24874AB06B4E5BA18B2A8C4BE04
3FAE6059868460CF72BBA7D77AA326909E4D50CB1A51430E5D5497C9C6DA9CA0
6A4147D7E534B7CBB6457C321A4258CD7555D780BD0425049188B3350CFE7738
92D186603B88F6B19C32A3233A7B56F0A33D6648ECC39B6997D82468548F1628
A14C3E528C3C8E1BB69D93E58CFDBC4E1DE9A59B95DA546B938BD396CAF1A218
87B7A6D19F2F1E41C244ADCE38901116B6275C60A97A2EA2B4BE571C2947C6AF
8523A27EDE6ACA8BCE548F9E0FF564C5C534FF27D119B9CCCEA97FEAE30708C8
10AB6F2504D4394F7DE105D69F3EEA7AAD48229184760CDD5BCAF0615352CDC1
365EE3B753D4334B5BE9F2E7B92D514D6A74C70B49E2320C4C7CA3A6EA48CF2B
DDDAC2E24D0EF01B83D895AECB3B66AB1F7D577EA04C906D92E732C083946A2B
80229BE505D77623C8813E87B4597880B65A43909124E5B5D951C587CC1DAA31
89750BE5DE843F3F727EF8D46F44BFBF7033836D053D0FC23E48BE9EB30FC734
E69506927D0268CB6CD209C11530AD1D2A77E1426AB9C7016327DD1476FAFFA2
FC82A5327EB32832ED3DF782E7172B36EFF70FA96432273F6DA0366A763B5CFF
349F050F55E699445712B759A7B87D8610322C34BE8C5FA551A700CF51C6CA34
629429ADB041E7DD6F024F135461C1E001C5D10DAD8A0827AEAAB942AC1B25B9
DD9DCDC7486E8CBCA1509F0347430E6EC3208E36B1DF012C8C38E20DC91BC700
070F1270D325D3EF167EAFFF9FA19E6E495F379E6E44ED2ACA135B46D3683E92
A0E46582AA4A366F01DCFDF4C69DE94AA147A2BD17581317C5660CC7520D066A
A3E3562C1A212FABA951E7613DC8D079E0943C7973C85362E642B5900E6EE61E
BCAF5C102B997E8F83CAABC6A92C5E600F3AD1687ACDD854CC059E8E9A8B5DE1
56528536D583BA299915134C08F6F90A7A68E74A99C71E9F581D3B17ECCD4F56
71C7AA4D9536F80004DB593A8C05FDE9DA7FA5F6DCE2A24486A38FE4F94AB252
8CDE330F5FA32ACE56641E77725B93462520DAD3D70D542A777ED5691544EFD5
A69CC2F85976DE74286F4CC0DE2524707B021E01805377E3CF44C113642DA718
30BA796B6C9B943F7527EDC8C198EACBF025C17E2C3A60D14DCFC2419E42A999
92E57BA5458F6E3A966F79139FC43E71C2558196A6F5096C36A552B54BD9C93F
3F75CEE6BAD95BA1A7471D16E0632216BEF676FEA55CFD976FB979A77FA87CA9
3A4E074EEBB975BB54B82DE132DAAD8AB1C6293E6056B0A31EBE2C36762765EC
4E9EA18FA2AA71C563CDA66BAA931E3001A9DB14047075CB70134CF19BA6B6CF
FDB60389189F04C0017B6BCDFE8C3DC210A7E86EEBB9AEB969FB4B48473CF3B2
C2A7B43477B57835DA4E1ADCF8FE3555ABFF3C1F698D15106364DD60D4D26A9E
7A3413D0C1B05DBA75740F15086AC952AD63E36C28FFC47C552E5BCC9A7BD232
53599BD90433E9CC58B56051FC13AC99397FA9B4A22588D084CB6A190FA6B87D
3DEEF333BA242CDBB5CD7FAA1FFDAF383D57687F917FAFA95C90AF3E537DAC44
8AE0886AA58DC9DAEE5AE4A214682B30ABE1801EF8ADF9BE05C23A7176293F24
B736428CAC347AFD2EA2FEC83CB9D44EF782BFB8BBB84DEEB26559CB6B602210
885F4AEE86E8F16940391EB98C8A36BE976F839A1CB08DF64D25F37F83AF6C71
69000E20D0EF4CFDE1B1EAB9F3F4BB34DE5698F078FE9E2891AAD7D6BB1D222C
48E46E7B6459DD7B4950CAFE8349A1B81EA3453A86EF4CBA3E7680A19CDDA448
C33F774DD4837D20898612D4EAE02A31C8078BAF3F3501B1772CA61C7F72703F
69472E975A4D712012108E4D1D679509DCC54AB0F8C9D5864D3AA34D53BDC6F7
171A6797EAE82E357BBFB03D5EDFFD0528EE3F3DAF5E2FA69068141A804FE65F
0CC88E3E7B7E55E8C901A3A450B5FA82950D65D5B0CD8A60E66B17DB031D751E
E04356A8107481076346D9CB05EBA520F6CD09CD780D3E2B9FA09F7AC556D3B3
37AF79B18875BB472A64785CBD193510D4F9C801B10D91DF4D7A81736D5D55A4
9525C1E95E362190E0921EDDF916B22912D4DC6BA79A66CBD3EB2DD6EFD86974
BF557347D790DA4E9937FF5F700B8523B07CC06E734817C40F870A6CEC80C2D1
15418A225A119D508D5F9CB916B805B58CCDE9A2B23AE40B9E63F1814890BC68
AF374BA8FEDB05E747F8936DAD2CE7ED189ED8FFA914E59D8CC90DA4B771F3AE
C7FF8402D01D997259DDA8972448340418224A10528ABB3490A551D4C2102A3A
F900E50AC4D2CF0796F80765BD157F8D1B6E151BBA350553D2917618279CA789
32A802B35EDD06C3B2B6F76E5226AB5260F8F3D0690F2DD39CCFAC06A52D1F09
CB5CF39A927D0F901B467507DD27405965AD7DB0E7C1EB9A91107DE712489E7E
E6B1D1F7C80DBB6978F47DB5FD1DF57BD217047A8B74B66B570748EC1C0F151B
187D057AA42E0DFFEC62B551343AACF297A4D2934ADE3CDC6B403F01C07C1C6A
C16EEFC5ABE2E6D287F3917F3CEA1BD77CED31684BB7CAA7E342B70DD4D6D424
F9350653B2736EF8104BC57B44F894F77D1F271D9FB69D2A680F0B0971E483CF
9B6F8D4382A08F51FAD4AD382D394E4F8C2EEA73B5FE03CA7F936421D299A429
EDFBAC5AEE9E689DADA1613222E0D6FCB271B2BB169FA4BD4FCFA8429312E373
5852B5AA3AC16F616D2C4AD530189F989620128DB816F1C818387B267B549206
CEEF288BADF2A78B099BEEA7D60CAA12B7F8400517C32BDA3FD7CF71D7D33549
4435E27134320797DD32AA9F515A540381C44E225B430A2D542DBEFBE8A41264
BC918D7B41F90F764B59725FA566A1A154D81B2918297787593ED891EE45D6FA
1B8487E926E8EA92FF412356344AA168827A2CC4F7825B6E33C3A63B268C64B2
44B5665EF3965DC605290AD0458FAC51A00212A34DB3E511DA598FB775700978
79BFBE206D6952FF3D07DE034D9F36A651BCBAFE59986AB0F02A812F55AFFBBC
E584D3A9D81109E337C4106258C35C789B55517B80D4B8440ACEFC47D7652EC1
47A5E7EA0278738B5416E99D783D1C926A9B10AE5DE10379285F18545E6BBB48
10A9995277FBC8D525B2680281B5A36E791B79FB715BB136683E7766AC16BBFC
0876CFC7C6038FEA98C8B9088175348FB6E5F913F147D2E874DE911A0DF749D3
4A9BCEB4ACCE2EAF0368BFF634BC44A415B8FC7ADF79365749950518F19B74A0
1931AE4809E682D428EF651A64665C7411CB29166AF6DBB73B1BDA56404D7DF4
4E4EFD0F5078104D8A0F233B2FE0D61623619BC849E7D922B2CC561EA2498FA4
7F1B831867D7A8F31CA4A8E63E94BAFCBEB21AA4427787BE77FDE3D59F0144AC
F16EF2F1007FD42B8420D2A888ECFA89ACB644BCF30FAFB9BA2BB2AC3C39D173
5B4D5B0F56F5076E48EC3F718A6706F9EB3E323BDAE23A3B8EB0948DFB2D3105
904FB186BE8C408CAA7877BDF6CFF3E7C7E1BE51DD0B951A07B616D34E752822
B9458E8DF55D88387F9926B8E22EDBE9722C464CC086282D72A8186F43601D6C
6C7298C9B555D1E2938D76EF7729052CDA40F915C527C64E7452F7744C380EBE
A6436C93EBEAE75EBFB123255BBA6DBB18778D7D18DA8FD4797B17EACDF14CB8
C5CAB199C67FF68B44EAB2D5DFCEBD9FECC645B733716F4B8B275833D0305E3A
8BFC5EA04B725117EABA25DB8D6FAB28270AD5F77E0B88B428245EA011F7DFE9
D8A14800B8ACC2DAE7E9B893BAF4E1EFE65C4430B86D1C601D3A6B122AA4D2F8
BCD40EA7443554C774ADE0D4E6356BA8DED3584DC95DE51BB1D60FC72A28ADB2
AB64127D0F145DF8E0322908B8CB173B497724ADCF5500E1752DA9AE00289FCA
8C505666B11F081A485EDAC7C8C0392522935D078E394A556DFC67ECA56088BC
536E29982E381E4C5FC96CC1E06E7AA05B88DD447618639A3C2016027DA0880C
FA431439E987A42AF3926E8C7314435BBE789D0C685C8775FC790465DA034FE0
44136DE3EF2739102F18AFA27A0890A99AE888C3DE1760A34FB31666C544EC0A
718642457FC170EE374106601B2AD673BC3596607E57D96648D0A0D118CE2EDD
16A9F74FE9A9908EFD6A1C18F357C1A77C301267645AE0970B18F9C125ABA822
0BEB3D43E291ED3FB3D9446D4F24270D13662D17EFB163E90C408070A04A72A2
D520B410E0B6C03E260E46935E19AFD365C579C7B8301DFCC55CA48A90D8B4E5
6CE728355F704B860FA7291763DADA44EF3C79DABDC9DF7FC3DB400E0582625C
05B990AEDB6B6847CB48A25A46BD78AD4E399CEFF1C1B3CFC29A06D436ED52F0
AACE53768225EA9B942BDA12FC819F8339AE9A0EA64020FCC60E061F71C5CE81
8E0FB58A574BA1E6802F95A5E61664511010565C247F4727E7345EDB25242894
4CF47DD9B89483D518ABE5E1E8EE978FC22F88FA41AC605BC8FF3D9EA6BC016A
710BECDEA859B91A2463E5DFA3410296C1DE6D963F80308EC2FB37B3AF428768
109700EE990FBFA9D543A353047E8EF486C04265C8B683845F5AB88333FB758C
C4D78A9130A64E35BF6D9C4F257A50609A863850E99AA27601187A71BED0E00F
B076EAEC50D19FAAF439EB7997CF32207A1BF348F8C8B41B95862CCB042AD5C5
874BB56A21F1A23316A3EDA7CF224430BBDBE414642F807F775766BCAACE8612
B2550644ECF9D8D07E0425E08E08D2B943167A3AD2C4DBCE54EA41A5758C16EA
AF04556C13DB78E9E96660E116A7CFF172F6DFEDCB4E47A8DC57919A3D0E3E65
B03789903D23A155FECA4A3A4E9F88ABD0B8D3BE53F1C6193D2DC3FF393C08AE
56CAF586CAB2A80A12F13B6DA38563DF07F9AA20CD2687A0D290D17AAB2DD040
21401536EF0F2C62459D8417A3D628656E1CA863DCA7900BA5255D10CDBEB514
7A89C40C7430555C3C023A7B8AFF724D2D92C577CE5770A87A61235E9A294962
4AC9654361C809412879C7C237C17C19461DDC6BBBC95FC870BF2A67534C8228
8901FB0CC957B277EE8F6953F700FCDFB55EC5BECB2D4AFE749B75984510D93B
A459A05A7C2EFEA14847C7B3A5CF844C19BA20E7B7309BEEE91F520C8DCC3F56
4E5EF0EE690BDED2CCCA23DD8DD827279FBFF698D3589FD1A4A68DEC5DA5EBB2
E5D2644E287BFC2DDDF47C51148E549CB50FAABBFF5163294F5479A6C6389753
3ECBC83DB07ABB3062570DEE8354D07C0F245D183E94E00169DC33F7F9E23D62
042086EA57B2E0C2B3A1953EC3BE61F7541016920840DC02A4EC8B15ECE9A2FB
4AEE7A315476900AB6AEE621692D30FEC2EFF39FEE56032DA2380F3DA527F08B
038932EC0533D2B011AD89779B9A05BA84651D4B5AC8B3CF25449655D06FF649
15F1E61CB8F6FBB1B9CE3BA890BB0A2CFF8EB89D243994B83BC85B96C288406A
23BAC5481B9AC20C59B93A49525E5072AA74CFC308E8EAA3A713046F3FFD9836
56596167AC54C4DE693701AEDF9DF5360D125651FF2032A85229530D0A3E8957
779B1A1E06EB9D8EDB07E4E2E4D230A251DF46DA2B16692458D142F3DA1E5DF3
72BEDE4A3D02FCB31DEBCA6AF69725D04A447DC16F115234DD60C6B5DF7EFF47
1E7A3691A18D57F66F267D05ACD674957F66699BB3A5A443819329DFD5D9D2BB
3CF2C11BDAC60F10E7B43C5F1CE6209A4467CD2913FA068A4E8D87B184489F3F
5424D4D7A14670C66186976F33FF3157965968377D33F40F5AC1086E36D2A2F1
1C74988E055F11C3CFBD2064FB8B63ED80BB6DE6AD0701EBA4AD6C568DEBE9ED
DFAD4A9F8AA439774B7AD53A7FFB2A852A2256D52702A67928A2B59AFBF067BE
BA33BD64FBE18BFEBF4121C523A448ED1A686F2A291715F53F14B983B9F59ECE
2B871AFB6CB80E165A3A3BFC8145AD206D9F1B2F2860479B48FA5407011CEE97
1C20A0031CEDFECE799D536074E51AAD43FA34AB00D2BAC23CCCFE5255573D17
0A1F316CEB1356519D7BEE7F15EF1D2507523A008B6F705906661356010603A0
3EEAA14E4B63A74C84027B1A04401355A789F92E1DFFCC901B05BF32E5A81883
A00FC78F149A044B708751619F0CB16D27AADF94E476BCDEE9696BFDA5E60E2E
207C5E6AC5AD203929041A8A993A44907C7BD3D67CBEE547A2E09341AB13978B
7CCA9B6264E2F3211D36F247B0C659DD4E4754AA4DD6A597C19D167C6F343D83
F934CB281E7C945B0AA5E8E7A73EDA069CDE8DCF0E75193BE4AC2CA91A0ECFAE
1C14417D4C586ED66F83C586E4DF43E7BB9EAF9449DFFD7135DA486C7ABB6F78
EC9C85DC538024D9BAFE7CA0D2AEEC2A1C859D45F32ECF4B01941B25920F4448
365E8062971020E7F3C06F065990EF28A685100D1004FE9AC667201BAB9A380D
E40F0AF5542C55D75199B4E929502A353932942742C584DE7336768CBD016C3B
43A98565D4B8A01457BEAC3E71EE796C73B67B65F025E3B2FBD61BD6B57B779C
D9935E32D4FDA51096E4CAB900DD3CAC589CCE810E0CB15358AEAE24B2B2ECD7
DE812B290DE9FCFCAD8D6F981530A9FB25A58B49DC26B81FCA19EEAB8B0BDA07
42229A258284DA61EC4C40B0D36D2C042100B850E9B94893B5D372ACF1FE9DD6
478ADC78D563289AE7BC1590D99AC27ED4413A1C68FA77DB6CB5530BFBEAC979
E025C3F52CC8164E55AA7B9A5BFE01AB6F2A241E031805EBD2785952ECC0E285
C1CA2268AFBC831A1BCB93395571B1F4FCC3D069CF4A6BDA360EA88C77EFB88A
3F6BDC47854A01440AE319B775BA358AB25AA9127A4B6FB786FC1817E6F553EC
A49A70A785F1E6532AB6B56BCC9771C86DAACDD8923F47CF4DEA0D03459962D3
5B48065DE3A8D46ED97C903B2183F8C13E18808372019D306597AAF79D19D787
16851DEBF6A6D5DA49557BC0514666C4D16D4E2AF90E5DA24F19FAF273A4EF4B
37B9FDD262B0607E380369FEE2E3A4C51AA9C1B94B41413EE208D4903502EF02
A3CD19C9EE6ACC2983431D8A7F8223355137FADD00DBA54AB5D0EFAE360AD424
FBEC3FB9061A81D8CAD7CFA461FB1BFBA828D8E2CA6B6B4C880BBFB6DB5E6AF8
379FCD3C2DC721B5D5CCE1691C2DFA88B824FA702CEFDF0703AA0A138A5B830D
17287C743D8B3642590C41C4C2C40B1971CEA44A5745F482B008C39777638BBF
CEF84B08E1AE4C458038820E4E8613FF16E6CD31909A044897C57B3993907E1D
157C6B3922FC4C47C594DF8B1A2C0D7833396A0A206F3E52D5782FAF6CFE9691
16A279683C0298CF28E1C71ACE5EEE0E450374EB3169A2C7114A221D1CDEAD13
BE46C3D9F8117BE1B7C41E73A02EFF7437E2404FDEF4C7F77035D4E1D66A4996
7C51817C8CF546E99F05B4B1EEB877C41579B6ED3ABBA3FB4B17BED671F28E78
9BE76959F1E9091749174DE034F6D93D2F81AFB97A7F26B15CFE2CDE568A64E2
F387EC15BB33A52C62F41E306072623C999B19E72DC3A2C89F5C6A15534F52EB
2440FB668B37C8CA9B83F5F6827D82C257170024F51213DBB47F87B1CF6EE5AE
DF2AB63F091DAA3F7F052382D8E89C59F2419BE54A4624909FC26B48FABD2C9B
DE7EBD3C4B075AE39F90F76109342FE08709B1171AE6DFD79EF5272E0D7A565E
4E5349C7F4F45B6E0D547888B866BC688CE7DD78431E7D672522879895EE2A52
473098872A933C5E4D947EA6D0D797F7C0C9B40FE9F6BEAD77CD13D5BA129FE9
218E3EBF408E2A129E3B5EFFAF07F3A3A74984EC59245B088363AFF7DCBE7E49
08E1BCCDD79FED5CC6C9EC3275795CC2B30A9B178D4D719884F2E127E138E2CF
59864F131E890BD5D0F46D41CF9BA6CB9761D5E53B794096F05DEACF62B8DE6E
BA8C14F832172064F34A5EB4E30B1E910F41B74A9DAE1C5275D6E55156219F93
3F68D781B046CE5C68144C4CDD37D91918A7DA2DAE2D69879FC4C7C5546CC498
0329A19D4F19FE4D7792A61C005A7A140382DD48B8A7FFDEF027E9DCAE56566D
4733302C6DE2C48911C31E78845F9EABF87A566045E2FA9EE190A858B77B46E9
39BC53E68AD18C1BDD68A420EAEFB2123CA38CD39E92CB679945D83EEEE2FE67
116FE1DFC2B6272C4BD7D45871C17055A1332B11F29F945315F49A2E0C07572F
866E2135CB4496924FFDB26970C32DB4FAF1638E460C62C6DDA7BFC4CDECB8A1
60DEA4D88EF873FAF61F9B0740FF910CCB461D7C8C767EB0776CA67FD01A9E3D
A6E114D0E9528C7269CFA0C7194888CF987E90D775ACC98D8E082631DDCB8C23
501516A8A8C49ACBEE6A83DE87D8A3984FF15FBC5ED69ECE5A3139A7922BAB80
BE197A56C8744A1DCEF8EF2F989F4D38264BA307DBBD73059C37C539D803206D
34D084F5F48B88534DE277056C6167E624AFC2E02FDEC1D738E9156A387D6F97
6297AF44B495E3550A5D7CED83222B639156878B3B037800A538BB66EEDBBDA0
20585FADCC3F9372520865D4DEB0CCE57461063E85E7D329DAB20012B602E425
2BB9CB267B465E48267C2A5E9FB7A3B777BD230A7145BF610D5709031B58EFD0
0AE0EE99A0DB1C61E31D96BC089760756EEF03D4903196F8A0D2517EA1547E3A
5BA4DE1A9D560E04F2C9A1166A452C11F17DF195EFB7B4ACEB0DC46C4921EF84
8DE99C2784B012265B470E002FC1DDC9D66B45E643A03F3D322B1062C348154A
BAC0D754AD78F2332D0D2404856628DE6D5267111B9F1325423D1A4837626179
ACC76793841365E9E68CA38F16B6DDBDDBDEB5E800BEA756CFCC6C901179B609
4CD5B92736410A1AEE628BD5B41370308B0E006D54465857A377EBFDAB74B0C2
A50C7E5C6603F54C8AB09D09B4D789DB31C7121931659F18B9F89999AB761B7E
13F331D3447CC53056BC9FD6E9FE6B691549CB29DBD64F480CE91FAB7B81E8DC
16FED37CF47AEFDC35A950E00C8D89D3F7EA5FF73E19CC88A40AAFF7C87C0689
38B1007C9FF4C5777E4411A0284AF2DDF1FB031634CE306E6E350822E618B75D
1408B67620B8DA2577EC7831F3D5C4624C77A249500DBF42D30128DFBA900386
7E309BEB8CAD1923C88824728EFD5CF9263EED16C83BF844086BEB67B430BD34
296E9FD47BE53207B808D926242716AAF731F0C9507D9D0FD0BDAC86B29FBB39
03246EA6F6D665D15B3C471F23AAC4AB6D564AB4D5096471CCD5B0130547F816
D0D096807B633266E509D6AC2FB7C9E7B39E04D2A62F256CAA98D914897A6480
F31CC7406C1E96F0666373028C888735C37E0B77D16358100090CB1FB0A9928B
07049C46F49886AB2CA9F807AF2197FC2C52D54981BC3697933829ECC32B293F
AF1E9068A56A83DFCC51E78815ACEC5390251B93DB0923C75CB92D9284E8F6B2
BB64815E9CA7BB723B61425DB08F44F78FEF34E98F5938A1ADDB6C37F3B568C1
66E0A480680923AD57FEB119631B4E977E361C38A5DE513310444012F268E703
AB6E2126A5906AE1C1EA40244830CC34B42262DBD474C7631F012CAD37D544B0
EE4D1E3ACCDA5287CAA354B0C977127372D8586255CEAE4450C5A180BD8EDE02
F001910DB87B4A9A2549AC5EFE5EE7F6FB29D6ADFA9A068CC6DD529AE3AEE605
DAE35700D29FD128CF189AC5C89C038C04E125EEA04205128A46493E2EEC0E58
95891D7062716A24BF2A715979EE58583F41DA1C9A3BD9EB74951F44CC55D21C
D4A988BF59C1E064675DB25E29A06524E2F45B331E09A2A682CD781C4061394A
441F8B6A305EDA24F54E57822423B600E801151FC2936E0B59CFCD86954EED4F
85EC79363AA9AD92C339D811A127FE744BDC531DBDC9662BDC5FC01A410E5216
314E9C57ACD0A639BC460B77A8D3CDE67B045EEBE74A3D91EA99FBE0E4D09958
4014A119E4E69AFABC61DCA212983FD7F7A80BE4E74F2B8EE6F44DD4C56CCB64
84F442CD24CF6A85ABE19DE9A47192E67597050276621F3AC55166465CA58392
0D7C481C92F67E06C1F1490F0B882A7BA0CA2E71C0B3A82726050AFEE54C2D4C
117541717D2542C9FD1355E4A23465DF6CA7DF4B1E610680185A9803F1E1A6D3
7808D7A31C82C6E80FE67737485A4BFD01FD40FD9D8946EF63D84BCC03151A50
4E1741587897635CEAF73B90A65E1B02CBB3B01FEA18FF0E4643A24F59650FF3
32FCD7D6AF50D0C307D83DCC14F118DF474768EF9DC805DA5FC2D89029DA3FD9
007CBCB43F4F9907D5DBD387BA805143287245824339FD4F229F2507BE6B312B
3CFBA2A177C841B29918250AAC9930A06824419934BC3540A648920F96B77D4B
F945A73BBA0A45EB9CEEA7ABAD9CD9DCB343C3CBEBE22E50CCA11C4CF14A2BC4
A7ED78C02997E74885C405DF4FC6D9A5E57EB150161BCA4E5936550E8918D34C
83BC857A958D1CB880CFEA599C4162F812CE61C949F10BD215103498442C4606
10D701B0E9099B1EC3021E24A30565A4DEC18AB071227F8CE7BE18690897D9F3
922D768C829D70B215504FB8F37E7D50918CFCAC491B892EAACD1170C891BE7D
179EC66EAFA165991D85BF61F2134E6D971CB0E6828D84ADF51EFF6F5FF2CD20
88465373756B8B12C6AA9B2ED52A596EF5EC6B81AC7A2BA6C6FFEC05B36F7449
EFC10BB07C089218FF9AFA02CFCAA4C8553B4F14E580AD2BF3DF1B8944046D79
6EBF0D7A3FDC7FEA41842C037C46A607E91C93CCA8369296319B42B0EC376551
FE4F1B4A6681E6F35CA4AA59131F85F7A236097294F3F943384EC8AA79BE6654
61B8AD74BE2BBC2F58C6A6ACB6F8CCDC1358EC4170A887C686CBBC0F251757C3
0CFEF31036BF96035871E123503B5A6055C9FCDF00E2DE74470C3516283B6850
DAEBF26E8F974443608FAF51FCA0EA83E8D9AD96D1D36F7B4608CAC4F10C353C
C1F04D28C4992D72AF5672332532AAAB262B32F68111A09D19AD42F545C1F20B
228A4B78D900A422CD931FB8B1B655B99ABDB16DB8ECE53C9CB5BE09FF52BCFE
FEC60A2416E606775C20F12E01392609973B090C55E916992C81D2CAC573BB22
5D8375B0DFFC50A8A47DFE1EDC43DF195F63440E68DDC57CACFE609F544C0770
29341831D64A06DC074DFBB8B50F099AE746EA23884901B03EDB5C4249F96A91
8156355C6A0F4C475993E9FAF966C0D3D4146EB64B968ECAA4683C7EC439EBA0
226B71F9461047C6F690EFB7915CEE9ED370F7F55DC8FB093FD53FCDFDB5D370
1C22F124D854C8CD6F65E143E7D91AF531D605367635AF065E6019616A684695
42DECFF3EEBDFD460751C02F8D2A50814FBBDEC269C59CE9A43D70A3E9E4F989
13EC0705638F58B9D81EF947096F1F43C5EB7BDD42C1024728E74EEFB5AD1AFF
81AFD6E8C35572ED6DB7FF7B54BB4C14AA7B9352ABBC9A17B2A7668A09F7616E
698F7732596B9BE7E3AB123D563514106163222EC3AF1878DB374147D13D229E
37D2D851E371A95BA21C05FBAEA60A7FED2C357CD3A4664874368002EF3E0B69
009CC06551AADBE4FA2CE110D6D9C68135D76F186328CFB50C309F8B3366D156
F6E40BFA71282A10697ECF07326804D1246FB4551BC4D8203594D79F8E495FA3
ECDDD3616E9F2F8F073446C3A0A22E3EF4BE2E39FD49A415C5583D90F1B3F4FE
C399CAF6578DF211FF2E0DA17421C2064723A5601396453E41BFE724B93B0DF8
A525E14672F10E63C53AAA9B4223F556D43EA1943C4D7C8B0E6E08BD2DEAFA38
88613675FD1AAC70BD54B1242A0832B8A7A5B2E894E09682D13FB565E449382E
D674BD5111A50DB453D1AC3B691575997C3A2349D85F0B458A0BB5520E917DE8
63524E275ABA98D613BA0BE4DC5700264985FFB32A6E8F3F0F27990F9549DAFC
0CE83E031CB88F50F44E85D0731523E9D9AE2E85E7CEF05FC81CA512283E63EA
88EAC2FED0753FC87AAF7F669429CBB50FEE16E77F62A0FF138C575637D93C5A
71F2076801E5C6EA5474C3D58900E4FA18E63C034AF1AAFC8288892F3BBAAFBE
19BB75B494195B4F47A928C65D6586ED56DC00C533EFD466B44FBDBAED9AFBD6
7AFF804969464560C319BB5D34C805ACD29048C263020685FB31DFEB8CD4C1CA
1775DD42F212300AAB8C190E9ACFCD23E334F8087A9231592018FB880EEC73B8
895C7444ADC87ABCFD96C06E840E670DAC069D966CF175E82C310981818A9A32
6817751858E3905470C0B104910DE3E1F0222DF8C53C77777C75281DD6B402F2
B1F56F54C8C2DBC3A06324A398FE5B92B09A9798B933F547127CC4E90F0B2688
DE2BC4A591DCDE62A2681510821003C84EBD62F8C0B3B4C648528CF0B22D177D
2E123D730B041F32CA8124A83296D1170F0F02E640A74F4BF4F588EE5FDDF70A
5610CDCEE497F4E7D2063D8275F26C717A60F4912561ABF66A4029CE39C95A8E
3BF44E9AB60F31CB5DB360A5FA6E31BA1D16BE0FD482F0AA9AC026A67BEF1843
682C85AABC397DDEEAAE8ABF4E73C91A688F9644885800C009AF95BC5B4A4BF4
B2AC8A62E2EAC6B45681353B19D7EEF62E69904B10F8E7EA0950B9A89F4E2379
2A94E3AD6D3E8D77C0800B844CBCF394AE0911D41849B8091CD2198FD0A8FAC5
CCFA16B0ED83B74CA993800E0AFFC1D875A974FC135BF2E3A31842D3072F6611
2F0D4A470AA21008D6AF56EFCFF3249211E1E0F7B532CBED4E07322798A8DE7B
EB6DF707DB1BA8459EE042DCE435D58D9859FF4C00DC488E4E463202A5F8326D
512A7FE80474C4794FD2260400D087FC6BC5901C75C6D023E15700D98E677EF3
CDB2EE51FFD50674B12C64C6A8AC6E85E07DAA418A8F4A36DDABB5254BC70F75
7738F9823532E58D707FC3D3E090BD31E31C5C25497F58F0B3A744558942DD9D
8BBF251D49C8B318A7AF07BF0633D44B7BCA1B9E1E8C14529D79A4C038F17A54
383574B2AC1B5B14A2C326CA57A388CC5B6ACB5E2E0617AB38DA247B50A7B13B
C5CDFD5046245E24B0D72A37EB34B8B95CD753E0A52890A313082233E8979565
6D714BCDF0E82505D2395436513CBF38FD25849160C452784D95378ADDFF63F0
45AEDBD2E409AEA249201F02B6756FDB40541A8094721E20BE08B1E686BDAF6C
822CD70587B7119649341C1F3F865924D3FE6AE52A5F116A2A381BB524A5E83E
666639F1D11A4D7F73B98AE29A30DD7C14C1FC5F7404F8249E8662BFC3CE382D
594904ED86377BA6C31948BAADA3042ACE770326010098D3B39DA7385305E15E
861E7C74CB8FFD6014D19F6796CF8F16E41865A6C04B25210E0E7F48F41BC395
C6DFAA2E91CEED1F564409DA153195566C92E61524AC867849B2DD7A77A5CC40
E0D15AF9903795FF0142AE58C13B395BC9C5A6A9456DEF4E265FFC638E211DD4
201B0FF0BD104092346032461B18CE60FC4BA65FA0EDF72FC7719713DF3543A0
A5B8FA5DDE229966E63C68551B9D9B92170D4B43B41C0A359C65985ACB26AF5C
56D1F185E5EC96025B2E3852478D91C149ECBB6CF8A7620013855580A7E4714E
C8DDCC7E6738CBEB9C9F2FDE7129A6B06652BA8EFEC96E9D1FB94B31CD33359F
7DDB581843A77677BCF6D63AA5EF1EF0A3BBF9264FD6253C892E732F9A5FADBF
42040A93F9EE84FAD40B9DEF1CA2833C36BFCC2DFB62E32ECA2AA4C143FB005B
CE52607DFB88DCC6A3896E5E38175FDF9728CC4AB5575B68DE5BF84C15E39121
E132753621DD22F86442C3CB557F123040789337EC8F62C2DA43E47265220DF2
C47838FBFF6EC68CF106DC30A107439988E548E66E64412B06D8BAF911E0F594
5F579295F2B827E6D6ECD5021B71A3633C7FFE89B486E1302E5077C756D4788E
63EC9564901D520115F10821502310283488C2FEF00AB9D6A47EE9E035496CFB
CD5CA32FD7394C8925C3B87627ACF92BEA83C8C83029CD4D7F2AC2D715C5FE8F
74AB5C06590E926830BF3C16B3B211C9361236927FE018DB7C5E19E72266221F
F1A25985772660181D2E58A1E68BE827DB6E39A225BF584928BC50A1BBFACB40
17BD1E248A207C46F04E276C7E27A9B676882A01328553D4484709E18AEC61D7
FD9060528C547354C28A6BFE256BC5D136077497045825795E53D87812A47E6B
C123D38EEA2132A40AFE698E783D5E512D7B49795E3A4ED0F786069CED6AEFC5
A50A0E9095093548C6B6963512B747142DBFF4CB552A395699E3FD3054AF0CC9
4365EA0081A12AE854A7071A81A53430B898FAE7C029017F961FD7EF9CA0CC42
67AB9BBCEDD8BB701843472B46B94B536593F9BC9B9619C168CB66E44FB168D5
2FFCFE62C1E6A853FB9C7DCB18BE4681183B5EF2EBE3A4E9C53C0554E0ED8D05
C0CB1D16145B551564EB0101D22AC0EC767ADD6E9BA787B6BD983BC883CC572E
98D2D659C0EF2FF34EB251C7BBB9038A3C8E1DFB13CB10E95965D208FEBF08B3
094D431E902D51C75681B2EA753E734E71CBE7EFDCB2AE447F75EEF98354A71C
DCA4FC1C8E8679CEFDB7A8785185639D1D28F626F18C1E97841B0B630A48AA73
E49BC69F06CBAC73960D5ABD0934C76C6BEC588820018A9276249926F6237331
BE17FD4E9AF19613C2748E29A3B578515B44BF526DAB94DCAFA78F60A1C5188A
A5BF7EF795715F33F4A6A3F5E28299D818B82BA93B78DD4EBC44496341CCF4DB
AFD5DCBEE690B301B82DCAFF72BBD7D84FC0E66A9AA8ECBA3F0A31194022765B
F063E6E1C92063CF5C16E07EB107A42530B8082FA3B86E49CEF09EA47ACE3726
67CD85D6CCFEF5501ECF22B189DF211B27FC867210630292EF2219923E98F45B
76ABA818768E3AE56975746686D834287F2985C015AE5EB60ECCF749794C9D0A
6421119A9CC0B8FEF36F7C4C483C65A52204F79694C59A00DF4BF8CFB2B21079
6E814883401CF5C165AE2F7491DC165D64262AFA4EB829356FAEEE8BC89E31C5
2D5CE9A09128B21D4B2E1E47C8C163FB0483AD043DDE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.1: CMR9 1.0
%%CreationDate: 1991 Aug 20 16:39:59
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-39 -250 1036 750}readonly def
/UniqueID 5000792 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FADB679CF58BAFDD3E51DFDD314B91A605515D729EE20C42505FD4E0835
3C9D365B14C003BC6DD352F0228A8C161F172D2551CD1C67CD0B1B21DED53203
046FAFF9B1129167921DD82C5964F9DDDFE0D2686875BD075FC81831A941F20E
C5CD90040A092E559F6D1D3B0E9BB71733595AE0EA6093F986377A96060BF12A
A1B525CD9FA741FE051DD54A32BECD55A868DD63119A4370F8322CCBEC889BC2
A723CB4015FC4AA90AE873EA14DE13382CA9CF0D8DFB65F0ABEDFD9A64BB3F4D
731E2E1C9A1789228FF44116230A70C339C9819676022AB31B5C9C589AE9094B
09882051AD4637C1710D93E8DD117B4E7B478493B91EA6306FDB3FA6D738AAB1
49FBB21A00AC2A999C21445DE3177F21D8B6AAB33869C882613EA6B5EC56476B
5634181ECBF03BFEDB57F079EACE3B334F6F384BDF9D70AEBD592C8ECF21378B
54A8B5DBF7CB9282E16AA517E14843909339B5E7C55B038BF3BB493F3B884A1C
C25F9E8FB912CBE23199AD9D2C3E573727701BA301526C66C3617B9514D6F11F
11930B1D97C17816C85B1BFD9B973A191B33CC3B391815AC46268691C741B2D4
48A840F1128D9B2F9CF07D0709FE796B23A836417BF7B5B12D67F74453C82F5F
25F7B30701D6F6D4F4DC623C0C27D6A6FBECC7312A3CD10932FC7C10851C3C52
24B75DEA8A648B7F34F5711DB0E843C914E25663C510185BC37BDB7593C1C259
21D8DDAD33982C336BF272BAB2F48E68217403FE9F54877B243614A87E64784D
2796EE4179FBF96123D1BEE3EF89D682B427BA4F12A1318A57F18BE5DD903815
26191BA3C6AD9EC21F3BFF3858C49B86E5AA31914985968F5DB84434464C2077
B8D1C3C6D50F0898095BC162B7693FF6B8AA294C79FA756312ED6607BB9DC3BA
BEA2B92D915217EF6DA7D76822C6323B0D59E01B090AEB9626FB167788037087
7DB5C0A138676BA8D52CDE3253A7048478AE11EDD444135F1EC8F291A0CC4293
FA4B940C55F9D6B30DB4C2515D540F87044C815B7E58CF3076DE09B08BE04FBB
0EE0DEA7B7C72E00C55B83E707BD9DF7CD30D200ADFD7A10050EA922DDBB5365
D1BDBC69A166AEACDF4FB944F5E0170C35435F5FB7863601F748545912075915
F989697E6E7F0D98C784A863628160E4379C5A42ECD293C679E3CB2E75510A70
5F201A186B6AE8DF456FF51327F5AD7E643391DEA7EB891A7733F2F18BCC9786
8564339DC0C697740EA5056A65D8B0102F3FBC2D9AEA0076C1956F4E18BD43E7
532F7B2E1325103AF648B96E03D52ED4C130D685F57C0DBF9ED7C07E3F9313FD
4843A203279E4FC1D1896FE020E20539CFCED8BDBE69C6AF96568160C56472C6
2C6AFE0D0FB49FD2D77A14E151F23418D0671D0C7A9A4984325C0BA3A9BC3D0E
F25A1E523FBDE64A6978A7A1643F8398CC2A66523EE770D370F73F8C76551699
D61CE3F9F620AEB492BD228DF45DEF195A45A6A6971C006FE9604F29F120A3F4
3660E0AAF93359A9E49BC622DA1077B9C09798E9BCC4DB14EE994D1EE87D916B
C94A2EFD494D6712247E417624FBCFDE39D89FF749139F48AAC01C9B06B39CE3
953859E038B56AF170B05F3200C843CB19EEAEB9D06CEF1A0092932E809B01D3
FA59B03DFF0E098F7B5955BE696F8044229F49BC7337325D307104010810C1C0
9878400DDC7CC39ECC71A623425BA9A842C8C946EB2ADD02F6BF8BAF1B02A3DF
23ED3F7C28DCA414CC4FA9BF4E956C85D0FC2B2262FEDF38DAB0DA09BD656BE8
6B704D8960A2F8A25B0071DDF03D8DE35BB3FDB059DD54B68676DD543B308E12
AF786DA37194575DB50BD66CA12717541D17CA37E1E979CADE921AF2FEB556AB
E6E05CD97AD75AE35775B7597C41924A7FC9983361A51A4F63BAEAD28D6B9194
C996E9C81DAD4F87BB70030D449F873E5F548F8F2588DF7FB01C7D7344832E9B
2B4C6C60C5ECB3661E2A2D5D8497CB32903FF793014D3806E66D534173F680FC
E67123D3270962CFC3E8EEF4EF59F73961CB2527A6FCC477155699D6C218CD02
2A26158A81B50EBF770C19E10802587FACCBD47517536CBC107CF061C8349F73
3A8AD00158F116089F84C20727FB7A1BD05F912DCE9F5A6637EF483B57CF963C
0DC5040075E1B7336A9FF6837DAC8AB741A87606E38DC93E206141C040F8960C
7B920A25FE6B78A2BB6CB8017A52350A041364DE2DD32676633DC80D62E4191B
13698FD35F945542E7A31CB55AE820336DDD7832C3DEA0BB17997003D6CA0280
63ADD8C0B02BD47FC9CAE9D338B45CFD0E533DDE3531A0261D5912B819E911A3
1A83C7617CD30872AA73072EBE73E7F8FC05336CE4A2FEA91D6099FFE84AE4E1
004407BE6816DD3A078F13F817C717F86DF9BA7C2A47A20E9EF79536066A7D8E
46B1B7153A68983E5ECCD7053E228D8D5330466DC48DB3F1893DF0A123D06919
429EA6B204727AE42B8DA9D3398F1BF1B5EAC6B0EA567025D39F7B7A765DFF67
3762DAA59570192921D0A6A876D12E05D8DD6A5460041D55023DA443D31FDFC0
9490689A8CEF88575DD36A5FC9B1A61A6676A6309D6C4DB716207007D13CA395
2A49067E00EF1B3F8EAD9037DD9BCD327607DB5A008FF45DE75C33C117782824
E28B3263F44FE233E5AD0D7C689E30BEFD431CD32755D64B6EC67894D2C5B945
A610430A1B3C5CFD96DB78D7F1EA97E0E997ECE3BD8C7FB8EA1F7697E62879F4
15BBC9236D7B94A9EF32C2C1DC539FEDCCE5FD928E93BFF2661640D68AFF49D4
42EEB5DDC238EBB2707405A8FEA6B1E2613B5A98729D284D7F5335CDA7AC82A9
1719946EE8E9A2E66F28E7BCB0104D98C30F2043A742FC4C33B7444E7D23A434
682AF9D6DA6E90F2C4753CB403736989876901B1CD80496103FA3CE3BEF201C1
CEFC88D8EE8FF943C92AF270CE54111DEAED3D4D3C2A1DCC46BFF17E46F37BFE
3021D6395469655903EE000F8AD21C026FE62CF16B9CC4076DEFBBD40B92A95B
A409D345D635EA91E5FC75E08F4F7BFE22AFB6B1A6C700AAE028990035D918A6
095D793C84525472040144D818DC89067326A12ED990A718FEC200DAAAA95F98
337B53F130A4CF210074FC43D4EFD6905BFA743AFDCCB4794BEC6ECEE503C48D
7BF121F6370821839ABBD3770A8EC6599D0DE06C75D17FC18B795C8EB728638F
8917CCDA44642367B5A76B00EA7389377EF37106B292E86CDFB00425FFDAB273
FCC3AD50C9BBDA8C07EEDBF656FA51A8EEFBD9E46CB6F732BD8EA099D4C70A9F
2CBE5E6DB048F5E722BFF93792DCF901569AB4F84F21194411843A6443190CC8
2518D6EF4A8CA2B0BCB73AB73295A2F0EE10D69861EC5EF52F508FD39F0E058A
E00BB4CC9BB904068E66DEB8A189D550665FFA2DD076C023E0501C434E61E73E
09D885FD6C0C4173EC1BF5039F1C225FA38BB5727F29FE0A002BC69CE6C51BD3
7DBCBEE0EFAE2BE0D358791EF80FBA70C182969D920B7025DBACC0CE9E34C95D
9CE4335644EF413889B61BE133346BE662BCCC29C0A59C06BE7102F6768F1BCC
357E034C9A8A70C4D03B3CFCBBC58151C0415B1CB5E7B518E82B441FE129AAE5
1070F965BEEAAC15B7D50A3E3EF9C38DF966A55E069171FCB8CDD348C9410FCE
0866CC08CCB22F43452CAFC2E2F40BC87E15BDA6A12DE3C50B22DBB0EE6F3BB7
15CB458587D864B35EE41C588759F5B0028FB93F210422ECD4284E02800A09E7
5792569C8B61797D6C282F5B8010D2EF845A419A9704E709A5C0CF31378B0D95
22E03E6F100726BDB0B335D5AA8AD4FD4203B9FF1EDA331FE8137765875DBEB9
D2AE47710D4D63AC1686C9921E2355F7F3D353C2A1FD546C4CB9E96644BFEAFC
CF9A00A9E7DA227521BAE15AA9810D1D85C7CF0578BD6B9FA20F352FD88AE404
7DED33F67FA035A1A06439F9F1794A387493D8687C168248B2231F3DC0777297
9A72CB794A240FBF94A3C4F3B7DA3A1D149D5CC6C2CFE43F1AC1F156DAE28CA2
87B9C4EE298FC8B826503208297BDE4EE59D2D253763103F162DE30FD416A124
3DE14B1791A6233C4466F3EA837A575CF0C4B615BE914B4B8085ECD4B250BF1D
2F3D895D21238C5C079F0227CD94B1D2CDC7C52EA01F3BC561DB5C438DD03CDC
6055D8D1FF58AEC1D8B0275E3561BDA3687E35A0FC319865862623A06C64BB50
3C5498771EE58EFAD81E96B80005E3E34403F02465E6FE23EEEE4EA7F89F99AB
ABEA67275FF3E8123E869EAC540A70F92ED4254DEA5C9EEB8D281BEB80D97379
52A564E155A01F7DDADF4D8E1FFD7CE20DB7C3FD78A28CE4C4580493D82E2EA4
3445EF8436F0AD2542E5919751913BECF5DAACD66E843DF6C78A149C1B249732
0B173F381ED80C83CC4763E127E0D06F951839D8E2124C95DD8A075D1C2DCAB6
A7EDDDEFAC07DEB5B3308D83E2C3110E3EFB6BC1F0DA4FC3F656D96D03B1E971
7E0C013541F45674A7CEA444B48568F26F54A8E9A1507D12C6D459331AFA79F6
C411008036984C24BE5127BA206DF2EDE9AC7D2A866F487115178201FF22C6AE
7F1200BDC7751D481036A85C54555CC0BBDB65CC7C09A9081B45F3695ACE8F10
8D94445DB6EF805058078F46F6D9712492CA1B0F15817B4D48F138E337F263CB
D38DA32FAE0CD99DE999BE62EC191B86C955349559B7CE4BD02E81048A6D509A
F130AE02463289D62EF91BABF59AD5E80100E6AEF8E962931C0CCA0A3EEF143F
B99F5BB2D7622A0676736993D2CB01477F0706EF68784A3933324951FBD5CDFB
60F693434182FDF9E3F36CE9A2CA86D2AD32540C49A61CCDD36BCDFB82E404E4
868F824E95515AC1FBA4AD3133207D13CC3AAF0BDEBE3A0BC5EAB14DA6807C78
55CF0EEBA8A9F3438F7EB49511360F2924527939CD866D53A1CDA9FA2993F635
2F671DD2E7D091DF7FDAFF7C95EC1616158BEB2028C8520966E5F9287B753404
54B75591340C0A45564A97959D6BA492B85AFA0BD13719F6A57BA0FC4562D3FC
ECB70BCD5222FFC4BDBFB9BA1C4547AA101285F18DC1C3D69F354167BFE4B442
D37439AB5D9096F7AF626CF4C0F06BD1720FC4A2CFD866EC301172CD451DC0A2
22CEEED0E3E4CDA80ED2DEBAFC6AE6FE4CAC3BFD32E0F8554EC2BE6C8C7056F9
A784D3D7E6D5E4154756591C48B00985BE73702B1873F20EE0CBB50976C5A9AF
63BE9A73FE082536D466FF2D0017FE527CE096855C6FAF29F144045DAEF0BCD9
3460C90D641889EA46BCBA4E2426B404136F0AFB44056E2BD51A52418EBEA7B6
79B2306135BC569A303F4A1676E1EA1944D20434E3559F0E266D7F417803E93B
2639C4C75BC7B45F4E8F5DCBAF2962AB7399C33CAA5A160FC92FC0DCC871D417
3892CBFE053C9808560EA1F0B067E5AB3089A99DBE7DC3B99DDE8C948830BB46
61663E3081AA422CC085092F526A13E83C99C6DF8BABD3FEF6DB63412CD5ACA4
B81DF119DE66F38B21EAC599B61877639E81AC0873EC03128FF6EF320066A802
845E11A5B3191B314CD67CDBE8B5E36AC44552BEAB1DB46BCC80A596AAEB908D
45897AB6ECAFF4557B64BDA6801082D184479A6B2811302684304D0C8A334EC4
7A44F1484867D2E819F71AF080ABCFE246BDA6A7C5B2BA61D291A00B95386B6B
9A386ED17BD29875A8C460D9D83A87B3B2B03786CEBB77044B3C9DBB305B3FE3
9917B871C2205584E9C66244D31D3A8BEBF64F6602ADFC71C597DFD7BBA7B0AA
45B8863061F1EEB43C5C0A57DE29449CB2F73F8E8DBBD9177DC7701DD0A4AC3E
02D942B817C730CB939DA99E0D1735DE38FCB8659F183B0DABD1811DC7755F4B
994C8E6419274A5886FF440D9CB322804B85A33B67DB3EE97AF0462E69E352CD
968618277558F00F84621C5DC2D5B6A504AE0BB3DB3EE8880F73E72C22297699
AAF7FA11D9A5B9B9F6EEFC52CA1A27A528C09772E0C2FB79857D6553F136F573
CDCBCA61D56819D24FE72562852B6D4C06082BEA430A65A02A74C5D5B1BD8E05
A83ADA18065C19FE1EF33B56D273484BCABCCD5F55E8F41580C74653B207B417
7658F448576F9CF35A99DFCFE82FA8E7B2E3B4AADEC6E9A2FFBB43F1B4E00550
A27642E13B3EA750A282588217C2B41BFB38DCD8A1B63C80B43CC07120B22208
D39388C0E4E5774DD5E33AA2493C954CE40CFE78431ABB904E512C1A647D0700
94A0CCE4AC70928C1F30E305E3CE12FCE5B23D9725E15AC33B78899965078E05
171F931B1E9729DDA4B2F7AA429CF38BBE72BFFFAE686C38631939F97A18067A
5109F95D21CC36E5C285F1DCE0B67FE66954541953B64A8A0AB8E1FE4CAC3B21
B8039F12B178C2206B5E29910F8F7C8BF0D3B1BA5E8B1F7612769AF8D19E06DD
E940C26FDCE668C6E49BBA67FF9A8FB5B7688D0F9FE2CC856639A763A824D1C7
BA80ECC93AB30ECAA7D11AC426D61CF9A6532E060206DD5C5F19CB278E402AFD
7E9517D64BDBF033DC82398393CCEA74B820CB00126EC334919CC3C56A6417F1
A0B95BF10357524E6C1DCE6DBBE68DE999F7F60729833F1BCACD40E739582B7C
AFEFAC7456FDD3D7586DFAFBFB45420895ACA86DB26326956F5AD633DBC78BE9
393374CB592503ADA31F916DC3EC1EEC33EFE7DC225A6B039F1787762E7D5F8D
0960FF40A6327CACF746D5F21304EE61B9C44B140B1BA4A16A852C1A05C6532B
9169C6807E6CE19B5CD650F404D94DDBFB7B513C9402538BE0C55EDC0FACCE43
F9C3346E950C63F96FE08928312603C8A0064C32B1FAB647D024EE8DEF63043A
F51BEE0A6DEC9C0A68912B532840F4F034AC58CF9E93ED7A78D572F2D58CC27C
0EF72FF2C0D2260D29618C28811D9A2B9A9EF24A31B97BA6782499A51806249E
A3D11B058F7706C9D1825C1E3892F6E5D81D7CFE151EA9414AAD4A4FDA343929
9D77823B4310B49E1FF4E71C6C6A0F6AE4FDC895E935D3608FA5BEA7EFF95188
EF17E436BA79AA42FE73EE7546CB18B07CC822FA7019FF0DC4334470DED1C9F6
04AACB6928359622694D922611F5C4169F6BE4AA6B0CDB0EE7786F2B9C9DA581
F867E431BB08FDAADA7022269D14D4DB4A3890C5CECCB1D62666DC7DD3D475F8
FFC1C71FA2F54B45516A478444339CA295D0CB5401CC94DB2840E06263E7D475
B0993E71A1039A8459B6640E1DCC6D813DDF93D488C288571F8C02D6D92AFE96
FF44CC0F099F18FDB8F4F2D897F604DB1B81CD1FDDD9A3307D88B32F5A3BCBB4
CA2D356E5947E48B729B789592688EEBC7C829B7F08845C541A4CD6CC984DFAA
A4BD1A9847D995CC486442A72CC16B72D1D0826C88B6541BAF08DF5653B245D6
B9A0C80CDE05486C665CED372295FBE7D2EF2150CAB19A9859434AE7C2FC3F8B
09CCA29856DA1A156E9D4B7E61B7413DA81A2DEE10E052CFAB443878648DDD03
302762E9B2DA86A1864198C902E598A165897452286CC1DAA8131EF4ED446BB4
150D640A3EAC8240BA0E694751B57DAF67A44C5CE39577CE40EBB6987BE29406
573B00D7D1864815CE5D946E9ACA4148F478B123912574D2F0CBCB65C532275E
5E848ACEBEC1F51CDF2C54A906DAA40A4C412C426085DC874417B856E8D638F5
BE7BF90869FC98C09597D17DA499C89435CE764C2B5B70D7645CB7D0AF74EDE2
7B41E94E738044756311FAE368B1F64868DC77C691934060DBA799F185CBE976
5F64A5AC6654D883CD15FAD52DEF59C48519B1B7849BB2C830B56C619768D40A
CFFBE460C9884B87FA3108E7D006D16AC3321844CAA11553B10505E8C67EC198
D8F55507347BCAEB58A649B1A23AFEF503426E657FDB6938A2921049A891973C
7AD07102B88D8A98644D9A13F3F4CA1E68849E3975FBD080FCB90F38189BB8A9
98B281F3D7D5EFA3BB51A422952689DC6CCF0A247AE47CA149E8185AC60BD614
918487601DF82EE0FD960FD670AB0EE29D5FA5B43131B2BE96A990D96184AA36
AC69E60121F63B83C18D7923EA5E90CAE28971F2C24BD3152683D49BADB60D1B
F442A6F7510AFF3891E151927C9AC00B56A249859A64FD968B28425E145741E0
C2F36EB645F8342F2388044A91D76FF5E6CCE271AE661B3C8A7618E6B1514ACC
C99B05FFF317B01AE8250C620425028048094BF29E17FB306D6883A0FC8E7104
33B92DA423B14F74F8142028ABCD7D2BAB858235AC8584A6CF8CF6BFBFFD53A8
F5FA23916E1EDCC161B74073B2F7DDABC461C056D00C04B1E5E1C5660351A7B5
D43FAB57DD93C3DBB730BB69DC2499A0BD583B0CBA0060EF232EFAB2BB2282A0
956CDA24103BF88FAAD241EFFFE90C273593E2F16F7AF4A002700EE463BAAB83
AA679209880238EC3120F725BB36D129405F4A36E09F68CC6F0484666C7331DB
80DC073457C818563FCAB705C79A45D8EC2EC975308334502AE0D8C70EFCE265
BDD718DD641A5BD96DDBA2584ED5106E6981A21657980F5211BCDDB3F694DA5E
FF8F41CDF0135F9039FB9D6F3BECF4A35250B8B5F3B54E9336E04A0702177C6B
31C809EDA5687F144C6822347D46913F2B70070584A6EF2F9B2CD86D5E119D5D
CE7935F852F99D2CB3D20AC772AADC6DB7CA7532905400378AAD7496A3A3ADD3
0110B213D1711304504037CD051B605F10B6BDF45C0CF95A4D5F574D382B05D5
5A9998EA7F671DB60D3B195CA1E326037CBA2492A7A6525A9DECCAB51456B672
7C7E52E0ACDB7EE91A1E52397E654F805BA4824B81A4484CD2287FF1A96C67EB
66278A18C91DEC76DE91D8EADFF804285E5B1A4311A5C702E755E627F18B2BC9
7603400324B3C9867A66CA55EE33DB1B01910B74E010065A932B5538E64C06D7
3C2A9D753D6147CE2C4A387720FEF29749AC4DF7EA55AD977154C91ACA49C3E3
F81DECB0E35BE095DC69C14B570A1EA2A8A0B7350EEE78E22C3E7E215930950E
4D03CA9C03DE6DBCE1E955F8E5FF88F569E9E77C4A9C22A0FF24E0D62D34C0FE
A748163850B4A3F58781FC13E57A8254BA24994C01EA42AF3669224E552AEAE2
BBDD780E249126D61E0E3C6126237245D905C8C9D1CAD3E0B6B3FD5EA3923977
BF1C6F4DADC37316C6A2D224795EB3170161116010EA293442EAD5D5975D859C
1F1CB934AC0D28EB2002EC3EA2E7B852F6F39487665BFA3852BA0BC3D6E7841F
6A7F1636FA2FC099330C109F383843C63050AA462F8C63BA3042E9F3D35FB7CE
825B0348B1B7A776191CC3775048F744D98B4A65E3A8963D2E61A0FBFEA52629
1D66629DD866478C1E90A87DFFC2AE57CF236771F00C2BE9C3CEB7864B19B7B0
BA3F8E9F8D640CE0D1764E6B3400AA88A246E6F6D9B3179A7FA76C656BB1B180
3D92C434B65D0609464733D832F14FD487ABCB3F16F3F3DDF5E4EC52EB5BC3AD
D4135FBCA87489B4F45326585BD92D593EB1732F1E7D653B7C23F1B44EFD0A27
8E9F7FF6894B3A5E997F2C3ACD9453809B969321776701EDBD9568B5379CEC76
6A12F9455DDE9328C9B5643D4298B04B76EDDB2DA4D8C627E4F93A7B77D80CA3
BFE1C48D00BC42E79CF9BDD4325645FB9E1C0EDE047CDEF339E731E37DB5BA8D
ADC1B0AF0F84E2206FA54076D6F7A3497E1FC0A8F89E5EAD85FF75752303481F
A66596A5EFBC0CA021ADF5B26F8FA70BD3AFE2E5D356994993A97B52E0584138
FA3E9C6D509B61DAA9749933C1C63E5FECB07C5C8D654334792DF4C2E4A6E9DD
5D79F8C1A288D5FF6B4E1F28405DD4599CD2FB147E95FAEC59923EF6F57D87C0
193C24F32698A67293E505C47FB44EB017DE5CB9999C4622E752957E7DE55FF1
EF21FD9926EBE25CFD200255E01F6A100AF4E698D4687EE87E2D33F4FFC57DB2
72A584E75A4248AA4E36FF6C5C3F91A489375B66DF07D050F04D2328F35255CC
BC7CCE418B90169B3C2DF80F9B4A86BBFBE7EA5C3A36A9BC97837F8F60D804B6
3A7DA9A5B5451F2B2DAE8FD917669EBCF6222F515ECC75282EFA6871C3247F65
0A7ED7674E52B65FDE61CB7FBCB261220E697F3105FBC55559B647204F086916
25FF4064FEDBD51B00FE1F5D38CCB182778BFEF801A1DDD4CB14B8A04728D89A
F82ABF5FE6121D4F983E532F7CF4FA343F69C171FCEC8395079D99BD6C537433
6EDA6F5649519C1149C8014C884DB95ED07F469A6D763BAA107CE39EC9503023
94070B5C70AB0B3D2155C21952E8D71F086A6E67E8DAAB2675B25A997624434D
8CB613C129316D47F070770E369A3349A7CDCA8501985FAB95BE0926257D2B46
58DB0561AC0A99B6CA4A1B87DDD1AD1B1367031A62F970FC765A62D008B31402
E1FBF4E4E91159F0824DC83367919388F09DEFD4E36A3C25EEC0DAFDED7F50B5
1C2B095DABA6050AF744E1AC4F6F123BD37CD6F39CDDE95F454F222279330F5F
454539C706023715FF5CC7FF8D84A7B390AF0B8165FEB14D0552983A15D8FE10
C9DB489DC5EF1F1A2D6115923C94B1D91842B65D21D29EB34AC6E6EE4A238F22
295279F68CB78B9DB11C3393955C97C2E7727FA6FAF22997F0105EBFD7ACC98C
5EB900B9F2AC3824BE48B1543996010CA6FCAEC4EE7E0C80A5991E7D88215BD5
AA1A329D755B4572A787D193F48994F25AE9E3C640448ECE73C6C305D7994D2C
FBC442FDBF964FECF86DACAC2902E59987D2B8318D88FF2BC4DBCD5E5F0C7085
B06521C39D2C729F6746CEAA1BAE2A6F96DEC42D37C93234A39988671E13EC8E
04CB93FE56C9A8C4CCD37B199CE5BF23F6DC57F052E2EF8B491262AF50F98657
BCE638593904E5E61C99CD98B5B736C43CB9746AD219A5B208251EE28F59F72A
5814750406761019F732FC79E2D36B9C7193DAF32F5B40A9834AC21D244D82D1
4F6CE9F3E43AC95BA8C7DAE0AF2EFEEB81260B68CECBFBEBD88DDE7E437A36B6
2B232C1B855F311C96C8A79CFE2552F4F77257DF2F0C6695D1328477F9678DCB
FDE2D6B794301E9E17099F1E8EDB6D368D0ACE3DBC17BACEC8F834D9297093FF
47DDF6B89BD9230C257866FF1222D4E88F26C7C5BB84F7D8FDFC5AE3B7E3D229
093CFB1B8AC8F4A5F638B46BC0C742E91F7D927E63F372D91DF8424CFA02FA11
77D7C7FC63A99FC0E1CBBB0B2D27B36A9657D4C2FE3630E5657291D7E43454BA
4E6E4D4E202B252CC4FBBA3EA777D81655A7C7F93B7E0EB578EE7719E89F503A
6E15B2301CDDB500EAD816932530F0799718F567347C2617DB87E1F0FDB4C072
206452D20B3D1DF5856F95260CDABCE95597DC5C6A7DC3A51F0ED308D1A3CD0A
3E3EC189D07B7E0D644E108D7667361E801A4C4F55CE4F2D86C791080EAA2C59
807D8C6A79F4585A0529A9F7682D57FF178AAE188166E1612CDC1F94D53ED456
EB41F14EA41B980BC18CFF16B3AF5D517684F42BDD937E6A2BD05144B855C91A
7A491BBA2AC323307D90F51D400C19CA5C8B18DE4A66D1B21F63D82B904B99C3
A0599A599533A3795BD713BFEE69E951880E07503AFCDEC95DA66DC2A0829992
A4A8E3D16E7697394E61AD27CE6F2C9ABE8484657EF864D106102F9BD89CFF93
22382C99537864561533BC0E45F8AD2D30087A896BE683E04D0CC0F3AE0E700E
1795421C8B53E2DBBAABDD19938EE4F1FE68B922463E07E89EB22A07A7FC1BD9
744586CA6E1089EB808794C916120A03309EBD5EED7F65C4060309BEA9640DE6
26358B56E893E6BF2FE0D13214F849E5627654D16798650B570F4AE859B99761
91A81BC1617857FCE0B9314366DB6CAA0E10CBBFDCB25577F2F47CEDC12D605D
1028928D915889247DE4A4BDCD61CE3E78F797AD909881FD729945FF694EEFD7
9686F217D6AF37D22F112F665158DA69C16C2DCC6F582EE8B243098C9EB81434
6ADA75A32931FA20D1874658CE45F618EA93F8D48A6605266E4FF51F78FD6F19
16043BB3B6A60B7D0FD565E65E334136D7D4246615349BD07A5C644DF919CEA5
01EA2E468D012A0151B06EB5D8C6C4F3B9604AC3771A77FE1C0065F70E9DD3B2
417F4FD85B5627D9BA2CCB6465D9AA228D55F8DB7131E39AC805ABCC1404C134
2BFE8A29DECB9748DC53B467CECA7911E512F2FEEB803AD57051715E482A2C1D
C83C43D963282CA63888883ED7D408EF803606BCD486C0D61E85E2F265D26300
28807FA4EF161790296B37D8DBDE738EE81A810F8AB619CF34FD79DA68633A41
D2B147638243E3D1439E430F257D83DE65760EC18B9323826C4CB2780AEDC2CF
5157D318F71CEE991FDF05B007CEA48952C506E675ACC8627A50627233205703
0B478AF51A4727D4A779045013D7248D09FCC16292CED48F65FB4B40A16ECB12
B66F6771E1DAF3EB7BBF7DB7F0E9816413A717B795C2B77D27DF41819C8468A9
C9E9BCA8D437EF0D54A111D9EB86F1BDD4060FDE864EAD0D1D03D5B6E85F7A65
2F25498173694ECB142EEED31391F5EEFD5C7F9E1BFF70EAE23C714E739AD7B3
9123B8996E35D76770FAEC7B190E70069B5E820216E309D2B038D8DCF4E0AA3A
4DC0BEC39CCA84F743C9BE53559376FE2530C0F46A32427E02D6FC215F2387BE
2D5A7A655757AA6771B9C00D1686E9DC395AF9F235DEFC605D8AD8834B9A0574
01EF44B0BFFF59CF556DAD5FA445EBA81B72E333BF860C6A8175EB708AFF1163
FD34ECB6ABFC009F503A61F7CD579A16CFC155510E76C45F698D0E03048357D8
46072655342B95D435E1239D375549A74167D9A650EC3542DFE06E4F25726299
DF5C6FCD1F93AE44BEB1D07A1FCE0A7516E499CB5CEB2470D8C361C269FF0600
D5807944360822A60A118FFBDE8C2F2F09FD949C634ED1FE88F25ED3C85AC217
9DEF56C8DAC66E392507407F56F469A7C212E5DC2F38B9DE6E3CD9D2E75D4BFD
D8BF2AC9150DFD0648068DA62BE75447E05F73FA9655346E8BD7D2BD6798236B
A224BC07B0FA05CA21C640B3B8948782D1A74CB48AD0486C15FB334A17DDFAD7
E565A728673A053969E218E16BBF9C7B121651CF235152D0735C13A474EDBBA4
C4D341E54EAACC5902391746366964F7933B2D9766363F2E88DCCDB214FB3E1B
659226368AF6DD136E7E638DD091EF4B08F3567E11FADF8C6DD9F35D266D53F4
925F17AC7FFE900D5A09E14337272A0965A15F2CE0D27FCBAE1A0923FECB7680
04FF5301E32D9C999123CEF201ABE9A0ED6A783BD5C0BD1AC53AD6BE72A7E17A
F8356062155D46E5E802B344D308DF79FBD36AEA6DA70A2758C951F0D78542BC
433734B0A3F4575F7F502B0D12D17CAC5B80F950805E286F2572722EF736F848
64F92B144C6FAD911E7F8362261F82EE3BB3B82912350620942C2411AB6BBDBF
1B820CD17B5B471542585B6160C454D92060648CF65BAE2E0879C5C77A83E8EC
29D9100D0FDB9C7DE46E21E7D58AD70E237CB48F1348F72B4348A799636C8F48
5A84ECD5A75259DBF9D88E53A871AFA35E7912C379CEEA15E687C5B5793EB578
DA72B03154E0E83ECD0AB8287162B527C0031326C185D2671BAD04D610C2679C
0EB00CF03B6EB454BD1C295BC9F7620F8DFEB4E316F2A0CE7F9CAABE16379A14
6BD0F8481158ED16AAFAE8CB93858241E72645F488E8C1AC62A5063AFFD5791C
A3F620C8EAB7C9C5A970D26E710FB5AD50F737DDEDB56480DBEE69B463CC1368
28FC9BF099C6246F72CBBBD45F680DE13AE9098003658A3EC47A454286F66351
77A73791732686279E69D2815A927BE47C60BC7C379F3373865DF2D5B2B04CA1
519210DC80089E1CB45E85D71A172F1F6CE67E94937CE39A4B6F397FE90317C3
2E1BF19ECFEB0478C8C165D453DF28BB5ED37F699BCC6704AA7F7A77BC8EEC14
D652481FC27CF6C354F0240393E288273FDE025A5D66DB1D30461F7D1239C127
15F64206D156967859EF589E5346D8736B3DA79D7A1FC50969DA5A97CF57BA86
046CA9A3AEB9B6A07A4B23A29CBC93859A61AC2D92573C4D6965EB01C3869C5D
42A956B290FCA5708DC064E369F0013F8CE71158225A1ED1DFDE01C2CCCB8F34
42D9904BFDE6D34794D97EF6B4204494190E9B1881D7251BB2C8D0259B33FB8E
8C41C5927028083081C793690842706C082FC5037BBDCF70A3A3EA4B4169795B
CD034D7A8373B41E68BBCA4ADDC1C21E9050AD5352C722964396D9155DAD5DFB
011525CD10D027015AE71F2059E607703980CB42C9919AB18D897A630B107B2E
CDD890D4E8E6888601751E564A1BB29273B124EF4D349C81A4CF93BF77665450
69F82E1FA1006DFC02C3352B69BA0ABA55FC7CC06FFABAD69806D54A37E96ECB
593414EA84EDC870AC71991F9DE72210DEB33CBD62FF420AE64A5F995F0A050C
A34BF3127BAC8E42FAC6F8C97C7AF8F9F560C5CA28A128FC78274B34F8D9995E
992635BD5FDF0C886D61813FB01DDF72E11C26D1A71105247395CB4D3F8E2139
8F6F95E559BE72292F4F126BE9B17271E7056127ABB05CD70DBDA6699AE24016
5B27CA170DB13726F45FA82D75D233318572968F735BD840B5E5373EE548311E
DB3D487AA845B60ED20B05E1CC4DC7F1A24BE3350FD2D3F594B6171E648EFAED
A8E2A90748A1EB05E68AB5AC13C7E1F55AA758451ABAB619C65B00F94D9E2653
735F9398B35B575090F17A7730F2C562613C75D048C69830190018D8982D8D3D
32EAF027FD88E80E387C940C3EACDF8042C1BC9CB5077FF063B0A2498A178121
171800C35DC228A2D53F334E0EB6ABCF6E074D09DD61A56A5C674ABE36D31ABD
19CD80E57C16F7DDB1FAA3C303D69A868B07029055836EA08C692F0EBFBB2562
F4FF77761F7E008C71DE0088C894CFC456C520D516DD3696C18341C3259F8CA4
84C113148481F7192C06661554C93D2A8A2650D7F3DC6E3FE1DB8201C3CE8DE0
5BD803B1D25EFEE5D35CA1FBA47BBC1806945B7947356DD89DB89D5AA33D2B3D
F8B5AB876BD5ED21253D2D8F4C340756102A273FB2797E89C1C6024E9CFFCE3B
98128FAAD7FA5D7C5059D06B1B5F58F444BACC7222202BB32353A7870E6C20E2
94B64F5CD88B9D331E28489E158363CEEB027D84362818F63C005150B429D57C
154ADF3646492C72FE6B61D03A02F4018A4924E18A75178187B58F55B0CBC44E
39B6BEDDF440417990F26D25AA207F335A6050209114863A784523B2F76CCCA2
D4FA216056F6F88B7765C9D5B0A689A4C4EAACB75D215E69AE017FE54B1292C1
812A7DD1D3DDB2BA8AA8942809E296E310EB4E0938E701932DD27C335C011CEC
41B9B63B912388F60CC5CB5E6ADA7C5D7D889B2E9F37E95B09ACFEBBE29AD15A
CEBA882B387ECFAAA1D8DF70B98B24D916886B883F9461F52B4EF2A0D99D00A2
924C963191110A4BA9F30D066FB7F3FE1DB1CAB769D513E92E8359C0F970484E
6B240311B8C2851C3BB4758E1C524CC4D99F75F5B0DC420CBFC3FF9F8F0AE004
759C757788B47D295CA3B18EA21D24AA87EF91C369553351D6179F4A945DD6FE
249CC00C317F86220C5E198B974D6ED0F7BBB0C3E2440BECE393383F6D7E8E82
6AC6C4485792311447CFE1E54CF3B2EFBD221DE3E912AAEF1C2532BFC94E965B
35DB2E3BEC5E8F889DDEC3FD08CE1E84F233EABF6BDAE7564653ED636A46033A
A348DBAB4B16297B24B6147C07C4B87E0533EAEFFABEE39015CB49798C868C35
CDDD96CA862EF3452934959B1AD4ED2AAB51FDD348F23B7478AB32D891223578
0F59FCE95DA86BCDB2D45822C04E92B0B047D4B1EA2BB96DF977435F82555FC2
CD9825DE4EF6675A81679FAEEE5C663E29FFE91F1F2CED85ADC8041162A5B79E
B7B14EE258E3EBDCB507231F67AAD1FD9756CD17B6CF070F8517CFD7B027F311
5E72E85254774C9D1EEDBE2F82B4A1D8A79EB3D74F89800BD6F7E38B116189D8
0FEFF68BB28E0B6AFE7AAF4B2ED591B6B031B1A7D6779F66C658481AA5FEEC72
57EDF4B08984DBC633116FE919AEABCE3144F81398CC5763A96B7201ECF578AD
97D39EE587DB1A98F64A8DBB3304446DFFB704B5EFFDF35BFC7B3AB26CDA5833
92829F7A9FFC92334AB433D5231A38941CF64FD78FF0877437BC702BB1E8BEB0
E5DB14753526AAF6D95C3F9C4FBD7753C8896DC88423344789794266AFE513B6
C0C74CD131B3474B56F8BB53DAF4130096CE39AF36BF69D45DFEAB6DD9669BFC
58413E1B87B16995CC1D00A5905FD80CD8911DEFC48C08B5CE172DB523D8C298
934BE60E93A673528F0D23BC05C2A82991FC3C5C4384611BDCAF9CB712C240C0
648F6D890533A92B1FCF4981DEFCE3DA82EB28BABA9A66E34F93B4912BFC0CA4
98D4FE73B715866A4763DD727516E60D0375B127909CFE6BC6D24886CE7F0B04
DB2E97FEF6C3EEBBA88B1A618F04D8A803B10C424671A61F87563DD6204CA85D
91B606AF8E25734EEDFACB1A4A896575F28CC3CF92553428A0ECE4E473AB37E5
3640422313D65FD456B7AA279BA7CDD073FBAFC1858805E8698B3A4CF9A2461C
4BE91C379E216FDED680FD90A9A9C07C50B539937B95FD66533EA973408C6A39
4531B7EE9BDAFFE42CF477B111B4DD28D09F519F7C734B61F94482712E985357
779C8171317259851348D2BFDF669D5F62B7EB6C92BFAF633E61A6ADEF79E202
5B53B95A220B4AC9A461D130FBDD0BF7514640CCB49D5B26BE2EA232B5AFCB06
1217163B38D5C80C0E63FB6FC6A908A3B8A8FF8CF2144E2186CB6FC14CDC9A8D
F53E4DC691855F7AB857D1124EB39F26198FF6973AFBE533230207EF554B440A
F248C3E6DC4BB219A261621F56EB76DE1C5D07B86F3349A3D5137FE3D5C1AF77
1C5BDD2F4F6EC4191707EEB41F2E815B89643EAE6E68992FB7D5FAA65C8B63BC
B7E2814675E6DCB33B7E2FDA299C4E0E2AA892E4EABD0A6304090CF7CF2408C6
AD9807643BEB550078B1293B4359A616F22BD52BA3E1F4D190D2F08CFA0BB91B
4B8DEB86BA541419BB5D2BA3D7BFB4133A7A75FEF11E0B408A01B7797A4E6AB3
FFAA1DAA0BA8CB7DCE22AC366782C9CAA0ADEAEC946953AE7675845F0DDE6C2F
7AF2B09ADF2F1C92123AC8D1CA702CBA1AA816E47DC498A6763769A0A67CD105
0C9754DDA0BADBC35A33215441AE201110599340C6633D454FAED8F35123C88E
FC775A4CB5C98C99BBEA07B505F4185BA8C0137FDF7931C1456DB9CBA8CF5306
4A6C9E19C12F9AF902E954FEC544EE385D356FDB286E20D756A1D556DCB95156
085115E762421868D11563BA42D5456018B76D4FA11D43539C59F98266CAE857
D8762D36463C68529743CB16A471F23860EC97FD5770FA977D691C2B68E0D37D
04DC91D31B45A7F86DAA773EFF026838BBC2BB6D657C4B9092D3EA35CE0FA6F9
4AD94C6CA50E330B1789C9EC5369723094D3CC124D23B86A2A1862179B3FABBA
DC864CFB99B02C06EAE07A3D79BDB75F1364DFBB2EE1B6518384DAB6960F825E
6DBEF4975CD06F3CDE89E50BE060BACA8AEE4BC9402C26A43FF24F8B988BEF77
C82F8CD62A6AF767CA9B236DC951E2DC5B3D40B58AE99326A82F19FD641740A7
6AD853DB2773896541B4CD12116EFECDBFF626373FF63DCBD4E7BEF22CC5D269
EF3DC1BF7DD81CF7D8B2CF188398B61EB849672C5532F75B9E1465C13AFDC4F1
3CB668EA9062864C15CEE7DD2BF8D4439703A64610FFFA07850F69D0D306EAB2
B798252EB39FFC8E61C0460917C07DF4D4732CD763A2A25BD660CFE35C89FA57
955CE5BBB68B9365D717853AF449004CA4D39FE986E9255491537FBAEE8FCA62
03F1070D38FACA140A6FB77CD7EB6E23FE699FA486362316F9C6E28ECE3831DF
61DB5E124D1F0E1DE0FA2C8C58AA22A354A733342092DEBFAF7B99F13D78F8EE
895E8511AE2F4092A20039245A308C1858F002EF1862CCF8B538B40027B294E2
8F9BED868534B96C29834121DACF95A554E64A8FB09F0E542713DCD67DEE0F16
5AEC3A0C0AFF2F61B023F6ABB10D9BD29A2370CE3090944F3B697F8BB2367D12
F3C3DCF8E978C657D6F48B98DEE96C320EF20494407F66198DBCA84EBC099DC3
B6BB880EBB0C07108F30A26A72F587D5C376AF20F069510C257AD657B5B38E73
B10C239EEB81436AB322794FE4D10A67CBAE8B1B39932861164F635DD26F6689
4E68294097FDA1CD44E20C6D6C18D5446AE727A0F2ECFC9BCE30ECBF1D2F791A
461918A9AF69CE005D046FB20B63D3B1CE7985FF894F3455CB4B6DA2838696D2
20612585B19ED39A0F85C534F9E47D9C6A0EB3BCD6AC5984CC1E99D6397D896E
C55DA2E2731483EF1025DC362ADC0D62A5895E5679E414F5A4FCF6C37FE86FD9
631E16283A9F9D2C13FA5A2D8EBF7D18BECF9FD4D10383FA9DD8805F1F208DA6
55210105BBF252BD0A9A13618686F0D9B6BCA6785F8C7CBCFFE6F589A048AEA5
862224D804393C43AFBA5EB623A8DDD5DD1A4FAEEF06AF71C360555824A443B3
CB7ED2D80BE2B01D52D8FA9718DBA485C4EF69F869CF16D088C1AF5786A1483D
3BD4BB73A5A88A99BCB157071AC27D7D7579466C6B68293F8C74C0369247112C
AF9B4DE934D6EE9EA65B55CB3F6836F56A805ABF3F4E54DD9E693CE8BA23AF2A
12ABF81FE5666ECD7B8446824E40BD44DC8933461FA39C82D9792A9C37F93480
ACCDDAAC520A55771A1332AD6CF6E935D9B393DDC079ED407A5E9E782B649C00
3C881AECCDB21C10DC6212F12C5F8A799F65DEE1F593CAAAB45034645C8F282E
11986B2936AF775803EA53250E8A30F95854D4FE382A0833377EA03878D81378
3A3D225C03F528127373A4F44A60E39B4C986145755B16D30D6F848AB0A93EB2
1AF43EB45FCB7526546C3E365B75D865464957ADCC61AE10EF529C92665167B2
F81A4E510345BA66F243416EF26070AFBE33C23423AE6380A2EEB6C6573AFD40
F3D994762EF68AB4A9F27E736AAABDB581DB8F88AADBCAC4AAB1E83A6D8051D8
8F9EEC6E7AB97B49D325624497242441E5772D6C94D5B0D90528393B9D493184
6895D181A89BB8DEFE37158DD072A8D2D808D2D47DF4DD69F08C91811A8DE642
30917214090CDF08B8BC878F4FA7023DB3E872E106AE88047578
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT9
%!PS-AdobeFont-1.1: CMTT9 1.0
%%CreationDate: 1991 Aug 20 16:46:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-6 -233 542 698}readonly def
/UniqueID 5000831 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D1E
2931CE5F5D18C658602059F07BE66E6EFC9239D7AB2FB8A4CBD41675B8ECF279
650C29E53B14AC0E392A664848C1844B1CECBB2D5CFB72D0916B675C9A9A1E35
F12696A6F628473C604A95376468E06E295AD6F76CEB939D94113532050B9D5A
D2F41A9EFB9424D986612313B89EFE9C8A71313340B248F6853B1EDBF02B7F9E
F447220FE131D7D54CFB8AA1281DBAEA73E665BACB1F164552CC0CEDB63BD4B1
4A9AE8AC6FA02242DBE8DA46B64B6BFC11762F0784F216FC8B9120D688D1705A
438B14F5E5DEAF2A98408B3B64620DE3732A4DAE6D08D5D97E34C75DAE19EABD
BA0796165C1151BCBFB1DF8D29A63A8300DBDB9E3323CB82D0337598B83F4F2B
A97CF5196D4D1CEC1EDB8966E548C0D9C194C932319610FB43EA1B86322FE641
AB48770FF13BD475A7267E142388563D1A400419C585B22A9886074687BEDF74
D905BE8EE440BA2ABF28EAB673399B7F129B9729DD5564C681954621903B84BB
CAF89AC5ADB2932472DF29ADA2BDBDB4D05F65F28F5F4C529613D61858E0074A
082A852710A62A147C966F2B85B51B0BE85F11D2057C66FDD61F6C5755367980
9F4DE680601D4DA41B46F8D2148450000413C27AA39B586B74B977B25F0FD3C0
4BA1EBFAFDBEC531EA13DFBD6700E53818CE04D23886B8AE75DCC36BCD3189B1
0D55FAE27D0D126E82AEF31D7B5DF27E58C30BB0867D6D7AC1DA9EFB8A2DF095
B5B934A68EE122DA0A83B36C952431586B957990206194E89339048AA6EE4C53
703763505ED57C494DD907D0EEA04F6B1D4C8F3BA778F4E7AA832AAB4D75F024
61E91C6D25FD6823CB24FC8638CE26627BA21C954FFEC81349B95AD489ADA3AE
7C70155C1B1BF35315AD3CAE1F4A6012449A04C1E93244A4504A7C26AD47CB92
BFEB14CD68FC6167F9C1BE75BB0B44BBCFD61C0604955D961102067C36AFF393
3E3A7A0F5AEB099C8437856CBB3AEEF621B528935F563BE349B7E37069F22FE5
9B6434B04B03641141800C4BF347D79B1AB6283D034A9CFDE4551C454905A7A6
2F0FBDAFCFD6892DC91ED0F1D382FCF6B5516DDEFDFE84298BE12A0D2E68A7EC
5821CB86556548EA534C4CD0F3E658B07175C4BD579630A6F28927308A48CAF8
25F867E879A8574801248DECF78F17D1FC444B17B50191EAEAF9CD89DE435ECA
094EDDE9DC80AC236A52FE4EF5D51B20864FB1EF4BA9ED66A45D0882F2B65539
F7980F2F53476E9982D63E9D9F52A491B5E427F26753E49994D09548BA2AEEA7
C2634F78AEF8827E7C9CC350014C43EF22F524DBB04F6147F5E0CE33FBEA2291
C50606EB3A005496D623FD161FD50E1CEA4BE90080D1631E3169BC4402804051
A110FE0C38CA284BE7FFF6630B1699BDC7528D2E9D76A25D51E2F16CD6D0D82A
DAB3E75A48B933629D21DA4C9A902FFF6E62B752AE3E0024E7B354E367739C38
38A907309B1113D274AAEDD56BFDBEDF1A8FD7C6294153C50096C24670D59E15
F81C59456CF9B16B10F6689575C5E2AD0E688897AB9126F4DD013C6E343D0B46
8C1C97AD14121E2B7DF2634A08F81A82B0831DCBE6B3F1F6CADE93CBC9BCD5E1
CAAA14E38D90861BF02EEDAEA01E9D00CF0747E2C1725828413A469C7D3E5675
902BF947F858368F72CC5EC8BF2BF15B6EBFD83D1CC0D2A90F0606AFD8D1480D
FD8CF931A5D0B658883C1600DF6FF4C9E6BDF4FFD0B2B4AF889342A0542225A3
BD5C661A056502FCDA5A920F524C38A49E18D637C6F366D02E1129EDBC0CCF27
D4D1AAAF5CA50AFD2A2085502F63B4749312408A2C72A30F9272DE0824AB5CED
A22AC35951A0A26031D8FA0859D77ABF4230CA167BCBE42F15E8D066CC890785
67211A65C9AEEAC0C1F253AF5B671D59D12549EF1BA6EC38B3C068C14FA49F44
4B2FA886F20978280D25876AF45589118069848796ACDACB36283B1071A49582
B0F21504D62B40D91B838C02B175253EF40D12E29331A5095DC7F8D808D8E818
803CBA676E5C7FC5921043BC89FB0F1ECBFB2CC3732371C1A3EB8DC2555E62F4
FA2AD818130B473C7F339FFE86948C08901C367C89D9C6FA1BEBF83FC979F906
78655D919E7357AF6D0E2DB7CC3434CAC14780EE65FA6CB4E80DCE9E90752318
8942FD88024F3A10182496FE00E46006E61E750AA1B6F4BEB78294298A67FFA1
ACA4D19445187F918E8C0AE375D8E15239FD5AAF6444E9AB08936421A4C39C9B
FD66613801388A694A06FD544F208AA3C8702B1769886B3F508BE5717F6AB816
F880B4C6DEBA528E87C95349646C8A5E71EC850E7AE45B00C123CBCC272A2AEE
B6C6747D08F7DD3869B64B77C524BA33BC8A35B95A6A602A6D832CC91967408A
AC5914EA447D3BFEF13688417F669025A7E4A17A35106F82B0A5CC24BC08C06A
5ACC01A0BA2EFCA18840D368813F2E4D1007141616E01A1230EBDDEA46574D78
3CE00DD42C11B1C8DF2D5EADC1F0552BFC586B6BFC4216CEAE197B81741B99D9
E3660939A5A7EA26E55358B5B169632A2D2E84DC527698D5529EC307B4713FD4
B6B30D56C2D59F18020989B3B3C0C51A81C42A8B94AC4901F3974CE6B14A460D
662DBE831E090EDD3DE4B0DD50E342C54B18FC6C333E86D03DCB333AA551A012
20CAA03B2113985C00D6DEED9A181911DD65BF00A73284921F731AC7CB836C50
76FAB825F38C4EDC9E239D7CB7430C985A963A39D0F41D97A444707A5C198509
26C02C14DA64D29025B77B0F7A9D1CB2EDC4F19BB61F64BEBF2C7E1DE76040F6
A18F2E8C93B315FB42128B9FB7A3403EA112AC4AB91AF58AC1EE4DF58EBCC063
C8C2081FAF12D7023D7432779E9A9A24F9E9C702F2DFADD5277873E7229F2E5D
B8EA8104DAE3092C181BDA3E0F435CA36E98EE4ACB641FDF8BCB74312BB5B3AA
BA79B379BAF39E135961ECCEA6304BCBEEF884985ACEEC92B86AD1047E15A120
8845353195C634F4B46994F1DF612C7C654BD16C9D903E2A9A02A78F85DA6779
6F7FF28979AA670F370237BE2A420E297B1E7C83A0F7D52344B8DC1AC5B2C6AF
3E670420ABBFBBD2AA4AB859E430FD2059A1B4074C540C20B1D78CBBB7FD5D53
46D1F288EAB6D3E5C45D8B9E0DA58AB76CFD13E23687823B8090080718D7361E
54C528AD3C2CD4D774BC8824D3387CCB0DDE910B550476246867F115CB38D13E
518848DF2958E75EE7E9718B614EEC52E96E8F2897217E75D78B30D394430A46
F56250D0A20853120D27A1D5C80E8553FCD6BB8764D60579BF6E107A68343947
ADC6BCCA40E94F863AB010EE4BFC82BDB5F04C1990E2C323917898F0979BDE83
B506BD1CAE4EE3F54E7CA58A780799810B0EC7E9E2F17B6D6D5CEAD1171D63CA
70D7843E7A1265F678C4845C447BEE90731FAACEDBEDF78B32B6569E7439ECB5
C66A90181AB9A02457BB0D7FAD5ABF058F9FE6114C6AAA673EE3642A36C6B00E
615C00B66D0812464056AAD39FABC772D217049E9093748A51BF7352FD5C5B5A
E01E8929BBEBFA7EE4C773700AD367E33F9CA65A69C14B570A21CD2700514EE2
2BFBE62451D9E75A70F3DED9031C39B489B04213B89D737355CD8238F1DA1E47
3323E63EE2DD2F4E37797E8910CDEA161F655B2F896191F5D0F224B93E4DA2BC
1E68B318E599DE3BEC903BDDB3E4C32831F93088F1D8152313596F9B48DF220B
32E8B25FB517325B1EDC8AF32FB1B53C293DB76B74DF6CF029CC391E19AEFB6A
2251C7341EFC451BC159EBDB5931341DE3C87DCF6117788E87C9BDC1099719A1
7BD6028C384288F5953661B7A03576813F18CBEB6F49E3A40C7ED606D458DB1F
853C70FA19ECAAE7C82B39166D9AA2C6334F44A79F40BCB7CED29A6A7955D1AB
940F793A36B496DC8C39A884DB1580767AA118841384341113CD109B17EA8894
88B40A3916912A2997685BF5F54AC7429BA9C8EED1AD1DD9E30E6DBF69D3A960
2AE0F67B9F0D9EAE832BAC792317BF10B5A6D5E083106A3D965750C0509217D1
3DA75AB8721D2887DE21BE7E191D517FFD303537540CBF5F2A5C4B249A9582FD
2ACFA26954ADFC7C96660CA4EE1FED18B8836EE5AC7F2A5B73519C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.1: CMSY9 1.0
%%CreationDate: 1991 Aug 15 07:22:27
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY9 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -958 1146 777}readonly def
/UniqueID 5000819 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D0037D33F24E2FAC2B0009AD3C8350CDF8CC
65BCA87979C36D14CB552E9A985E48BE4E88ECA16DF418749AF04FDD2B0E1380
D281BB2476BB45FF30946B247DFD7F57305FA87E50CA338121C71CDFDF927A9C
77FF14CB4A1D6D80356FB1171ED38C37702350497B44E42CE31DB2F493807DAA
15B887C671199A54C4C1294BC520F5538C15556BC43C9F62342B121C6DCD6C5F
491DA47FF360201EE21C08A781ED0589A6DF91B99FE118B9B29E4F068672E52F
1A06C514D91C4C937D4E642503392B1CD1BDE732563086F6AB251AD87A685592
BD0B2E5F8CB680A4D487188FBBBFA3DD6A81665B3E1038A0909A06BE29BC9D33
577B1FE6FAD1FF7EC8857407C9E9EA2476D4A7A01E0467BCB6195CBF14A7EBCA
508CB87675CC3CC5018CB4445632B184936F9D71DBBFEAB2E2A7882204D240F8
A853F6FDFB383BAEB2EACC31B0889ADD12BE14DB98D162DC9E6027225FB0322C
09491CD9C346AB26D36DA961D7EB49A5700429091E72BD6829DFDD42A11D5212
B614B2B966B98A21AEF8110F803A0970920ED801CD41808F0F6CE24E62236771
4ECAB26875CBFB7EB6F393797F3342E903F6AF1990161D4168A86335FBE79E80
699C4E3CC7893FFEFFEFCF84BC828AEE7321E10BF193F060FCB956C4781C1D04
A56EC2D097AEFB2E51B8AB3029B9658177947DD49C3F9B01E2554A2BC7E3BED8
BA0C9FEF3C616BC9927BB792257CB1130E13138953804CDFAB45EE701E2A59D6
DB08560D94DBFCAB06EECE33B573CF15B0985C816BDA126FF896F870785BDE8D
E6FD4E4532FDA3E50E59AB28380EA3FBD73503329DD8E6D7F0121FA3B5C8CD51
2E4F131BBE0E8D97ECFABE27197463F72ABD8317E3FC1D8746421F0B453A0B21
819A269F6E0F8270FF3BE9101354C882DE644C6232A4388236437ACB12E0CE0D
66984F0415F1907039749D5F74956D190DFC57D46C4329C1EBD8634C4A7CF755
D8B51BCA674E03AA69A42445CAB589CA3B53094EAFACDECBBFD4D2C0BDE2EDD2
CAF91910213C1E388F4094CA3D07084444867C551B786254B83A9B7CE420FCF5
5A8D17AC89ECA851C9E84F99E2537C053D7EF7BC72C4BD416B4D73CEF435C50B
FAE3A3AFD7418A27D7B6835BE374BBAE3CA290B2FEBAC6DD9721CCBCF9C46224
F17554BD090B84D5E2DDD58F040DA4B2787CAC82DCDF06EB94FC3C3D5B4E1C01
C591A6EED8B935E6B2B22BE6C6403D9B9A056D21F02D963A19AEE38E6C068A11
476B86A9EB2A4A6A0AEB2C51349441AAF2F091CC86F6431FD632F1F4193CD9B3
ED606112339B9FCB50394E58690399ACE98DC0A51E77BE8D5C69E6AC68F7187E
1BE02E3C72FB176F7DA98FD09E3A7E7B5027C6FFCBEEB2F5D980D2762977D4A0
76E778183C0BFC93AE6D61AE4A8A7BB80D2527C485061342050D3EA77D064AE6
624BC7C5B9AB4A274F20BA0BBFE47187D630A0E6172C8D39B4623148720379D3
206472F7F4FF29D41388BC476139AE424FB0707162DB1BDDCF339F51114D2E77
8342DEEB71AC5922D3D19F7AA2400651C6E9309FB46177FE09ED55A24458CBC2
F2B3DC6FAC1984AED7F3F5DA30B51FD39B1E47F3F339C54DDD271C4A4D5E13B2
33D24CA7C69FB0242860E14DF03AAD281799A43F1322CD290EDEA64450EBC781
7655204CA86FA2B396483687B5FE229C74122A49BD0281405614D68FF1F3D2B5
F25EA15E15CA7D113B16903187679F7EE68393A31D8F63AC8718FBE0E5A626A1
3E0ED03B92C3A9FCFA79D756D6A49F42FFD8834BA9839885C88785985453E76B
5FC30C68B6412A338AFBD2A7BF34F378C927D79EC35298681806AEA9C83C61B9
F9EF54339B9F3D60A631FD96653634D9A37E706B4A1A8443C8E0C96A93E9728C
42BD5B8A563DF58D79E71CD7C1485BB6048A2031AF7513C62806390C4CF08F08
CB2B50E46E79187512653CAF13F4B8D984BC0998935F094675AEB60C889DD51F
6C92054D2903EF634C65BBFA8D2A2BBC8E0997EE4F7AC9E094E2BAE9E9CACA54
ACB109E68F5A57D8F777B09430BD359744036EE3226A2FAC7CD36091A8AF6F92
DF6EC4A29D72AD967A04B45FAF553F74A26D879F2EBF607223D636200409AF16
AC1BF545ACE61F4E8D7DB90308058788BBF4CD93EC13B6C0C70549BBC7D90CA3
8F05C07A3BDE775B59929B0A39BBDDEED8897833D9ECBC9609FA04F1A986BA3D
8F14228BE5D060F4ABA471D6958833B79700C3ADEAD37C01DA10A9DC2E6E7FE4
0D26C22929941E8EA2D5856C942C9530015D70153EC06CAB93CFC933BA99FB07
AA3DE6F540DEEDC0168EEF26E9243CA22D854DE349A6C57F2E3808981B4DB203
111712D7D62B242A22FDB792E4D66ACDFF303B185526B9CF3AFCE18308A0FA8B
4849EBFA453655201C0FFC82362362DA17C4591AD92E9F5547202DEEC9DB788F
B309218D3C7C0814B47DE8675A41FC2B980DA6DF39087F9020A7EFDD000D537B
11D30E1AE47E4CD4A9820AEF2E7B2E2B970DED4AA8DEC807BD402635EE059106
596DD2832B21494C091356406DADAE821505168B269131872E000B453CA1FF09
60D1A9EBE3ECDB6E727C2DD2673DF49B334702902D6A4FF8153B71AC7C80A514
3FC7ABA00C8CE7C244C7C6BA17E8B317DA92F441027E43B40FA6B2838C9726DA
278076BC03334F2224D6A04B4ECB94CA9AD18C5BDCB8F999D3F667C083C202EC
1937F3EDE8FCF7FB99CC8182149777CDEF1BBE5115DA4585D78DEB1FB4F77AF2
93B058BB7404B64F6BA3B68A7CA056B4FF56CC67DDC3BDB06EE46DE52CB2E67D
B449448C26032311679C0725DD736DB3734253417477417AF8A7E386F726D3B6
892A5935B977DD2736B5E5D866C02DB57B363A39F90324CDE0975B0B04EB6241
2FDC6E14ACF13524F41C4C9D6B217F319DDF32F1BE4B16F627427FEB952FDF0E
C77B82AEEF46A78B90FC14D85F1A726FE0460731075C43083D314EACD61C872A
AE5C829A0BAE4387203CCE5D1B4986FEBB65F8E214F47A349B06156C37EC7F52
47ED824BEE47F53F2D09B898094347F93CBBC0F56BF0BBAE4D5F6B6607910150
6A8DEFDBEFCAB3B4B87AC4D22A6D5CA511B270C8E0BF95699B87BA2B42259AF8
DCA0783F2B651A383DDA68AED4372D8332300B897E60F51982563E7C0B81CB5C
2284F0C8C97635498A34C973985796723733F5CC99689906C154A45C09F21EE8
BB0E3BAD9BC317136BC84BB6EDCBEC585F25353BF84900F5C780E5C1BD5C037A
20F27647A4A75C75B07F81ABF49AA433992B92C267F4896170D98A0FE4803201
714125C47BF8F286FE10C2CC7922AEB92ADFD7D71FF91E051511BF22FA8F89A9
190597747CC604817199A7B7B2C0593AD5CFFB08563F556971C2A958C7230613
14A4BA8016DA94D6669F81F2267D244995437A1FA64AD207727D8A3DBA74F21F
3CEB9BAD417BC4957ADE04941C3887FDDCFADE14BC23BBA72D24DC4ACB3EA86D
4EA7834FE65ED8B28F3B338CAD8535BA6BCBDF8DEF8A25DA8E4F82CB549832D8
83D58856B4CFEB7A8E4F090DD8ECBF602ADDF2BAF18D6DA7CEE7E850DA72713A
A4BEB397A4C0EE32847B3072581EEE776AC0DE1DBE1EB336A8F389B3DF6E0284
B5B5870A9DA0AEB3E108B85B4B206B21A18C580A6464574F13CCD28BF5CD8856
7C36AA2D4FF81896217F567BD9AFD0F87E7FD2616576424A7E760C7C7BEE32B2
E8C0504577135BFF7B307F598317EFE7BEAFA97767F24C43AD1248E3B65E25AA
8DC0F26BEA532700D15D519361FE4CB79AFFFDE9A0AB4829222D42737EED9F1C
A859365854BF646C6C41D322B2966228FA34CD61E0C484C282590DF96AEA5120
C8B765DBC3731B282E26D1979B71C9E901AFA948CFCA504267692616371BE189
47B9B8E2766581FDF8B379F3B0AA6B28F534DC1573D9DE4B80C03D20A93E2DCA
86D795AFEB9D2A57C9276C62257D647FCD269C1F49F5615D74E92AF02E64741F
1ADEA249233747DB197BDC5E53F1E7A75B105EA54645FFB00752081A46E9B925
20457ED1B96433FDE862A11D9150EAD2042AFB7301D09A5B69194E2F20BD1E3D
52D75F5DE6CC0FE7F353A7BDB58399825B0FE0BE4F5454277497F6C1CA41260C
FE4DE5B15CF8874661DD395150F3A500
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (cikm.dvi)
@start /Fa 166[98 111 6[73 81 80[{}4 74.7198 /TeX-cmex9
rf /Fb 140[31 4[41 4[23 1[32 103[{ TeXaae443f0Encoding ReEncodeFont }4
58.1154 /CMMI7 rf /Fc 222[120 120 31[93{
 TeXbbad153fEncoding ReEncodeFont }3 119.552 /CMSY10
rf /Fd 139[30 39 5[73 24[49 84[{ TeXaae443f0Encoding ReEncodeFont }4
83.022 /CMMI10 rf /Fe 136[81 59 3[46 3[62 8[51 17[62
3[84 79[{ TeXf7b6d320Encoding ReEncodeFont }7 99.6264
/CMBX12 rf /Ff 206[28 5[43 43[{ TeX0ef0afcaEncoding ReEncodeFont }2
41.511 /CMR5 rf /Fg 140[28 28 6[31 107[{
 TeXaae443f0Encoding ReEncodeFont }3 41.511 /CMMI5 rf
/Fh 206[55 49[{}1 74.7198 /LASY9 rf /Fi 139[44 4[47 46
4[23 2[40 42 32[62 68[{ TeX0ef0afcaEncoding ReEncodeFont }7
74.7198 /CMCSC10 rf /Fj 165[50 90[{}1 74.7198 /MSBM10
rf /Fk 207[18 44[32 2[48{ TeXbbad153fEncoding ReEncodeFont }3
49.8132 /CMSY6 rf /Fl 133[30 1[35 3[24 29 29 1[32 1[38
54 20 33 25 22 36 30 1[29 32 1[27 34 13[38 6[42 51 7[44
1[46 5[19 59[{ TeXaae443f0Encoding ReEncodeFont }24 49.8132
/CMMI6 rf /Fm 135[44 1[37 44 28 36 35 34 39 37 46 68
23 40 31 26 44 37 1[36 40 33 33 41 6[52 3[45 52 45 47
58 61 49 58 2[52 65 1[34 64 60 3[55 58 58 2[60 38 60
21 21 27[46 2[44 1[44 6[36 18[{ TeXaae443f0Encoding ReEncodeFont }48
74.7198 /CMMI9 rf /Fn 128[44 4[39 47 47 64 47 49 34 35
36 1[49 44 49 74 25 1[27 25 49 44 27 41 49 39 49 43 10[67
1[62 49 66 66 60 66 1[84 53 69 1[33 69 69 56 58 68 64
63 67 6[25 4[44 44 44 44 44 2[25 29 25 2[34 34 23[25
3[49 12[{ TeXf7b6d320Encoding ReEncodeFont }57 74.7198
/CMBX9 rf /Fo 194[47 4[30 30 30 30 30 30 30 30 5[47 43[{
 TeXf7b6d320Encoding ReEncodeFont }10 49.8132 /CMR6 rf
/Fp 134[37 1[51 35 41 25 31 32 35 39 39 43 63 20 35 24
24 39 35 24 35 39 35 35 39 7[57 1[77 57 57 55 43 56 1[52
59 57 69 48 2[30 57 59 50 52 58 55 54 57 6[24 39 39 39
2[39 39 39 39 39 1[24 27 24 4[24 26[43 12[{
 TeX74afc74cEncoding ReEncodeFont }59 74.7198 /CMTI9
rf /Fq 128[38 3[38 34 41 41 55 41 43 30 30 30 41 43 38
43 64 21 41 23 21 43 38 23 34 43 34 43 38 3[21 38 21
3[79 58 58 55 43 57 60 52 60 58 70 48 60 39 28 58 60
50 52 59 55 54 58 3[60 1[21 21 38 38 38 38 38 38 38 38
38 38 38 21 26 21 60 1[30 30 21 4[38 9[34 7[21 1[64 43
43 45 11[{ TeXf7b6d320Encoding ReEncodeFont }82 74.7198
/CMR9 rf /Fr 82[33 51[50 3[55 33 39 44 1[55 50 55 83
28 1[33 28 55 50 1[44 55 44 55 50 7[72 72 100 72 72 66
55 72 78 61 78 72 94 66 78 50 39 78 78 61 66 72 72 66
72 6[33 50 50 50 50 50 50 50 50 50 2[25 4[33 33 40[{
 TeXBase1Encoding ReEncodeFont }58 99.6264 /Times-Bold
rf /Fs 138[39 39 39 39 3[39 39 3[39 1[39 1[39 39 39 1[39
32[39 17[39 1[39 44[{ TeX09fbbfacEncoding ReEncodeFont }15
74.7198 /CMTT9 rf /Ft 149[21 2[38 38 9[51 51 34[43 1[0
3[51 77 15[77 3[77 7[60 60 2[60 1[38 11[38 60 1[60{
 TeXbbad153fEncoding ReEncodeFont }18 74.7198 /CMSY9
rf /Fu 134[50 2[50 55 28 50 33 1[55 55 55 83 22 50 1[22
55 1[28 55 55 50 1[55 11[72 61 66 4[72 83 3[28 1[78 2[72
72 22[28 44[{ TeXBase1Encoding ReEncodeFont }29 99.6264
/Helvetica rf /Fv 134[71 3[75 52 53 55 1[75 67 75 4[37
75 67 41 61 75 60 75 65 13[75 3[101 5[50 3[88 103 97
1[102 6[37 58[{ TeXf7b6d320Encoding ReEncodeFont }25
119.552 /CMBX12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -25 0 a Fv(DSA)l(C:)45 b(An)f(Approac)l(h)g(to)i
(Ensure)f(In)l(tegrit)l(y)h(of)f(Outsourced)g(Databases)686
150 y(using)g(Signature)g(Aggregation)i(and)d(Chaining)1207
494 y Fu(Maithili)29 b(Nar)o(asimha,)57 b(Gene)28 b(Tsudik)1255
593 y(Computer)h(Science)g(Depar)t(tment)950 692 y(School)g(of)f(Inf)m
(or)r(mation)h(and)g(Computer)g(Science)1293 791 y(Univ)n(ersity)e(of)h
(Calif)m(or)r(nia,)i(Ir)s(vine)1412 878 y Ft(f)p Fs(mnarasim,)41
b(gts)p Ft(g)p Fs(@ics.uci.edu)-152 1590 y Fr(ABSTRA)-5
b(CT)-152 1681 y Fq(Database)22 b(outsourcing)g(is)f(an)g(imp)r(ortan)n
(t)g(emerging)h(trend)f(whic)n(h)-152 1768 y(in)n(v)n(olv)n(es)c(data)h
(o)n(wners)g(delegating)g(their)f(data)h(managemen)n(t)f(needs)-152
1855 y(to)38 b(an)f(external)g(service)g(pro)n(vider.)69
b(In)36 b(this)h(mo)r(del,)k(a)c(service)-152 1942 y(pro)n(vider)31
b(hosts)g(clien)n(ts')h(databases)g(and)e(o\013ers)i(mec)n(hanisms)g
(to)-152 2030 y(create,)20 b(store,)g(up)r(date)d(and)f(access)j
(\(query\))d(outsourced)h(databases.)-152 2117 y(Since)28
b(a)f(service)h(pro)n(vider)f(is)h(almost)h(nev)n(er)e(fully)g
(trusted,)h(secu-)-152 2204 y(rit)n(y)23 b(and)g(priv)l(acy)f(of)i
(outsourced)f(data)g(are)h(imp)r(ortan)n(t)f(concerns.)-152
2378 y(A)29 b(core)g(securit)n(y)g(requiremen)n(t)f(is)i(the)e(in)n
(tegrit)n(y)h(and)g(authen)n(tic-)-152 2465 y(it)n(y)j(of)g(outsourced)
g(databases.)54 b(Whenev)n(er)31 b(someone)i(queries)e(a)-152
2553 y(hosted)26 b(database,)h(the)e(results)h(m)n(ust)f(b)r(e)g
(demonstrably)h(authen-)-152 2640 y(tic)32 b(\(with)f(resp)r(ect)g(to)h
(the)e(actual)i(data)f(o)n(wner\))h(to)f(ensure)g(that)-152
2727 y(the)25 b(data)g(has)g(not)g(b)r(een)f(tamp)r(ered)h(with.)35
b(F)-6 b(urthermore,)25 b(the)f(re-)-152 2814 y(sults)c(m)n(ust)g
(carry)f(a)h(pro)r(of)h(of)f(completeness)h(whic)n(h)f(will)h(allo)n(w)
g(the)-152 2901 y(querier)30 b(to)g(v)n(erify)f(that)h(the)f(serv)n(er)
h(has)g(not)g(omitted)g(an)n(y)f(v)l(alid)-152 2988 y(tuples)d(that)f
(matc)n(h)h(the)f(query)g(predicate.)-152 3163 y(Notable)g(prior)g
(researc)n(h)g(\([6,)h(12,)f(18]\))h(fo)r(cused)f(on)g(so-called)g
Fp(A)n(u-)-152 3250 y(thentic)l(ate)l(d)44 b(Data)d(Structur)l(es)p
Fq(.)81 b(Another)40 b(prior)g(approac)n(h)g(in-)-152
3337 y(v)n(olv)n(ed)29 b(the)f(use)h(of)h(sp)r(ecial)g(digital)g
(signature)g(sc)n(hemes.)44 b(In)29 b(this)-152 3424
y(pap)r(er,)37 b(w)n(e)e(extend)f(the)g(state-of-the-art)h(to)g(pro)n
(vide)f(b)r(oth)g(au-)-152 3512 y(then)n(ticit)n(y)17
b(and)g(completeness)i(guaran)n(tees)f(of)g(query)f(replies.)32
b(Our)-152 3599 y(w)n(ork)25 b(also)g(analyzes)g(the)e(new)h(approac)n
(h)g(for)h(v)l(arious)g(base)f(query)-152 3686 y(t)n(yp)r(es)30
b(and)f(compares)i(the)e(new)h(approac)n(h)g(with)g(Authen)n(ticated)
-152 3773 y(Data)c(Structures.)407 3741 y Fo(1)-152 3970
y Fr(1.)100 b(INTR)m(ODUCTION)-152 4061 y Fq(Database)23
b(outsourcing)f([9])h(is)f(a)g(prominen)n(t)f(example)g(of)i(the)e
(gen-)-152 4149 y(eral)e(commercial)i(trend)c(of)i(outsourcing)g
(non-core)f(comp)r(etencies.)-152 4236 y(In)35 b(the)f(Outsourced)h
(Database)h(\(ODB\))e(Mo)r(del,)39 b(a)c(third-part)n(y)-152
4323 y(database)19 b(service)g(pro)n(vider)f(o\013ers)h(adequate)e
(soft)n(w)n(are,)22 b(hardw)n(are)-152 4410 y(and)28
b(net)n(w)n(ork)f(resources)i(to)f(host)g(its)h(clien)n(ts')f
(databases)h(as)g(w)n(ell)-152 4497 y(as)f(mec)n(hanisms)h(to)e
(e\016cien)n(tly)h(create,)h(up)r(date)d(and)i(access)g(out-)-152
4584 y(sourced)e(data.)-152 4759 y(The)h(ODB)f(mo)r(del)g(p)r(oses)h(n)
n(umerous)f(researc)n(h)h(c)n(hallenges)h(whic)n(h)-152
4846 y(in\015uence)22 b(o)n(v)n(erall)h(p)r(erformance,)h(usabilit)n(y)
e(and)g(scalabilit)n(y)-6 b(.)34 b(One)p -152 4904 797
4 v -148 4958 a Fo(1)-113 4989 y Fq(W)-6 b(e)29 b(also)j(p)r(oin)n(t)e
(out)g(some)h(p)r(ossible)g(securit)n(y)f(\015a)n(ws)g(in)g(the)g(ap-)
-152 5064 y(proac)n(h)c(suggested)h(in)e(the)g(recen)n(t)h(w)n(ork)g
(of)g([18].)2040 1590 y(of)32 b(the)e(biggest)i(c)n(hallenges)g(is)f
(the)g(securit)n(y)f(of)i(hosted)f(data.)50 b(A)2040
1677 y Fp(client)31 b Fq(stores)24 b(its)g(data)f(\(whic)n(h)g(is)h
(usually)g(a)f(critical)i(asset\))f(at)g(an)2040 1764
y(external,)19 b(and)e(p)r(oten)n(tially)h(un)n(trusted,)g(database)f
(service)h(pro)n(vider.)2040 1851 y(It)27 b(is)h(th)n(us)e(imp)r(ortan)
n(t)i(to)f(secure)h(outsourced)f(data)h(from)g(p)r(oten-)2040
1938 y(tial)34 b(attac)n(ks)f(not)g(only)g(b)n(y)f(malicious)j
(outsiders)e(but)f(also)j(from)2040 2025 y(the)25 b(service)i(pro)n
(vider)e(itself.)2040 2200 y(The)34 b(t)n(w)n(o)g(pillars)g(of)h(data)e
(securit)n(y)h(are)g(secrecy)g(and)f(in)n(tegrit)n(y)-6
b(.)2040 2287 y(\(W)g(e)28 b(use)g(the)g(term)h(in)n(tegrit)n(y)f(in)g
(a)h(broad)f(sense,)i(encompassing)2040 2374 y(b)r(oth)i
Fp(data)i(inte)l(grity)f Fq(and)f Fp(authentic)l(ation)i
Fq(with)e(resp)r(ect)h(to)f(the)2040 2461 y(actual)j(o)n(wner.\))61
b(The)34 b(cen)n(tral)h(problem)g(in)f(the)g(con)n(text)f(of)j(se-)2040
2548 y(crecy[7,)c(10])g(is)e(allo)n(wing)i(a)f(clien)n(t)f(to)h
(e\016cien)n(tly)f(query)f(its)h(o)n(wn)2040 2636 y(data)h({)h(whic)n
(h)f(is)g(hosted)g(b)n(y)f(a)i(third-part)n(y)d(service)j(pro)n(vider)e
({)2040 2723 y(while)36 b(rev)n(ealing)g(to)f(the)g(latter)g(neither)g
(the)g(actual)h(query)e(nor)2040 2810 y(the)24 b(data)h(o)n(v)n(er)g
(whic)n(h)g(the)f(query)g(is)h(executed.)34 b(In)24 b(con)n(trast,)h
(this)2040 2897 y(pap)r(er)34 b(fo)r(cuses)i(on)e(the)g(in)n(tegrit)n
(y)g(of)h(query)d(replies)k(for)e(queries)2040 2984 y(p)r(osed)d(for)h
(outsourced)g(databases.)52 b(Sp)r(eci\014cally)-6 b(,)33
b(in)e(this)g(w)n(ork,)2040 3072 y(w)n(e)26 b(ensure)g(that)g(query)f
(results)h(returned)f(b)n(y)g(the)h(serv)n(er)g(are:)36
b(\(i\))2040 3159 y(correct)23 b(-)e(the)g(tuples)h(in)g(the)f(result)h
(set)g(ha)n(v)n(e)f(not)h(b)r(een)g(tamp)r(ered)2040
3246 y(with,)27 b(and)f(\(ii\))h(complete)f(-)g(no)g(v)l(alid)h(tuples)
f(ha)n(v)n(e)f(b)r(een)h(omitted)2040 3333 y(from)h(the)e(result)h
(set.)2040 3507 y(Other)31 b(relev)l(an)n(t)h(prior)g(w)n(ork)g([6,)i
(18,)h(8])d(examined)g(in)n(tegrit)n(y)f(is-)2040 3595
y(sues)38 b(in)g(outsourced)g(databases)h(and)e(suggested)i(solutions)g
(us-)2040 3682 y(ing)f(Authen)n(ticated)f(Data)h(Structures.)71
b(Recen)n(tly)-6 b(,)40 b([15])f(in)n(v)n(es-)2040 3769
y(tigated)c(the)g(notion)f(of)i(signature)f(aggregation)i(whic)n(h)e
(enables)2040 3856 y(bandwidth-)30 b(and)g(computation-e\016cien)n(t)h
(in)n(tegrit)n(y)g(v)n(eri\014cation)2040 3943 y(of)22
b(query)d(replies.)34 b(Ho)n(w)n(ev)n(er,)22 b(signature)f(aggregation)
i(mec)n(hanism)2040 4030 y(ensures)k(only)h Fp(c)l(orr)l(e)l(ctness)36
b Fq(of)28 b(query)e(replies.)40 b(In)27 b(this)g(pap)r(er,)h(w)n(e)
2040 4118 y(extend)21 b(the)h(w)n(ork)h(of)g([15])h(b)n(y)d(prop)r
(osing)i(new)g(tec)n(hniques)e(to)i(pro-)2040 4205 y(vide)j
Fp(c)l(ompleteness)35 b Fq(guaran)n(tees.)k(W)-6 b(e)26
b(pro)n(vide)g(a)h(detailed)h(study)2040 4292 y(of)i(the)g
(applicabilit)n(y)g(of)g(our)g(tec)n(hniques)e(for)j(v)l(arious)e(base)
h(t)n(yp)r(e)2040 4379 y(queries.)50 b(F)-6 b(urther,)31
b(w)n(e)g(compare)g(our)g(approac)n(h)g(with)f(solutions)2040
4466 y(using)c(Authen)n(ticated)f(Data)g(Structures.)2040
4641 y Fn(Scop)r(e:)48 b Fq(In)32 b(this)g(pap)r(er,)j(w)n(e)e(pro)n
(vide)f(e\016cien)n(t)g(mec)n(hanisms)h(to)2040 4728
y(ensure)d(the)g(correctness)i(and)e(completeness)h(of)g(range)g
(selection)2040 4815 y(queries,)j(pro)t(jections,)h(joins)e(and)e
(other)h(set)g(op)r(eration)h(queries.)2040 4902 y(Range)h(selection)i
(queries)e(in)n(v)n(olv)n(e)f(testing)i(equalit)n(y)f(and)g(other)2040
4989 y(logical)39 b(comparison)f(predicate)f(clauses.)69
b(In)36 b(other)h(w)n(ords,)j(w)n(e)2040 5076 y(consider)18
b(the)f(standard)g(SQL)f(queries)h(in)n(v)n(olving)g
Fp(SELECT)27 b Fq(clauses)2040 5164 y(whic)n(h)g(\(usually\))f(result)h
(in)g(the)f(selection)i(of)f(a)g(set)g(of)g(records)g(or)2040
5251 y(\014elds)36 b(that)g(matc)n(h)g(a)h(giv)n(en)f(predicate)h(or)f
(a)h(set)f(thereof.)67 b(W)-6 b(e)2040 5338 y(sp)r(eci\014cally)30
b(do)e(not)h(address)g(queries)f(that)h(in)n(v)n(olv)n(e)f(data)h
(aggre-)2040 5425 y(gation)g(\(exempli\014ed)e(b)n(y)f(arithmetic)i(op)
r(erations,)i(suc)n(h)d(as)h(SUM)2040 5512 y(or)33 b(A)-9
b(VERA)n(GE\))32 b(whic)n(h)h(usually)g(return)g(a)g(single)h(v)l(alue)
e(as)i(the)2040 5600 y(answ)n(er)27 b(to)e(the)h(p)r(osed)g(query)-6
b(.)2040 5774 y(F)g(urther,)29 b(while)g(w)n(e)h(consider)f(dynamic)f
(databases)i(and)e(address)2040 5861 y(tuple)d(inserts)g(and)g(delete)h
(op)r(erations,)g(w)n(e)g(assume)g(that)f(the)f(fre-)p
eop end
%%Page: 2 2
TeXDict begin 2 1 bop -152 319 a Fq(quency)20 b(of)h(querying)g
Ft(\035)f Fq(frequency)g(of)i(up)r(dates.)33 b(In)20
b(other)h(w)n(ords,)-152 407 y(our)k(main)f(goal)i(is)f(to)f(pro)n
(vide)g(tec)n(hniques)f(to)i(v)n(erify)f(the)f(correct-)-152
494 y(ness)30 b(and)g(completeness)g(of)h(query)d(replies)j(that)e(are)
h(e\016cien)n(t)g(in)-152 581 y(terms)c(of)h(computation)f(and)f
(bandwidth)g(for)h(the)g(queriers.)-152 755 y Fn(Organization:)45
b Fq(The)31 b(rest)g(of)g(this)g(pap)r(er)f(is)h(organized)h(as)f(fol-)
-152 842 y(lo)n(ws:)60 b(Section)37 b(2)h(motiv)l(ates)g(our)f(w)n
(ork.)70 b(Section)38 b(3)g(discusses)-152 930 y(Authen)n(ticated)30
b(Data)i(Structures)e(approac)n(h,)j(follo)n(w)n(ed)g(b)n(y)d(Sec-)-152
1017 y(tion)g(4)f(whic)n(h)g(describ)r(es)h(signature)g(aggregation)i
(and)c(its)i(appli-)-152 1104 y(cations)j(to)f(v)n(erifying)f
(correctness)i(of)f(query)f(replies.)52 b(This)33 b(sec-)-152
1191 y(tion)j(also)g(prop)r(oses)h(the)d(extensions)i(to)f(ac)n(hiev)n
(e)h(completeness)-152 1278 y(guaran)n(tees.)73 b(Section)38
b(5)g(describ)r(es)h(our)f(approac)n(h)g(b)n(y)f(consid-)-152
1365 y(ering)c(v)l(arious)f(query)f(t)n(yp)r(es.)54 b(Section)32
b(6)h(presen)n(ts)f(the)g(analysis)-152 1453 y(of)f(the)f(prop)r(osed)g
(tec)n(hniques)f(and)h(compares)g(our)g(sc)n(heme)h(with)-152
1540 y(prior)26 b(art.)35 b(The)26 b(pap)r(er)g(concludes)g(in)f
(section)i(8.)-152 1757 y Fr(2.)100 b(MO)l(TIV)-13 b(A)k(TION)-152
1848 y Fq(In)23 b(the)g(Outsourced)g(Database)h(\(ODB\))e(mo)r(del,)j
(a)e Fp(Datab)l(ase)28 b(Ser-)-152 1936 y(vic)l(e)34
b(Pr)l(ovider)41 b Fq(\(referred)32 b(to)g(as)h(simply)f
Fn(serv)n(er)f Fq(from)h(here)g(on\))-152 2023 y(has)20
b(the)g(infrastructure)g(to)g(host)f(outsourced)h(databases)h(and)e
(pro-)-152 2110 y(vides)h(e\016cien)n(t)f(mec)n(hanisms)i(for)f(remote)
g(clien)n(ts)g(to)g(create,)i(store,)-152 2197 y(up)r(date)30
b(and)g(query)e(their)i(databases.)49 b(The)30 b(ODB)g(mo)r(del)h
(natu-)-152 2284 y(rally)24 b(triggers)g(some)g(imp)r(ortan)n(t)f
(securit)n(y)f(concerns.)34 b(One)23 b(imme-)-152 2371
y(diate)h(concern)g(is)h(the)e(secrecy)h(of)h(outsourced)e(data)h(with)
g(resp)r(ect)-152 2459 y(to)35 b(the)f(serv)n(er.)62
b(The)35 b(main)g(c)n(hallenge)g(here)g(is)g(reconciling)h(the)-152
2546 y(requiremen)n(t)g(for)i(secrecy)f(with)g(the)f(need)g(to)h
(outsource)g(data.)-152 2633 y(Some)29 b(notable)g(previous)g(w)n(ork)g
([9,)h(7])f(addressed)g(this)g(b)n(y)e(devis-)-152 2720
y(ing)j(metho)r(ds)f(for)i(running)d(encrypted)g(\(or)i(obfuscated\))g
(queries)-152 2807 y(o)n(v)n(er)c(\(partially\))g(encrypted)e
(databases.)-152 2982 y(This)g(pap)r(er)e(addresses)i(the)e(in)n
(tegrit)n(y)h(of)h(outsourced)f(data)f(in)h(the)-152
3069 y(ODB)37 b(mo)r(del.)70 b(\(W)-6 b(e)37 b(note)g(that)g(data)h
(secrecy)g(in)f(ODB)g(is)h(or-)-152 3156 y(thogonal)d(to)g(in)n(tegrit)
n(y)-6 b(.\))59 b(Sp)r(eci\014cally)-6 b(,)37 b(w)n(e)d(fo)r(cus)h(on)f
(in)n(tegrit)n(y-)-152 3243 y(critical)25 b(databases)e(whic)n(h)g(are)
g(outsourced)g(to)g(un)n(trusted)e(serv)n(ers)-152 3330
y(and)40 b(accessed)g(o)n(v)n(er)g(insecure)f(public)h(net)n(w)n(orks.)
76 b(W)-6 b(e)39 b(assume)-152 3418 y(that)20 b(serv)n(ers)h(can)g(b)r
(e)f(malicious)i(and/or)f(incomp)r(eten)n(t)g(and,)g(th)n(us,)-152
3505 y(migh)n(t)41 b(b)r(e)f(pro)r(cessing)h(and)f(storing)i(hosted)e
(data)g(incorrectly)-6 b(.)-152 3592 y(F)g(urthermore,)38
b(since)e(it)f(is)h(di\016cult,)i(in)e(general,)j(to)c(guaran)n(tee)
-152 3679 y(absolute)e(securit)n(y)e(of)i(large)g(on-line)f(systems,)h
(w)n(e)g(assume)f(that)-152 3766 y(the)40 b(serv)n(er)h(can)f(b)r(e)h
(compromised)g(b)n(y)f(an)g(attac)n(k,)k(suc)n(h)c(as)h(a)-152
3853 y(w)n(orm/virus)36 b(or)e(a)h(system)g(break-in.)60
b(Therefore,)38 b(w)n(e)d(need)f(ef-)-152 3941 y(\014cien)n(t)24
b(mec)n(hanisms)h(to)f(reduce)g(the)f(lev)n(el)i(of)f(trust)g(placed)g
(in)g(the)-152 4028 y(serv)n(er)i(and)f(pro)n(vide)h(in)n(tegrit)n(y)f
(guaran)n(tees)i(to)e(the)h(clien)n(ts.)-152 4245 y Fr(2.1)99
b(Desir)n(ed)26 b(Security)g(Pr)n(operties:)-152 4336
y Fq(F)-6 b(rom)30 b(a)h(tec)n(hnical)f(p)r(ersp)r(ectiv)n(e,)h
(candidate)g(solutions)g(m)n(ust)e(in-)-152 4424 y(clude)d(the)f(follo)
n(wing)j(prop)r(erties:)-152 4598 y Fn(Pro)r(of)k(of)e(Correctness:)35
b Fq(When)25 b(an)h(ODB)g(clien)n(t)g(queries)g(out-)-152
4685 y(sourced)j(data,)g(it)f(exp)r(ects)g(a)g(set)h(of)g(tuples)f
(satisfying)h(all)g(of)g(the)-152 4772 y(query's)f(predicates.)42
b(It)28 b(also)h(needs)f(assurance)h(that)f(the)f(results)-152
4860 y(ha)n(v)n(e)22 b(b)r(een)g(originated)h(b)n(y)e(the)h(actual)h
(data)g(o)n(wner)f(and)g(ha)n(v)n(e)g(not)-152 4947 y(b)r(een)j(tamp)r
(ered)g(with)g(either)g(b)n(y)f(an)h(outside)g(attac)n(k)n(er)g(or)g(b)
n(y)f(the)-152 5034 y(serv)n(er)35 b(itself.)63 b(Note)35
b(that)f(the)g(size)i(of)f(the)g(reply)f(can)h(v)l(ary)-6
b(,)36 b(in)-152 5121 y(principle,)28 b(b)r(et)n(w)n(een)f(zero)g(and)g
Fm(n)p Fq(,)h(where)f Fm(n)g Fq(is)h(the)e(total)i(n)n(um)n(b)r(er)-152
5208 y(of)d(tuples)f(in)f(the)h(database.)34 b(In)23
b(other)h(w)n(ords,)h(a)g(query)d(reply)i(can)-152 5295
y(p)r(oten)n(tially)g(b)r(e)f(an)n(y)f(one)h(of)h(the)e(2)866
5264 y Fl(n)932 5295 y Fq(tuple)h(subsets.)33 b(Pro)r(of)25
b(of)f(cor-)-152 5383 y(rectness)k(facilitates)i(secure)d(and)g
(e\016cien)n(t)g(authen)n(tication)h(of)g(all)-152 5470
y(p)r(ossible)f(query)e(replies.)-152 5644 y Fn(Pro)r(of)36
b(of)e(Completeness:)39 b Fq(A)29 b(related)h(prop)r(ert)n(y)f(is)h
(the)f Fp(c)l(om-)-152 5731 y(pleteness)40 b Fq(of)33
b(the)f(result)g(set.)54 b Fp(Completeness)39 b Fq(implies)33
b(that)f(the)-152 5818 y(querier)22 b(can)h(v)n(erify)f(that)g(the)g
(serv)n(er)g(returned)g Fn(all)f Fq(tuples)h(matc)n(h-)-152
5906 y(ing)27 b(query)f(predicates.)37 b(A)27 b(serv)n(er,)g(whic)n(h)f
(is)h(either)g(malicious)h(or)2040 319 y(lazy)-6 b(,)30
b(migh)n(t)g(not)f(execute)g(the)g(query)f(o)n(v)n(er)h(the)g(en)n
(tire)g(database)2040 407 y(and)22 b(return)f(only)h(partial)h
(results.)34 b(Pro)r(of)23 b(of)g(completeness)g(facili-)2040
494 y(tates)h(e\016cien)n(t)g(v)n(eri\014cation)f(that)h(the)f(results)
h(set)f(con)n(tains)h(ev)n(ery)2040 581 y(tuple)h(that)h(matc)n(hes)g
(the)f(query)g(predicate.)2040 807 y Fr(3.)99 b(PRIOR)24
b(W)o(ORK)2040 898 y Fq(W)-6 b(e)31 b(no)n(w)g(summarize)h(the)f
(general)h(approac)n(h)f(of)h(using)g(authen-)2040 986
y(ticated)h(data)g(structures)g(to)g(pro)n(vide)f(authen)n(tication)h
(of)h(query)2040 1073 y(replies)27 b(and)f(discuss)h(t)n(w)n(o)g
(related)g(b)r(o)r(dies)g(of)g(w)n(ork)g(that)f(use)g(this)2040
1160 y(approac)n(h,)f(in)e(the)h(con)n(texts)f(of)h(\\Third-P)n(art)n
(y)g(Publication")h(and)2040 1247 y(\\Edge)i(Computing",)f(resp)r
(ectiv)n(ely)-6 b(.)2040 1421 y(The)28 b(basis)h(for)f(these)g(t)n(w)n
(o)g(b)r(o)r(dies)g(of)h(w)n(ork)f(is)g(the)g(seminal)g(w)n(ork)2040
1509 y(b)n(y)18 b(Merkle)i([14].)34 b(This)20 b(w)n(ork)g(in)n(tro)r
(duced)e(a)i(data)g(structure)f(called)2040 1596 y(a)26
b(\\Merkle)g(Hash)g(T)-6 b(ree")26 b(\(MHT\))g(whic)n(h)f(is)h(in)n
(tended)f(to)h(authen-)2040 1683 y(ticate)e(a)f(set)g(of)h
Fm(n)f Fq(v)l(alues)g Fm(x)2853 1691 y Fo(1)2887 1683
y Fm(;)13 b(x)2965 1691 y Fo(2)2999 1683 y Fm(;)g(:::;)h(x)3175
1691 y Fl(n)3217 1683 y Fq(.)34 b(MHT)23 b(is)g(constructed)g(as)2040
1770 y(a)h(a)f(binary)g(tree)g(where)g(the)g(lea)n(v)n(es)h(corresp)r
(ond)f(to)h(the)e(hashes)i(of)2040 1857 y(the)30 b Fm(n)h
Fq(v)l(alues)f(of)i(the)e(elemen)n(ts)h(in)f(the)g(set.)49
b(Th)n(us,)32 b(a)f(leaf)h(asso-)2040 1944 y(ciated)f(with)h(elemen)n
(t)f Fm(x)2785 1952 y Fl(i)2841 1944 y Fq(will)i(con)n(tain)e(the)f(v)l
(alue)h Fm(h)p Fq(\()p Fm(x)3727 1952 y Fl(i)3753 1944
y Fq(\),)h(where)2040 2032 y Fm(h)p Fq(\(\))27 b(is)g(a)g
(cryptographic)g(one-w)n(a)n(y)f(hash)h(function,)g(suc)n(h)g(as)g(SHA)
2040 2119 y([16].)53 b(The)32 b(v)l(alues)g(of)g(non-leaf)g(no)r(des)g
(corresp)r(ond)g(to)g(the)f(hash)2040 2206 y(of)g(the)f(concatenation)i
(of)f(its)g(t)n(w)n(o)f(c)n(hildren)g(\(main)n(taining)i(their)2040
2293 y(order\).)66 b(A)35 b(no)r(de)h(with)g(c)n(hildren)g
Fm(v)3146 2301 y Fo(1)3217 2293 y Fq(and)f Fm(v)3413
2301 y Fo(2)3484 2293 y Fq(will)j(b)r(e)d(assigned)2040
2380 y(the)28 b(v)l(alue)g Fm(h)p Fq(\()p Fm(v)2487 2388
y Fo(1)2522 2380 y Ft(jj)p Fm(v)2601 2388 y Fo(2)2637
2380 y Fq(\).)42 b(The)29 b(ro)r(ot)g(of)g(the)f(tree)h(is)g(digitally)
g(signed)2040 2467 y(using)35 b(a)g(public)g(k)n(ey)e(signature)j(sc)n
(heme)f(\(e.g.,)j(RSA)33 b(or)j(DSA\).)2040 2555 y(An)27
b(MHT)h(can)g(b)r(e)g(used)g(to)g(pro)n(v)n(e)f(the)h(existence)g(of)h
(an)e(elemen)n(t)2040 2642 y(in)h(the)g(set)h(with)f(the)g(help)g(of)h
(a)g Fp(veri\014c)l(ation)i(obje)l(ct)p Fq(.)43 b(A)28
b(v)n(eri\014ca-)2040 2729 y(tion)f(ob)t(ject)g(is)g(a)f(set)h(of)g
Fm(l)q(og)s Fq(\()p Fm(n)p Fq(\))f(in)n(ternal)g(tree)h(no)r(des)f
(whic)n(h)h(help)2040 2816 y(the)k(v)n(eri\014er)h(re-compute)f(the)g
(ro)r(ot)i(of)f(the)f(MHT)h(whose)h(signa-)2040 2903
y(ture)e(can)g(then)g(b)r(e)g(v)n(eri\014ed.)51 b(Although)31
b(an)g(MHT)h(can)f(b)r(e)h(v)n(ery)2040 2991 y(large,)27
b(one)f(only)f(needs)g(the)h(\(signed\))f(ro)r(ot)h(and)f(a)h(short)g
(v)n(eri\014ca-)2040 3078 y(tion)i(ob)t(ject)g(in)g(order)f(to)h(v)n
(erify)f(that)h(a)f(particular)i(leaf)f(elemen)n(t)2040
3165 y(is)h(part)g(of)h(the)e(tree.)44 b(F)-6 b(or)29
b(example,)h(to)f(v)n(erify)g(that)f(leaf)i(no)r(de)f(5)2040
3252 y(is)d(in)f(the)g(MHT)g(of)h(\014gure)f(1,)h(the)f(v)n
(eri\014cation)h(ob)t(ject)g(\(V)n(O\))e(con-)2040 3339
y(tains)31 b(no)r(de)e(v)l(alues)i(5)p Fm(;)13 b(h)2772
3347 y Fo(1)2807 3339 y Fm(;)g(h)2885 3347 y Fo(34)2950
3339 y Fq(,)32 b(as)e(w)n(ell)h(as)g(the)e(signature)i(of)g(the)2040
3426 y(ro)r(ot.)j(The)21 b(v)n(eri\014er)f(computes:)32
b Fm(h)3050 3395 y Fk(0)3050 3440 y Fo(2)3106 3426 y
Fq(=)21 b Fm(h)p Fq(\(5\),)h Fm(h)3416 3395 y Fk(0)3416
3440 y Fo(12)3503 3426 y Fq(=)f Fm(h)p Fq(\()p Fm(h)3702
3434 y Fo(1)3737 3426 y Ft(jj)p Fm(h)3823 3434 y Fo(2)3859
3426 y Fq(\))f(and)2040 3514 y Fm(h)2084 3482 y Fk(0)2084
3527 y Fo(1234)2241 3514 y Fq(=)31 b Fm(h)p Fq(\()p Fm(h)2450
3482 y Fk(0)2450 3527 y Fo(12)2516 3514 y Ft(jj)p Fm(h)2602
3522 y Fo(34)2668 3514 y Fq(\))g(and)g(then)g(v)n(eri\014es)h(the)f(ro)
r(ot)h(b)n(y)f(c)n(hec)n(king)2040 3601 y(its)26 b(signature.)p
2564 3723 946 4 v 2564 4351 4 628 v 2615 4328 a @beginspecial
0 @llx 0 @lly 337 @urx 233 @ury 1011 @rwi @setspecial
%%BeginDocument: mht.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\Documents and Settings\snekker\Desktop\mht2.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 337 233
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 337 233
%AI3_TileBox: 0 0 337 233
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
 [] 0 d
0.7500 w
  0.000 0.000 0.000 1.000 K
1 J
1 j
  157.6572 200.0666 m
  119.9201 160.8918 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 85.1780 42.6489 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 92.9651 37.9767 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.7500 w
  0.000 0.000 0.000 1.000 K
1 j
  181.6173 208.5724 m
  181.3777 210.9684 L
  180.6589 213.3644 L
  179.5807 215.6406 L
  178.0233 217.6772 L
  176.2263 219.3544 L
  174.0699 220.6722 L
  171.7937 221.5108 L
  169.2779 221.9900 L
  166.8819 221.9900 L
  164.3661 221.5108 L
  162.0899 220.6722 L
  159.9334 219.3544 L
  158.1364 217.6772 L
  156.5790 215.6406 L
  155.5008 213.3644 L
  154.7820 210.9684 L
  154.5424 208.5724 L
  154.7820 206.0566 L
  155.5008 203.6606 L
  156.5790 201.5042 L
  158.1364 199.4676 L
  159.9334 197.7903 L
  162.0899 196.4725 L
  164.3661 195.6339 L
  166.8819 195.1547 L
  169.2779 195.1547 L
  171.7937 195.6339 L
  174.0699 196.4725 L
  176.2263 197.7903 L
  178.0233 199.4676 L
  179.5807 201.5042 L
  180.6589 203.6606 L
  181.3777 206.0566 L
  181.6173 208.5724 L
B
U
u
  0.000 0.000 0.000 1.000 K
  215.6406 160.2928 m
  178.0233 199.3478 L
S
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  127.5874 150.1098 m
  127.4676 152.6256 L
  126.7488 155.0216 L
  125.6705 157.2978 L
  124.1131 159.2146 L
  122.3161 160.8918 L
  120.1597 162.2097 L
  117.8835 163.0483 L
  115.3677 163.5275 L
  112.9717 163.5275 L
  110.4559 163.0483 L
  108.1797 162.2097 L
  106.0233 160.8918 L
  104.2263 159.2146 L
  102.6689 157.2978 L
  101.5907 155.0216 L
  100.8719 152.6256 L
  100.6323 150.1098 L
  100.8719 147.7138 L
  101.5907 145.3178 L
  102.6689 143.0416 L
  104.2263 141.0050 L
  106.0233 139.3278 L
  108.1797 138.1298 L
  110.4559 137.1714 L
  112.9717 136.6922 L
  115.3677 136.6922 L
  117.8835 137.1714 L
  120.1597 138.1298 L
  122.3161 139.3278 L
  124.1131 141.0050 L
  125.6705 143.0416 L
  126.7488 145.3178 L
  127.4676 147.7138 L
  127.5874 150.1098 L
B
U
u
  0.000 0.000 0.000 0.298 k
  0.000 0.000 0.000 1.000 K
  100.6323 78.2296 m
  100.5125 80.7454 L
  99.7937 83.1414 L
  98.7155 85.2978 L
  97.1581 87.3344 L
  95.3611 89.0116 L
  93.2047 90.3295 L
  90.9285 91.1681 L
  88.4126 91.6473 L
  86.0166 91.6473 L
  83.5008 91.1681 L
  81.2246 90.3295 L
  79.0682 89.0116 L
  77.2712 87.3344 L
  75.7138 85.2978 L
  74.6356 83.1414 L
  73.9168 80.7454 L
  73.6772 78.2296 L
  73.9168 75.8336 L
  74.6356 73.4376 L
  75.7138 71.1614 L
  77.2712 69.1248 L
  79.0682 67.4476 L
  81.2246 66.2496 L
  83.5008 65.2912 L
  86.0166 64.8120 L
  88.4126 64.8120 L
  90.9285 65.2912 L
  93.2047 66.2496 L
  95.3611 67.4476 L
  97.1581 69.1248 L
  98.7155 71.1614 L
  99.7937 73.4376 L
  100.5125 75.8336 L
  100.6323 78.2296 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  159.0948 78.2296 m
  158.8552 80.7454 L
  158.1364 83.1414 L
  157.0582 85.2978 L
  155.6206 87.3344 L
  153.7038 89.0116 L
  151.6672 90.3295 L
  149.2712 91.1681 L
  146.8752 91.6473 L
  144.3594 91.6473 L
  141.9634 91.1681 L
  139.5674 90.3295 L
  137.5308 89.0116 L
  135.6140 87.3344 L
  134.1764 85.2978 L
  133.0982 83.1414 L
  132.3794 80.7454 L
  132.1398 78.2296 L
  132.3794 75.8336 L
  133.0982 73.4376 L
  134.1764 71.1614 L
  135.6140 69.1248 L
  137.5308 67.4476 L
  139.5674 66.2496 L
  141.9634 65.2912 L
  144.3594 64.8120 L
  146.8752 64.8120 L
  149.2712 65.2912 L
  151.6672 66.2496 L
  153.7038 67.4476 L
  155.6206 69.1248 L
  157.0582 71.1614 L
  158.1364 73.4376 L
  158.8552 75.8336 L
  159.0948 78.2296 L
B
U
u
  108.5391 137.8902 m
  87.2146 91.7671 L
S
U
u
  0.000 0.000 0.000 1.000 K
  142.6822 91.4077 m
  121.3577 138.7288 L
S
U
u
  0.000 0.000 0.000 0.298 k
  0.000 0.000 0.000 1.000 K
  235.5275 150.1098 m
  235.2879 152.6256 L
  234.5691 155.0216 L
  233.4908 157.2978 L
  231.9334 159.2146 L
  230.1364 160.8918 L
  227.9800 162.2097 L
  225.7038 163.0483 L
  223.1880 163.5275 L
  220.7920 163.5275 L
  218.2762 163.0483 L
  216.0000 162.2097 L
  213.8436 160.8918 L
  212.0466 159.2146 L
  210.4892 157.2978 L
  209.4110 155.0216 L
  208.6922 152.6256 L
  208.5724 150.1098 L
  208.6922 147.7138 L
  209.4110 145.3178 L
  210.4892 143.0416 L
  212.0466 141.0050 L
  213.8436 139.3278 L
  216.0000 138.1298 L
  218.2762 137.1714 L
  220.7920 136.6922 L
  223.1880 136.6922 L
  225.7038 137.1714 L
  227.9800 138.1298 L
  230.1364 139.3278 L
  231.9334 141.0050 L
  233.4908 143.0416 L
  234.5691 145.3178 L
  235.2879 147.7138 L
  235.5275 150.1098 L
B
U
u
  0.000 0.000 0.000 0.000 k
  208.5724 78.2296 m
  208.3328 80.7454 L
  207.6140 83.1414 L
  206.5358 85.2978 L
  204.9784 87.3344 L
  203.1814 89.0116 L
  201.0250 90.3295 L
  198.7488 91.1681 L
  196.2329 91.6473 L
  193.8369 91.6473 L
  191.3211 91.1681 L
  189.0449 90.3295 L
  186.8885 89.0116 L
  185.0915 87.3344 L
  183.5341 85.2978 L
  182.4559 83.1414 L
  181.7371 80.7454 L
  181.6173 78.2296 L
  181.7371 75.8336 L
  182.4559 73.4376 L
  183.5341 71.1614 L
  185.0915 69.1248 L
  186.8885 67.4476 L
  189.0449 66.2496 L
  191.3211 65.2912 L
  193.8369 64.8120 L
  196.2329 64.8120 L
  198.7488 65.2912 L
  201.0250 66.2496 L
  203.1814 67.4476 L
  204.9784 69.1248 L
  206.5358 71.1614 L
  207.6140 73.4376 L
  208.3328 75.8336 L
  208.5724 78.2296 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  266.9151 78.2296 m
  266.6755 80.7454 L
  265.9567 83.1414 L
  264.8785 85.2978 L
  263.4409 87.3344 L
  261.5241 89.0116 L
  259.4875 90.3295 L
  257.0915 91.1681 L
  254.6955 91.6473 L
  252.1797 91.6473 L
  249.7837 91.1681 L
  247.3877 90.3295 L
  245.3511 89.0116 L
  243.4343 87.3344 L
  241.9967 85.2978 L
  240.9185 83.1414 L
  240.1997 80.7454 L
  239.9601 78.2296 L
  240.1997 75.8336 L
  240.9185 73.4376 L
  241.9967 71.1614 L
  243.4343 69.1248 L
  245.3511 67.4476 L
  247.3877 66.2496 L
  249.7837 65.2912 L
  252.1797 64.8120 L
  254.6955 64.8120 L
  257.0915 65.2912 L
  259.4875 66.2496 L
  261.5241 67.4476 L
  263.4409 69.1248 L
  264.8785 71.1614 L
  265.9567 73.4376 L
  266.6755 75.8336 L
  266.9151 78.2296 L
B
U
u
  0.000 0.000 0.000 1.000 K
  216.3594 137.8902 m
  195.0349 91.7671 L
S
U
u
  0.000 0.000 0.000 1.000 K
  251.2213 91.5275 m
  229.1780 138.7288 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 139.0882 42.6489 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 146.8752 37.9767 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 246.9085 42.6489 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 254.6955 37.9767 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.9983 42.6489 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 200.7854 37.9767 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 16.8918 145.9168 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 24.6789 141.2446 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(12\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 34.9817 145.9168 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(=\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 43.1281 145.9168 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 50.9151 145.9168 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 55.5874 145.9168 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 63.3744 141.2446 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 68.5258 143.2812 0 Tp
TP
/_Helvetica-Oblique 5.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 69.9634 145.9168 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(||\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 76.9118 145.9168 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 84.6988 141.2446 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 89.8502 145.9168 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 240.9185 145.9168 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 248.7055 141.2446 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(34\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 259.0083 145.9168 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(=\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 267.1547 145.9168 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 274.9418 145.9168 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 279.6140 145.9168 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 287.4010 141.2446 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3 \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 295.1880 145.9168 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(||\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 302.1364 145.9168 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 309.9235 141.2446 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 315.0749 145.9168 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 186.1697 208.8120 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(root =h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 230.2562 204.1398 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(1234\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 250.8619 208.8120 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(=\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 259.0083 208.8120 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 266.7953 208.8120 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 271.4676 208.8120 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 279.2546 204.1398 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(12\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 289.5574 206.1764 0 Tp
TP
/_Helvetica-Oblique 5.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
( \r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.9950 208.8120 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(||\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 297.9434 208.8120 0 Tp
TP
/_Helvetica-Oblique 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(h\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 305.7304 204.1398 0 Tp
TP
/_Helvetica-Oblique 9.2500 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(34\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 316.0333 208.8120 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 87.8136 15.6938 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 141.7238 15.6938 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 249.5441 15.6938 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.6339 15.6938 0 Tp
TP
/_Helvetica 14.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 3506 4351 V 2564 4354 946 4 v 2040 4503
a Fn(Figure)38 b(1:)57 b(MHT)37 b(Example:)55 b(shades)38
b(no)r(des)h(represen)n(t)2040 4590 y(the)30 b(v)n(eri\014cation)f(ob)5
b(ject)30 b(for)g(leaf)e(v)-5 b(alue)29 b(5.)2040 4768
y Fr(3.1)99 b(A)-5 b(uthentic)27 b(Third)f(P)o(arty)f(Data)f
(Publication)2040 4860 y Fq(In)29 b([6])i(and)e(sev)n(eral)i(related)f
(publications,)i(Dev)l(an)n(bu,)d(et)h(al.)47 b(fo-)2040
4947 y(cus)28 b(on)g(Third-P)n(art)n(y)g(Publication.)42
b(W)-6 b(e)28 b(refer)h(to)f(this)g(approac)n(h)2040
5034 y(as)40 b(the)f(Authen)n(ticated)g(Data)h(Structures)f(\(or)g
Fn(AuthDS)p Fq(\))h(ap-)2040 5121 y(proac)n(h.)47 b(In)28
b(this)i(setting,)i(the)d(\(trusted\))g(data)g(o)n(wner)h(pro)r(duces)
2040 5208 y(in)n(tegrit)n(y-critical)i(con)n(ten)n(t)e(whic)n(h)h(is)h
(then)e(published)h(b)n(y)e(third-)2040 5295 y(part)n(y)j(service)i
(pro)n(viders)e(in)h(order)g(to)g(widely)g(disseminate)h(the)2040
5383 y(con)n(ten)n(t.)43 b(The)29 b(notable)h(con)n(tributions)f(of)g
(this)g(w)n(ork)g(are)g(as)h(fol-)2040 5470 y(lo)n(ws:)i(\(1\))17
b(It)g(demonstrates)h(ho)n(w)g(to)g(construct)f(e\016cien)n(t)g(and)h
(com-)2040 5557 y(pact)39 b(v)n(eri\014cation)h(ob)t(jects)h(if)f(a)g
(pre-computed)e(authen)n(ticated)2040 5644 y(data)29
b(structure)e(for)i(that)f(t)n(yp)r(e)g(of)h(query)e(exists.)42
b(The)29 b(terms)f Fp(ef-)2040 5731 y(\014cient)j(and)f(c)l(omp)l(act)g
Fq(generally)f(mean)f(logarithmic)i(complexit)n(y)2040
5818 y(in)25 b(terms)h(of)f(the)g(database)h(size.)35
b(\(2\))26 b(Instead)e(of)i(using)g(standard)2040 5906
y(MHTs)18 b(\(whic)n(h)g(are)g(relativ)n(ely)g(ine\016cien)n(t)g
(binary)f(searc)n(h)h(trees\))g(as)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop -152 319 a Fq(authen)n(ticated)29
b(dictionaries,)j(balanced)e(and)f(I/O)g(e\016cien)n(t)h(data)-152
407 y(structures,)c(suc)n(h)f(as)i(B-trees,)f(are)g(used.)-152
581 y Fn(Discussion:)32 b Fq(One)22 b(limitation)j(of)f(the)e(AuthDS)f
(approac)n(h)j(is)f(the)-152 668 y(need)e(to)g(pre-compute)f(and)h
(store)h(a)f(p)r(oten)n(tially)h(large)g(n)n(um)n(b)r(er)e(of)-152
755 y(authen)n(ticated)25 b(data)g(structures,)g(in)f(order)h(to)g
(e\016cien)n(tly)g(answ)n(er)-152 842 y(queries.)33 b(Without)18
b(pre-computed)g(trees,)j(the)e(AuthDS)e(approac)n(h)-152
930 y(cannot)i(pro)n(vide)g(small)h(v)n(eri\014cation)f(ob)t(jects.)34
b(More)20 b(imp)r(ortan)n(tly)-6 b(,)-152 1017 y(without)28
b(pre-computed)e(trees)i(for)g(eac)n(h)g(sort-order,)g(it)g(b)r(ecomes)
-152 1104 y(imp)r(ossible)k(to)f(pro)n(v)n(e)f(completeness)h(of)g
(query)e(replies.)50 b(F)-6 b(or)31 b(ex-)-152 1191 y(ample,)39
b(to)c(supp)r(ort)g(simple)h(range)g(queries)f(in)n(v)n(olving)g(a)h
(single)-152 1278 y(attribute,)31 b(pre-computed)e(hash)h(trees)h(for)f
(all)h(p)r(ossible)g(sort)g(or-)-152 1365 y(ders)e(of)h(the)e(relation)
i(m)n(ust)e(b)r(e)h(pre-computed.)42 b(This)30 b(results)f(in)-152
1453 y(signi\014can)n(t)f(setup)e(costs)i(for)f(the)g(o)n(wner)g(and)f
(high)h(storage)h(o)n(v)n(er-)-152 1540 y(head)21 b(for)g(the)f(serv)n
(er.)33 b(Also,)23 b(storing)e(m)n(ultiple)g(trees)g(for)h(the)e(same)
-152 1627 y(relation)27 b(increases)g(the)e(cost)i(of)f(up)r(dates.)
-152 1862 y Fr(3.2)99 b(A)-5 b(uthenticating)15 b(Query)g(Results)g(in)
g(Edge)g(Com\255)72 1979 y(puting)-152 2070 y Fq(P)n(ang,)26
b(et)f(al.)35 b([18])26 b(fo)r(cused)g(on)f(authen)n(tication)g(in)g
(edge)h(comput-)-152 2157 y(ing)35 b(applications.)63
b(\(W)-6 b(e)34 b(refer)i(to)f(this)f(w)n(ork)h(as)h(the)e
Fn(VB-tree)-152 2244 y(approac)n(h)p Fq(\).)k(In)26 b(it,)h(a)g
(trusted)f(cen)n(tral)h(serv)n(er)f(outsources)i(parts)-152
2332 y(of)f(the)e(database)h(to)g(pro)n(xy)f(serv)n(ers)h(situated)g
(at)f(the)h(edge)g(of)g(the)-152 2419 y(net)n(w)n(ork.)32
b(The)20 b(data)f(structure)g(used)g(here)g(is)h(a)f(VB-tree,)i(whic)n
(h)e(is)-152 2506 y(basically)24 b(a)f(mo)r(di\014ed)f(MHT)h(and)f(is)h
(built)f(using)h(a)g(B-T)-6 b(ree)22 b(where)-152 2593
y({)k(instead)h(of)f(signing)h(only)f(the)f(ro)r(ot)i({)f(all)h(leaf)g
(no)r(des)f(as)g(w)n(ell)h(as)-152 2680 y(all)32 b(in)n(ternal)f(no)r
(des)f(are)h(also)h(signed.)50 b(As)30 b(a)h(result,)h(v)n
(eri\014cation)-152 2767 y(ob)t(jects)21 b(are)g(indep)r(enden)n(t)d
(of)j(the)f(database)g(size)h(and)f(hence,)h(\\p)r(o-)-152
2855 y(ten)n(tially")32 b(m)n(uc)n(h)e(smaller.)52 b(In)31
b(comparison,)j(the)c(most)i(e\016cien)n(t)-152 2942
y(V)n(O)24 b(using)h(the)f(Dev)l(an)n(bu,)f(et)i(al.)34
b(approac)n(h)25 b([6])h(is)f(logarithmic)h(in)-152 3029
y(the)g(size)g(of)h(the)e(en)n(tire)h(database.)-152
3203 y Fn(Discussion:)k Fq(The)20 b(VB-tree)e(approac)n(h)i(only)f(pro)
n(vides)g(a)h(pro)r(of)g(of)-152 3290 y(correctness.)40
b(It)27 b(do)r(es)h(not)f(address)g(the)g(completeness)h(problem.)-152
3378 y(Also,)36 b(since)e(a)g(single)g(VB-tree)f(is)h(used,)h(there)e
(is)h(no)f(easy)h(w)n(a)n(y)-152 3465 y(to)c(extend)f(this)h(sc)n(heme)
g(to)g(pro)n(vide)g(completeness)h(guaran)n(tees.)-152
3552 y(The)23 b(prop)r(osed)h(sc)n(heme)f(replaces)h(a)f(con)n(v)n(en)n
(tional)g(cryptographic)-152 3639 y(hash)g(function)h(used)e(to)i
(compute)f(the)f(digests)i(of)g(individual)f(v)l(al-)-152
3726 y(ues)28 b(in)g(a)h(MHT)f(with)h(a)f(computationally)h(more)g(exp)
r(ensiv)n(e,)f(ho-)-152 3813 y(momorphic)33 b(function)g(whic)n(h)f
(essen)n(tially)i(computes)e(a)h(discrete)-152 3901 y(exp)r(onen)n
(tiation)j(in)g(a)g(\014nite)f(\014eld.)65 b(This)36
b(function)g(is)g(insecure)-152 3988 y(and)26 b(can)f(lead)i(to)e
(forgery)i(attac)n(ks)f(as)g(sho)n(wn)g(b)r(elo)n(w:)-152
4075 y(The)g(digest)h(is)f(computed)f(as)h Fm(h)p Fq(\()p
Fm(x)p Fq(\))21 b(=)g Fm(g)1044 4043 y Fl(x)1134 4075
y Fq(mo)r(d)k Fm(q)s Fq(.)35 b(The)26 b(mo)r(dulus)-152
4162 y Fm(q)37 b Fq(is)e(c)n(hosen)f(as)g Fm(q)39 b Fq(=)34
b(2)566 4130 y Fl(r)635 4162 y Fq(for)h(some)g(random)f
Fm(r)r Fq(.)59 b(This)35 b(c)n(hoice)f(is)-152 4249 y(insecure)d(b)r
(ecause)g(computing)f(discrete)h(logs)h(in)e(m)n(ultiplicativ)n(e,)-152
4336 y(algebraic)25 b(groups)e(\(th)n(us)f(rev)n(ersing)h(the)g
(function)g Fm(h)p Fq(\))g(is)g(kno)n(wn)g(to)-152 4424
y(b)r(e)k(hard)g(if)h Fm(q)i Fq(is)e(a)g(large)g(prime)f(of)i(at)e
(least)h(512)g(bits.)40 b(If)27 b Fm(q)s Fq(,)h(ho)n(w-)-152
4511 y(ev)n(er,)c(is)h(a)f(comp)r(osite)h(in)n(teger,)g(then)e(the)g
(problem)h(of)h(computing)-152 4598 y(discrete)k(logarithms)g(is)g(p)r
(olynomially)f(reducible)g(to)g(the)g(com)n(bi-)-152
4685 y(nation)i(of)g(in)n(teger)g(factorization)i(of)e
Fm(q)j Fq(and)c(computing)g(discrete)-152 4772 y(logarithms)j(in)f
Fj(Z)378 4741 y Fk(\003)378 4786 y Fl(p)444 4772 y Fq(for)h(eac)n(h)e
(prime)h(factor)h Fm(p)e Fq(of)h Fm(q)s Fq(.)49 b(No)n(w)31
b(in)f(the)-152 4860 y(curren)n(t)c(con)n(text,)f(since)i
Fm(q)h Fq(is)f(c)n(hosen)f(as)g(2)1117 4828 y Fl(r)1178
4860 y Fq(\(with)g(a)g(small)i(prime)-152 4947 y(factor)k(2\),)g
Fm(h)p Fq(\(\))e(can)g(b)r(e)g(rev)n(ersed)g(e\016cien)n(tly)g(whic)n
(h)h(can)f(lead)h(to)-152 5034 y(forgery)g(attac)n(ks.)48
b(W)-6 b(e)29 b(refer)i(the)e(in)n(terested)h(readers)h(to)f([13])h
(for)-152 5121 y(details)c(on)f(solving)g(discrete-logarithm)h
(problems.)-152 5295 y(Also,)d(the)e(exp)r(erimen)n(tal)h(analysis)g
(of)h([18])f(assumes)h(that)e(the)g(size)-152 5383 y(of)34
b(a)e(signed)h(digest)g(is)g(16)g(b)n(ytes.)54 b(It)32
b(demonstrates)h(that,)i(with)-152 5470 y(this)h(o)n(v)n(erhead,)i
(although)d(the)g(VB-tree)g(fan-out)h(is)g(small,)j(the)-152
5557 y(o)n(v)n(erall)24 b(approac)n(h)e(is)h(e\016cien)n(t)g(in)f
(terms)h(of)g(storage)h(and)e(V)n(O)g(size.)-152 5644
y(Ho)n(w)n(ev)n(er,)36 b(a)f(16-b)n(yte)e(signed)h(digest)h(is)f
Fn(insecure)p Fq(,)i(since)e(there)-152 5731 y(is)25
b(no)e(cryptographically)i(strong)f(digital)i(signature)e(sc)n(heme)g
(that)-152 5818 y(pro)r(duces)30 b(signatures)h(of)g(only)f(16)h(b)n
(ytes)e(in)h(size.)48 b(F)-6 b(or)30 b(example,)-152
5906 y(RSA,)g(whic)n(h)h(is)h(the)e(most)i(w)n(ell-kno)n(wn)f
(signature)h(sc)n(heme,)g(has)2040 319 y(a)g(signature)g(size)h(of)f
(at)g(least)h(128)f(b)n(ytes)f(\(1024)i(bits\).)3776
288 y Fo(2)3862 319 y Fq(If)f(w)n(e)2040 407 y(rep)r(eat)20
b(the)f(calculations)i(with)e(a)h(digest)g(size)g(of)g(128)g(b)n(ytes)f
(and)g(re-)2040 494 y(compute)27 b(storage)h(o)n(v)n(erheads,)g(the)e
(VB-tree)h(approac)n(h)g(b)r(ecomes)2040 581 y(quite)e(exp)r(ensiv)n(e)
g(in)h(terms)g(of)g(b)r(oth)g(computation)g(and)f(storage.)2040
755 y(F)-6 b(urthermore,)39 b(VB-tree)e(approac)n(h)g(can)f(b)r(e)h(v)n
(ery)f(exp)r(ensiv)n(e)g(in)2040 842 y(terms)i(of)g(V)n(O)e(v)n
(eri\014cation)h(time)h(for)g(queriers,)i(esp)r(ecially)-6
b(,)42 b(for)2040 930 y(pro)t(jection)34 b(queries.)57
b(This)34 b(is)f(b)r(ecause)h(the)e(v)n(eri\014cation)i(ob)t(ject)2040
1017 y(includes)23 b(signed)f(digests)h(for)h(all)f(the)f(attributes)g
(that)g(are)h(\014ltered)2040 1104 y(out)h(as)g(w)n(ell)h(as)g(all)g
(the)e(tuples)h(that)g(do)g(not)f(b)r(elong)i(to)f(the)g(query)2040
1191 y(result)h(set)f(but)f(do)i(fall)g(inside)g(the)f(en)n(v)n
(eloping)g(tree)3620 1159 y Fo(3)3679 1191 y Fq(for)h(a)g(giv)n(en)2040
1278 y(query)-6 b(.)31 b(In)18 b(order)g(to)h(authen)n(ticate)g(the)f
(query)f(results,)k(the)d(sc)n(heme)2040 1365 y(requires)29
b(the)f(querier)g(to)h(v)n(erify)g(the)f(signatures)h(of)h(all)f(these)
g(\014l-)2040 1453 y(tered)h(attributes)g(and)g(tuples)g(that)f(are)i
(not)f(part)f(of)i(the)f(actual)2040 1540 y(result)j(set.)56
b(Clearly)-6 b(,)36 b(receiving)e(\(recall)g(that)e(a)h(signature)h(is)
f(at)2040 1627 y(least)28 b(128)g(b)n(ytes)e(long\))i(and)f(v)n
(erifying)g(\(a)g(single)h(RSA)e(signature)2040 1714
y(v)n(eri\014cation)37 b(tak)n(es)f(0.16)i(msec)f(on)f(P3-977)i(MHz)e
(mac)n(hine\))h(all)2040 1801 y(these)27 b(signatures)i(can)e(b)r(e)g
(computationally)h(v)n(ery)e(exp)r(ensiv)n(e)h(for)2040
1888 y(the)e(querier.)2040 2063 y(Finally)-6 b(,)40 b(VB-tree)d
(approac)n(h)f(builds)h(a)g(single)h(B-tree)f(for)g(eac)n(h)2040
2150 y(table)22 b(\(whic)n(h)g(is)h(computed)e(on)h(the)f(sorted)h
(order)g(of)h(the)f(primary)2040 2237 y(k)n(ey)i(of)i(that)e(table\).)
35 b(If)25 b(the)g(query)e(predicate)j(requires)f(searc)n(hing)2040
2324 y(on)34 b(a)g(non-k)n(ey)f(attribute,)j(then)d(the)h(result)g(set)
h(is)f(no)g(longer)h(a)2040 2411 y(set)d(of)g(con)n(tiguous)g(tuples.)
53 b(This)32 b(translates)h(to)e(an)h(increase)h(in)2040
2499 y(the)j(heigh)n(t)g(of)h(the)f(en)n(v)n(eloping)g(tree)g(\(with)h
(w)n(orst)g(case)g(heigh)n(t)2040 2586 y(b)r(eing)g(equal)f(to)h(the)f
(heigh)n(t)g(of)h(the)f(VB-tree)h(itself)6 b(\))37 b(whic)n(h)g(in)2040
2673 y(turn)26 b(results)h(in)g(extremely)f(high)h(bandwidth)f(and)g
(computation)2040 2760 y(o)n(v)n(erheads.)33 b(Recall)20
b(that)g(the)f(V)n(O)g(v)n(eri\014cation)i(in)n(v)n(olv)n(es)e(v)n
(erifying)2040 2847 y(the)g(signatures)h(of)g(all)g(the)f(tuples)g
(that)g(are)g(not)g(part)g(of)h(the)f(actual)2040 2935
y(result)26 b(set)g(but)f(do)g(fall)j(inside)e(the)f(en)n(v)n(eloping)g
(tree.)2040 3162 y Fr(4.)99 b(DIGIT)-9 b(AL)30 b(SIGN)n(A)-9
b(TURE)30 b(A)-5 b(GGREGA)c(TION)2214 3278 y(AND)25 b(CHAINING)e(\(DSA)
-5 b(C\))2040 3369 y Fq(The)29 b(main)g(disadv)l(an)n(tage)g(of)h(the)e
(aforemen)n(tioned)i(AuthDS)d(ap-)2040 3456 y(proac)n(h)37
b(is)g(high)g(o)n(v)n(erhead)g(asso)r(ciated)i(with)e(building,)j
(storing)2040 3543 y(and)33 b(up)r(dating)g(complex)g(index)g
(structures.)57 b(W)-6 b(e)33 b(no)n(w)h(prop)r(ose)2040
3631 y(an)24 b(alternativ)n(e)g(approac)n(h)g(that)g(is)g(secure)g(and)
g(e\016cien)n(t)f(for)i(most)2040 3718 y(base-lev)n(el)18
b(queries,)h(without)e(requiring)g(an)n(y)g(complex)g(data)h(struc-)
2040 3805 y(tures.)61 b(W)-6 b(e)34 b(refer)i(to)e(our)h(approac)n(h)f
(as)i(the)e(Digital)h(Signature)2040 3892 y(Aggregation)27
b(and)f(Chaining)g(-)f Fn(DSA)n(C)p Fq(.)2040 4066 y(A)g(natural)g(and)
g(na)-9 b(\177)-30 b(\020v)n(e)26 b(alternativ)n(e)g(to)g(AuthDS)d(is)j
(to)f(use)g(digital)2040 4154 y(signatures)h(at)g(the)e(gran)n(ularit)n
(y)i(of)g(individual)f(tuples.)34 b(The)25 b(data)2040
4241 y(o)n(wner)33 b(signs)h(eac)n(h)e(tuple)g(b)r(efore)i(storing)f
(it)g(in)f(the)g(outsourced)2040 4328 y(database)k(at)e(the)h
(publisher/serv)n(er's)g(site.)62 b(The)35 b(serv)n(er)g(stores)2040
4415 y(the)26 b(tuple)h(signature)g(along)h(with)f(eac)n(h)g(tuple.)38
b(In)26 b(resp)r(onse)h(to)g(a)2040 4502 y(query)-6 b(,)21
b(the)f(serv)n(er)h(simply)f(sends)h(the)g(matc)n(hing)g(tuples)f(and)h
(their)2040 4590 y(signatures)27 b(to)f(pro)n(v)n(e)f(in)n(tegrit)n(y)g
(and)h(authen)n(ticit)n(y)e(of)j(the)e(result.)2040 4764
y(Although)38 b(this)g(na)-9 b(\177)-30 b(\020v)n(e)39
b(solution)g(pro)n(vides)f(a)h(pro)r(of)g(of)g(correct-)2040
4851 y(ness,)31 b(it)e(has)h(some)g(dra)n(wbac)n(ks:)42
b(\014rst)29 b(and)g(foremost,)k(the)c(resul-)2040 4938
y(tan)n(t)k(V)n(O)f(\(whic)n(h)i(comprises)g(a)g(set)f(of)h(signatures)
g(corresp)r(ond-)2040 5025 y(ing)i(to)f(eac)n(h)g(tuple)g(in)g(the)g
(result)g(set\))g(is)h(neither)f(bandwidth-)2040 5113
y(nor)29 b(computation-e\016cien)n(t)f(for)h(the)f(querier.)43
b(Considering)30 b(that)2040 5200 y(a)37 b(query)f(reply)g(can)h(p)r
(oten)n(tially)g(con)n(tain)g(man)n(y)f(thousands)h(of)2040
5287 y(tuples,)25 b(sending/receiving)h(and)e(v)n(erifying)h
(individual)g(tuple)f(sig-)p 2040 5360 797 4 v 2044 5414
a Fo(2)2078 5446 y Fq(A)30 b(DSA)e(signature)j(is)f(at)g(least)h(40)f
(b)n(ytes)f(\(320)i(bits\))f(long,)h(but)2040 5520 y(v)n(eri\014cation)
j(of)g(a)g(DSA)f(signature)h(is)g(more)g(exp)r(ensiv)n(e)f(compu-)2040
5595 y(tationally)41 b(\(It)d(tak)n(es)i(0.16)g(msec)g(to)g(v)n(erify)f
(a)h(RSA)e(signature)2040 5670 y(whereas)d(it)e(tak)n(es)h(8.52)g
(msecs)h(to)e(v)n(erify)g(a)h(DSA)e(signature)j(on)2040
5745 y(a)26 b(P3-977)h(MHz)f(mac)n(hine\).)2044 5799
y Fo(3)2078 5831 y Fq(The)e(en)n(v)n(eloping)g(tree)g(is)g(the)f
(smallest)i(subtree)f(within)g(the)f(VB-)2040 5906 y(tree)j(that)f(en)n
(v)n(elops)h(all)g(the)g(result)g(tuples)f(of)i(the)e(query)p
eop end
%%Page: 4 4
TeXDict begin 4 3 bop -152 319 a Fq(natures)26 b(can)f(b)r(e)g
(prohibitiv)n(ely)g(exp)r(ensiv)n(e)g(for)h(the)f(querier.)34
b(F)-6 b(ur-)-152 407 y(ther,)22 b(there)f(is)g(no)g(easy)g(w)n(a)n(y)g
(to)g(pro)n(vide)g(a)g(pro)r(of)h(of)g(completeness)-152
494 y(either.)-152 668 y(In)31 b(the)h(remainder)g(of)g(this)g
(section,)i(w)n(e)e(dev)n(elop)g(mo)r(di\014cations)-152
755 y(and)27 b(enhancemen)n(ts)f(that)h(address)g(the)f(dra)n(wbac)n
(ks)h(of)h(the)e(na)-9 b(\177)-30 b(\020v)n(e)-152 842
y(strategy)26 b(describ)r(ed)g(ab)r(o)n(v)n(e.)-152 1017
y Fn(REMARK:)p -152 1030 435 4 v 29 w Fq(If)j(the)f(outsourced)h(data)g
(is)h Fp(static)k Fq(or)29 b Fp(ar)l(chival)h Fq(in)-152
1104 y(nature,)21 b(correctness)g(and)f(completeness)h(can)f(b)r(e)g
(pro)n(vided)f(easily)-6 b(,)-152 1191 y(as)36 b(describ)r(ed)f(in)g
(App)r(endix)f(A.)62 b(Ho)n(w)n(ev)n(er,)38 b(in)d(this)h(pap)r(er,)h
(w)n(e)-152 1278 y(fo)r(cus)22 b(on)f(the)g(more)h(general)g(\(and)e(c)
n(hallenging\))i(case)g(of)g(dynamic)-152 1365 y(databases.)-152
1579 y Fr(4.1)99 b(Corr)n(ectness)-152 1671 y Fq(The)29
b(ideal)g(V)n(O)f(for)h(pro)n(viding)f(correctness)i(w)n(ould)e(in)n(v)
n(olv)n(e)g(min-)-152 1758 y(imal)j(querier)e(computation)h(o)n(v)n
(erhead)f(and)g(constan)n(t)g(\(in)g(terms)-152 1845
y(of)h(in)n(tegrit)n(y)e(information\))i(querier)e(bandwidth)g(o)n(v)n
(erhead.)43 b(The)-152 1932 y(w)n(ork)38 b(in)f([15])h(prop)r(osed)g(t)
n(w)n(o)f(signature)h(sc)n(hemes)g(that)e(enable)-152
2019 y(suc)n(h)18 b(ideal)h(\(or)g(near-ideal\))g(solutions.)33
b(These)19 b(signature)g(sc)n(hemes)-152 2106 y(allo)n(w)k(us)d(to)h
(aggregate)i(m)n(ultiple)e(individual)f(signatures)i(in)n(to)f(one)-152
2194 y Fp(uni\014e)l(d)37 b Fq(signature,)31 b(v)n(erifying)f(whic)n(h)
f(is)g Fp(e)l(quivalent)37 b Fq(to)30 b(v)n(erifying)-152
2281 y(ALL)17 b(individual)g(comp)r(onen)n(t)g(signatures.)33
b(The)18 b(size)g(of)g(the)f(aggre-)-152 2368 y(gated)j(signature)h
(equals)f(that)f(of)i(a)f(single)h(plain)f(digital)h(signature)-152
2455 y(\(whic)n(h)28 b(is)h(constan)n(t\),)f(irresp)r(ectiv)n(e)h(of)g
(either)f(the)f(database)i(size)-152 2542 y(or)24 b(the)f(query)f
(reply)h(size.)35 b(In)23 b(the)g(ODB)g(mo)r(del,)i(when)e(the)g(serv)n
(er)-152 2630 y(receiv)n(es)29 b(a)f(query)-6 b(,)28
b(it)g(executes)f(the)h(query)f(to)h(obtain)g(the)g(tuples)-152
2717 y(matc)n(hing)c(the)f(query)g(predicate)g(as)i(w)n(ell)f(as)g
(their)g(corresp)r(onding)-152 2804 y(signatures.)35
b(The)23 b(serv)n(er)g(securely)h(\\com)n(bines")g(these)f(individual)
-152 2891 y(signatures)d(to)f(obtain)h(an)f(aggregated)h(signature)g
(and)f(returns)f(the)-152 2978 y(result)25 b(set)f(comprising)h(of)g
(the)f(tuples)g(as)g(w)n(ell)i(as)e(the)g(aggregated)-152
3065 y(signature.)35 b(When)23 b(the)h(querier)g(receiv)n(es)h(the)e
(set)i(of)g(tuples)f(along)-152 3153 y(with)i(the)g(aggregated)h
(signature)f(it)g(simply)g(v)n(eri\014es)g(the)f(latter.)-152
3327 y(The)18 b(\014rst)f(signature)g(sc)n(heme)h(prop)r(osed)f(in)g
([15])i(is)f(the)e(Condensed-)-152 3414 y(RSA)37 b(signature)h(sc)n
(heme.)71 b(Condensed-RSA)36 b(is)j(based)e(on)h(the)-152
3501 y(w)n(ell-kno)n(wn)30 b(RSA)d(public)i(k)n(ey)f(signature)i(sc)n
(heme.)45 b(Condensed-)-152 3588 y(RSA)21 b(allo)n(ws)j(aggregation)g
(of)f(a)f(single)h(signer's)h(signatures)f(whic)n(h)-152
3676 y(is)31 b(p)r(ossible)g(due)e(to)i(the)e(fact)i(that)f(RSA)e(is)j
Fp(multiplic)l(atively)g(ho-)-152 3763 y(momorphic)p
Fq(.)62 b(The)35 b(second)g(is)h(the)e(Aggregated-BGLS)i(sc)n(heme)-152
3850 y(whic)n(h)28 b(allo)n(ws)h(signatures)f(pro)r(duced)f(b)n(y)f(m)n
(ultiple)h(signers)h(to)g(b)r(e)-152 3937 y(aggregated)36
b(in)n(to)f(a)f(single)i(quan)n(tit)n(y)-6 b(.)58 b(The)35
b(Aggregated-BGLS)-152 4024 y(sc)n(heme)22 b(is)h(due)e(to)h(Boneh,)h
(et)f(al.[5])i(and)e(is)g Fp(additively)j(homomor-)-152
4111 y(phic)p Fq(.)34 b(The)25 b(tec)n(hnical)f(details)h(of)g(the)f(t)
n(w)n(o)g(signature)h(sc)n(hemes)f(\(as)-152 4199 y(w)n(ell)e(as)g(a)f
(discussion)h(of)g(their)f(abilit)n(y)g(to)g(pro)n(vide)f(e\016cien)n
(t)h(pro)r(ofs)-152 4286 y(of)27 b(correctness\))f(can)g(b)r(e)g(found)
f(in)h(App)r(endix)e(B.)-152 4500 y Fr(4.2)99 b(Completeness)-152
4591 y Fq(Both)30 b(signature)h(sc)n(hemes)f(in)g([15])h(o\013er)f
(e\016cien)n(t)g(pro)r(ofs)h(of)g(cor-)-152 4678 y(rectness,)23
b(ho)n(w)n(ev)n(er,)f(they)d(pro)n(vide)h(no)h(completeness)h(guaran)n
(tees.)-152 4765 y(In)f(this)g(section,)i(w)n(e)f(prop)r(ose)g(some)g
(extensions)f(to)h(ac)n(hiev)n(e)f(query)-152 4853 y(completeness.)38
b(T)-6 b(o)27 b(ac)n(hiev)n(e)g(this)f(goal,)j(w)n(e)d(prop)r(ose)i
(secure)e(link-)-152 4940 y(ing)37 b(of)h(tuple-lev)n(el)e(signatures)i
(to)f(form)g(a)g(so-called)h Fp(signatur)l(e)-152 5027
y(chain)p Fq(.)j(In)27 b(order)h(to)g(construct)g(the)f(signature)h(c)n
(hains,)h(w)n(e)f(mo)r(d-)-152 5114 y(ify)23 b(the)f(tuple)g(signature)
h(generation)g(algorithm)h(in)e(the)g(follo)n(wing)-152
5201 y(w)n(a)n(y:)-69 5443 y Fi(Definition)41 b Fq(1.)d
Fp(Signatur)l(e)29 b(of)e(a)h(tuple)g Fm(r)h Fp(is)e(c)l(ompute)l(d)i
(as:)4 5587 y Fm(S)t(ig)s(n)p Fq(\()p Fm(r)r Fq(\))21
b(=)g Fm(h)p Fq(\()p Fm(h)p Fq(\()p Fm(r)r Fq(\))p Ft(jj)p
Fm(h)p Fq(\()p Fm(I)6 b(P)11 b(R)855 5595 y Fo(1)890
5587 y Fq(\()p Fm(r)r Fq(\)\))p Ft(jj)i Fm(:)g(:)g(:)g(h)p
Fq(\()p Fm(I)6 b(P)11 b(R)1406 5596 y Fl(l)1430 5587
y Fq(\()p Fm(r)r Fq(\)\)\))1587 5595 y Fl(S)s(K)-152
5731 y Fp(wher)l(e)31 b Fm(h)p Fq(\(\))f Fp(is)f(a)h(crypto)l(gr)l
(aphic)j(hash)d(function)g(such)h(as)f(SHA,)f Ft(jj)-152
5818 y Fp(denotes)k(c)l(onc)l(atenation,)h Fm(I)6 b(P)11
b(R)800 5826 y Fl(i)856 5818 y Fp(denotes)33 b(the)e(imme)l(diate)g(pr)
l(e)l(de-)-152 5906 y(c)l(essor)26 b(tuple)f(along)g(dimension)f
Fm(i)p Fp(,)g Fm(l)i Fp(is)e(the)h(numb)l(er)g(of)f(se)l(ar)l(chable)
2040 319 y(dimensions)35 b(of)f(that)i(r)l(elation)g(and)f
Fm(S)t(K)40 b Fp(is)34 b(the)i(private)f(signing)2040
407 y(key)28 b(of)g(the)g(data)g(owner.)2040 657 y Fq(The)d(immediate)g
(predecessors)h(of)f(a)g(tuple)f(are)h(computed)f(as)h(fol-)2040
745 y(lo)n(ws:)65 b(\(1\))40 b(Sort)f(the)h(tuples)g(in)g(increasing)h
(order)f(along)h(eac)n(h)2040 832 y(searc)n(hable)29
b(dimension)f(\(i.e.,)i(according)f(to)f(the)f(attribute)h(v)l(alue)
2040 919 y(for)d(eac)n(h)g(searc)n(hable)g(attribute\);)g(\(2\))g(The)f
(immediate)i(predeces-)2040 1006 y(sor)g(of)h(a)f(giv)n(en)g(tuple)f
(along)i(a)f(giv)n(en)f(dimension)i(is)f(a)g(tuple)f(with)2040
1093 y(the)37 b(highest)h(v)l(alue)f(for)h(that)f(attribute)h(that)f
(is)h(less)g(than)f(the)2040 1180 y(v)l(alue)c(of)h(the)g(giv)n(en)f
(tuple)g(\(highest)g(lo)n(w)n(er)i(b)r(ound\))d(along)j(that)2040
1268 y(attribute.)2360 1236 y Fo(4)2429 1268 y Fq(Th)n(us,)25
b(eac)n(h)g(tuple)f(has)h(as)h(man)n(y)e(immediate)h(prede-)2040
1355 y(cessors)32 b(as)f(there)f(are)h(searc)n(hable)h(attributes)e
(\(dimensions\).)49 b(In)2040 1442 y(other)23 b(w)n(ords,)h(eac)n(h)e
(tuple)g(has)h Fm(l)g Fp(Imme)l(diate)i(Pr)l(e)l(de)l(c)l(essors)32
b Fq(where)2040 1529 y Fm(l)20 b Fq(is)e(the)g(n)n(um)n(b)r(er)g(of)h
(searc)n(hable)g(dimensions)g(along)h(whic)n(h)e(a)h(query)2040
1616 y(can)26 b(b)r(e)f(issued.)2040 1791 y(Th)n(us)i(in)g(order)g(to)g
(pro)n(vide)g(completeness,)h(a)g(tuple)e(signature)i(is)2040
1878 y(computed)j(b)n(y)f(including)h(the)g(hashes)g(of)h(all)g
(immediate)g(prede-)2040 1965 y(cessor)h(tuples,)h(thereb)n(y)d
(explicitly)h(c)n(haining)g(\(linking\))g(the)f(sig-)2040
2052 y(natures.)72 b(W)-6 b(e)38 b(illustrate)h(this)f(with)h(an)f
(example)g(in)g(\014gure)g(2.)2040 2139 y(Supp)r(ose)28
b(that)h(there)f(are)i(three)e(searc)n(hable)i(dimensions.)45
b(First,)2040 2227 y(the)27 b(tuples)f(are)i(sorted)f(along)h(eac)n(h)f
(dimension.)39 b(Consider)28 b(tuple)2040 2314 y Fm(R)2098
2322 y Fo(5)2133 2314 y Fq(.)38 b(According)27 b(to)g(the)f(\014gure,)i
(the)e(immediate)i(predecessors)g(of)2040 2401 y Fm(R)2098
2409 y Fo(5)2157 2401 y Fq(along)d(dimensions)f Fm(A)2809
2409 y Fo(1)2843 2401 y Fm(;)13 b(A)2935 2409 y Fo(2)2993
2401 y Fq(and)24 b Fm(A)3199 2409 y Fo(3)3257 2401 y
Fq(are:)34 b Fm(R)3472 2409 y Fo(6)3507 2401 y Fm(;)13
b(R)3599 2409 y Fo(2)3657 2401 y Fq(and)24 b Fm(R)3863
2409 y Fo(7)3897 2401 y Fq(,)h(re-)2040 2488 y(sp)r(ectiv)n(ely)-6
b(.)34 b(No)n(w,)26 b(compute)g(the)f(signature)i(of)f
Fm(R)3537 2496 y Fo(5)3597 2488 y Fq(as:)3686 2456 y
Fo(5)2040 2575 y Fm(S)t(ig)s(n)p Fq(\()p Fm(R)2291 2583
y Fo(5)2326 2575 y Fq(\))21 b(=)g Fm(h)p Fq(\()p Fm(h)p
Fq(\()p Fm(R)2664 2583 y Fo(5)2699 2575 y Fq(\))p Ft(jj)p
Fm(h)p Fq(\()p Fm(R)2903 2583 y Fo(6)2938 2575 y Fq(\))p
Ft(jj)p Fm(h)p Fq(\()p Fm(R)3142 2583 y Fo(2)3178 2575
y Fq(\))p Ft(jj)p Fm(h)p Fq(\()p Fm(R)3382 2583 y Fo(7)3417
2575 y Fq(\)\))3477 2583 y Fl(S)s(K)2136 3325 y @beginspecial
162 @llx 603 @lly 402 @urx 686 @ury 2160 @rwi @setspecial
%%BeginDocument: sigchain.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 162 603 402 686
%%Title: sigchain
%%CreationDate: Mon Feb 21 01:15:25 2005
%%Creator: Tgif-4.1.42-QPL written by William Chia-Wei Cheng (bill.cheng@acm.org)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 53 dict def
tgifdict begin

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/TGEL % tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%Page: 1 1

%%PageBoundingBox: 162 603 402 686
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11.695 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% BOX
0 SG
GS
   10 SM
   GS
      NP 295 281 M 347 281 L 347 313 L 295 313 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 458 281 M 510 281 L 510 313 L 458 313 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 546 281 M 598 281 L 598 313 L 546 313 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 613 281 M 665 281 L 665 313 L 613 313 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 379 281 M 431 281 L 431 313 L 379 313 L CP
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 324 296 4 4 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 332 296 4 4 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      304 303 M
      GS
            0 SG
            /Symbol FF [24 0 0 -24 0 0] MS
            (-) SH
      GR
   GR

% OVAL
0 SG
GS
   GS
      NP 645 296 4 4 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 653 296 4 4 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      627 303 M
      GS
            0 SG
            /Symbol FF [24 0 0 -24 0 0] MS
            (+) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      394 304 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R6) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      472 305 M
      GS
            0.000 0.000 1.000 RG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R5) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      557 304 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R7) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      690 303 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (A1) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      348 298 M
      378 298 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      511 297 M
      546 297 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      432 299 M
      459 299 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      599 297 M
      614 297 L
   TGSM
   2 W
   S
   1 W
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 292 337 M 344 337 L 344 369 L 292 369 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 455 337 M 507 337 L 507 369 L 455 369 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 543 337 M 595 337 L 595 369 L 543 369 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 610 337 M 662 337 L 662 369 L 610 369 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 376 337 M 428 337 L 428 369 L 376 369 L CP
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 321 352 4 4 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 329 352 4 4 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      301 359 M
      GS
            0 SG
            /Symbol FF [24 0 0 -24 0 0] MS
            (-) SH
      GR
   GR

% OVAL
0 SG
GS
   GS
      NP 644 352 4 4 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 652 352 4 4 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      624 359 M
      GS
            0 SG
            /Symbol FF [24 0 0 -24 0 0] MS
            (+) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      391 360 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R2) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      470 361 M
      GS
            0.000 0.000 1.000 RG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R5) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      554 360 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R6) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      687 359 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (A2) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      345 354 M
      375 354 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      508 353 M
      543 353 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      429 355 M
      456 355 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      596 353 M
      611 353 L
   TGSM
   2 W
   S
   1 W
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 292 390 M 344 390 L 344 422 L 292 422 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 455 390 M 507 390 L 507 422 L 455 422 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 543 390 M 595 390 L 595 422 L 543 422 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 610 390 M 662 390 L 662 422 L 610 422 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 376 390 M 428 390 L 428 422 L 376 422 L CP
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 321 405 4 4 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 329 405 4 4 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      301 412 M
      GS
            0 SG
            /Symbol FF [24 0 0 -24 0 0] MS
            (-) SH
      GR
   GR

% OVAL
0 SG
GS
   GS
      NP 644 405 4 4 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 652 405 4 4 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      624 412 M
      GS
            0 SG
            /Symbol FF [24 0 0 -24 0 0] MS
            (+) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      391 413 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R7) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      470 414 M
      GS
            0.000 0.000 1.000 RG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R5) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      554 413 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R12) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      687 412 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (A3) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      345 407 M
      375 407 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      508 406 M
      543 406 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      429 408 M
      456 408 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      596 406 M
      611 406 L
   TGSM
   2 W
   S
   1 W
GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Mon Feb 21 01:15:25 2005
%%DocumentFonts: NewCenturySchlbk-Roman
%%+ Symbol
%%EOF

%%EndDocument
 @endspecial 2528 3499 a Fn(Figure)28 b(2:)40 b(Signature)30
b(Chain)2040 3625 y Fq(With)22 b(signatures)g(c)n(hained)g(in)g(the)f
(ab)r(o)n(v)n(e)h(fashion,)i(the)d(serv)n(er)h(an-)2040
3712 y(sw)n(ers)36 b(a)f(range)g(query)e(b)n(y)h(releasing)i(all)g
(matc)n(hing)f(tuples,)i(the)2040 3799 y Fp(b)l(oundary)31
b(tuples)k Fq(whic)n(h)28 b(are)g(just)g(b)r(ey)n(ond)f(the)h(query)e
(range)j(\(to)2040 3886 y(pro)n(vide)g(a)h(pro)r(of)h(of)g
(completeness\))f(as)g(w)n(ell)h(as)f(the)g(aggregated)2040
3973 y(signature)39 b(corresp)r(onding)g(to)f(the)f(result)h(set.)72
b(The)38 b(signature)2040 4061 y(c)n(hain)33 b(pro)n(v)n(es)g(to)h(the)
f(querier)g(that)g(the)g(serv)n(er)g(has)h(indeed)f(re-)2040
4148 y(turned)19 b(all)j(tuples)e(in)g(the)g(query)f(range.)33
b(Sp)r(eci\014cally)-6 b(,)22 b(the)e(querier)2040 4235
y(v)n(eri\014es)29 b(that)f(the)g(v)l(alues)h(in)g(the)f(b)r(oundary)g
(tuples)g(are)h(just)g(b)r(e-)2040 4322 y(y)n(ond)g(the)g(range)h(p)r
(osed)f(in)h(the)f(query)-6 b(.)44 b(A)n(t)29 b(the)g(same)h(time,)h
(the)2040 4409 y(querier)22 b(v)n(eri\014es)f(that)g(there)h(are)g(no)g
(other)f(tuples)h(in)f(b)r(et)n(w)n(een)h(the)2040 4496
y(b)r(oundary)f(tuples)h(and)f(the)h(immediately)g(adjacen)n(t)h
(tuples)f(whic)n(h)2040 4584 y(fall)32 b(within)e(the)g(query)f(range.)
48 b(This)31 b(is)g(b)r(ecause)g(the)e(b)r(oundary)2040
4671 y(v)l(alues)f(are)h(link)n(ed)e(to)h(the)g(\014rst)g(and)f(the)h
(last)h(tuple.)41 b(Therefore,)2040 4758 y(the)20 b(querier)g(obtains)h
(a)f(concise)h(pro)r(of)h(of)f(completeness)g(when)f(the)2040
4845 y(serv)n(er)26 b(releases)h(the)e(b)r(oundary)g(tuples)h(as)g
(de\014ned)f(ab)r(o)n(v)n(e.)2040 5020 y Fn(Empt)n(y)41
b(Pro)r(ofs:)56 b Fq(F)-6 b(or)36 b(range)g(\(or)g(exact)g(v)l(alue\))g
(queries)g(that)2040 5107 y(result)30 b(in)g(no)g(matc)n(hes,)i(the)e
(serv)n(er)g(comp)r(oses)h(an)f Fp(Empty)i(Pr)l(o)l(of)2040
5194 y Fq(b)n(y)g(returning)g(only)g(adjacen)n(t)h(b)r(oundary)e
(tuples)i(that)f(subsume)2040 5281 y(the)25 b(non-existen)n(t)g(v)l
(alue)g(or)h(range.)p 2040 5360 797 4 v 2044 5414 a Fo(4)2078
5446 y Fq(If)38 b(the)f(attribute)g(v)l(alues)g(of)h(t)n(w)n(o)g
(tuples)f(are)h(the)e(same,)42 b(it)37 b(is)2040 5520
y(necessary)23 b(to)g(use)f(an)h(additional)g(mec)n(hanism)g(\(for)g
(example:)34 b(use)2040 5595 y(the)25 b(tuple)h(id\))f(to)h(break)f
(the)h(tie.)2044 5650 y Fo(5)2078 5681 y Fq(The)33 b(signature)g(sc)n
(heme)f(here)h(can)f(b)r(e)g(either)g(condensed-RSA)2040
5756 y(or)23 b(aggregated-BGLS.)h(Therefore,)g(in)e(an)g(e\013ort)g(to)
h(k)n(eep)e(the)h(dis-)2040 5831 y(cussion)31 b(general,)i(w)n(e)d(do)h
(not)f(sp)r(ecify)h(the)e(details)j(of)f(the)e(SIGN)2040
5906 y(proto)r(col)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop -152 319 a Fr(5.)100 b(OPERA)-9
b(TION)n(AL)24 b(DET)-9 b(AILS)-152 411 y Fq(W)j(e)34
b(no)n(w)g(describ)r(e)g(the)f(o)n(v)n(erall)i(pro)r(cedure)f(for)g
(computing)g(au-)-152 498 y(then)n(tic)41 b(replies)g(to)g(queries)g
(that)g(guaran)n(tee)g(correctness)h(and)-152 585 y(completeness)33
b(using)e(our)h(approac)n(h)f(outlined)h(ab)r(o)n(v)n(e.)51
b(W)-6 b(e)31 b(\014rst)-152 672 y(consider)24 b(base)f(lev)n(el)h
(relational)g(queries)g(suc)n(h)e(as)i(selections,)h(pro-)-152
759 y(jections,)39 b(joins)e(and)e(set)g(op)r(erations.)64
b(W)-6 b(e)35 b(then)g(describ)r(e)g(ho)n(w)-152 847
y(to)27 b(handle)g(dynamic)f(outsourced)h(databases)h(that)e(in)n(v)n
(olv)n(e)g(addi-)-152 934 y(tional)h(up)r(date)e(op)r(erations,)i(suc)n
(h)f(as)g(tuple)f(inserts)h(and)g(deletes.)-152 1152
y Fr(5.1)99 b(Selection:)-152 1243 y Fq(A)35 b(selection)i(query)e
Fm(\033)531 1251 y Fl(C)582 1243 y Fq(\()p Fm(R)q Fq(\))g(is)h(denoted)
f(as)i(follo)n(ws:)56 b Fm(\033)1573 1251 y Fl(C)1625
1243 y Fq(\()p Fm(R)q Fq(\))37 b(=)-152 1330 y Ft(f)p
Fm(t)p Ft(j)p Fm(t)22 b Ft(2)f Fm(R)i Fq(and)f Fm(C)5
b Fq(\()p Fm(t)p Fq(\))p Ft(g)23 b Fq(where)g Fm(R)g
Fq(is)g(a)f(relation,)j Fm(C)i Fq(is)c(a)g(condition)g(of)-152
1418 y(the)h(form)h Fm(A)217 1426 y Fl(i)243 1418 y Fm(\022)r(c)p
Fq(,)h Fm(A)419 1426 y Fl(i)469 1418 y Fq(is)f(an)f(attribute)g(of)h
Fm(R)q Fq(,)g Fm(c)f Fq(is)h(a)g(constan)n(t)f(v)l(alue)-152
1505 y(and)i Fm(\022)d Ft(2)f(f)p Fq(=)p Fm(;)13 b Ft(6)p
Fq(=)p Fm(;)g(<;)g Ft(\024)p Fm(;)f(>;)h Ft(\025g)-152
1679 y Fq(Giv)n(en)36 b(a)h(selection)g(query)-6 b(,)38
b(the)d(serv)n(er)h(computes)h(a)f(result)h(set)-152
1766 y(whic)n(h)29 b(is)g(a)g(set)g(of)g(con)n(tiguous)g(\(along)g
(that)g(dimension\))g(tuples.)-152 1853 y(\(It)23 b(could)h(also)g(b)r
(e)f(an)h(empt)n(y)e(set.\))34 b(Belo)n(w,)26 b(w)n(e)d(outline)h(our)g
(tec)n(h-)-152 1941 y(nique)d(for)i(comp)r(osing)g(a)f(V)n(O)e(for)j
(selection)g(queries)e(for)i(a)f(relation)-152 2028 y
Fm(R)e Fq(where)g(the)f(predicate)g(condition)h Fm(C)k
Fq(is)c(on)f(attribute)g Fm(A)1551 2036 y Fl(i)1577 2028
y Fq(.)32 b(Please)-152 2115 y(note)24 b(that)f(although)h(w)n(e)g(use)
g(a)g(single)g(attribute)g(in)f(the)h(selection)-152
2202 y(predicate)g(in)f(the)f(example)h(b)r(elo)n(w,)i(it)e(is)h
(straigh)n(t-forw)n(ard)h(to)e(use)-152 2289 y(our)h(sc)n(heme)f(for)h
(selection)h(query)d(predicates)i(in)n(v)n(olving)f(m)n(ultiple)-152
2377 y(attributes.)-93 3086 y @beginspecial 205 @llx
645 @lly 427 @urx 718 @ury 2220 @rwi @setspecial
%%BeginDocument: selection.eps
%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 205 645 427 718
%%Title: selection
%%CreationDate: Mon Feb 21 01:59:54 2005
%%Creator: Tgif-4.1.42-QPL written by William Chia-Wei Cheng (bill.cheng@acm.org)
%%ProducedBy: (unknown)
%%Pages: 1
%%DocumentFonts: (atend)
%%EndComments
%%BeginProlog

/tgifdict 55 dict def
tgifdict begin

/tgifellipsedict 6 dict def
tgifellipsedict /mtrx matrix put

/TGEL % tgifellipse
 { tgifellipsedict begin
      /yrad exch def
      /xrad exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      xrad yrad scale
      0 0 1 0 360 arc
      savematrix setmatrix
   end
 } def

/tgifarrowtipdict 8 dict def
tgifarrowtipdict /mtrx matrix put

/TGAT % tgifarrowtip
 { tgifarrowtipdict begin
      /dy exch def
      /dx exch def
      /h exch def
      /w exch def
      /y exch def
      /x exch def
      /savematrix mtrx currentmatrix def
      x y translate
      dy dx atan rotate
      0 0 moveto
      w neg h lineto
      w neg h neg lineto
      savematrix setmatrix
   end
 } def

/TGMAX
 { exch dup 3 1 roll exch dup 3 1 roll gt { pop } { exch pop } ifelse
 } def
/TGMIN
 { exch dup 3 1 roll exch dup 3 1 roll lt { pop } { exch pop } ifelse
 } def
/TGSW { stringwidth pop } def

/bd { bind def } bind def

/GS { gsave } bd
/GR { grestore } bd
/NP { newpath } bd
/CP { closepath } bd
/CHP { charpath } bd
/CT { curveto } bd
/L { lineto } bd
/RL { rlineto } bd
/M { moveto } bd
/RM { rmoveto } bd
/S { stroke } bd
/F { fill } bd
/TR { translate } bd
/RO { rotate } bd
/SC { scale } bd
/MU { mul } bd
/DI { div } bd
/DU { dup } bd
/NE { neg } bd
/AD { add } bd
/SU { sub } bd
/PO { pop } bd
/EX { exch } bd
/CO { concat } bd
/CL { clip } bd
/EC { eoclip } bd
/EF { eofill } bd
/IM { image } bd
/IMM { imagemask } bd
/ARY { array } bd
/SG { setgray } bd
/RG { setrgbcolor } bd
/SD { setdash } bd
/W { setlinewidth } bd
/SM { setmiterlimit } bd
/SLC { setlinecap } bd
/SLJ { setlinejoin } bd
/SH { show } bd
/FF { findfont } bd
/MS { makefont setfont } bd
/AR { arcto 4 {pop} repeat } bd
/CURP { currentpoint } bd
/FLAT { flattenpath strokepath clip newpath } bd
/TGSM { tgiforigctm setmatrix } def
/TGRM { savematrix setmatrix } def

end

%%EndProlog
%%Page: 1 1

%%PageBoundingBox: 205 645 427 718
tgifdict begin
/tgifsavedpage save def

1 SM
1 W

0 SG

72 0 MU 72 11.695 MU TR
72 128 DI 100.000 MU 100 DI DU NE SC

GS

/tgiforigctm matrix currentmatrix def

% BOX
0 SG
GS
   10 SM
   GS
      NP 368 281 M 407 281 L 407 313 L 368 313 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 497 281 M 536 281 L 536 313 L 497 313 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 618 281 M 664 281 L 664 313 L 618 313 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 694 281 M 733 281 L 733 313 L 694 313 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 431 281 M 478 281 L 478 313 L 431 313 L CP
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 717 298 4 4 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 725 298 4 4 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      700 305 M
      GS
            0 SG
            /Symbol FF [24 0 0 -24 0 0] MS
            (+) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      436 304 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R) SH
            0 SG
            /NewCenturySchlbk-Roman FF [14 0 0 -14 0 0] MS
            (a-1) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      505 305 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R) SH
            0 SG
            /NewCenturySchlbk-Roman FF [17 0 0 -17 0 0] MS
            (a) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      622 304 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R) SH
            0 SG
            /NewCenturySchlbk-Roman FF [14 0 0 -14 0 0] MS
            (b+1) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      740 303 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (Ai) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      407 298 M
      433 298 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      537 297 M
      564 297 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% OVAL
0 SG
GS
   GS
      NP 389 298 4 4 TGEL
      S
   GR
GR

% OVAL
0 SG
GS
   GS
      NP 397 298 4 4 TGEL
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      372 305 M
      GS
            0 SG
            /Symbol FF [24 0 0 -24 0 0] MS
            (-) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      666 298 M
      692 298 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 564 281 M 603 281 L 603 313 L 564 313 L CP
      S
   GR
GR

% TEXT
NP
0 SG
   GS
      1 W
      572 305 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R) SH
            0 SG
            /NewCenturySchlbk-Roman FF [17 0 0 -17 0 0] MS
            (b) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      544 343 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [18 0 0 -18 0 0] MS
            (Ts) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      498 322 M
      0 106 atan DU cos 10.000 MU exch sin 10.000 MU RM
      0 106 atan DU cos 10.000 MU 604 exch SU
      exch sin 10.000 MU 322 exch SU L
   TGSM
   2 W
   S
   1 W
GR
GS
   TGSM
   NP
      498 322 10.000 4.000 -106 0 TGAT
   1 SG CP F
   0 SG
   NP
      498 322 10.000 4.000 -106 0 TGAT
   CP F
GR
GS
   TGSM
   NP
      604 322 10.000 4.000 106 0 TGAT
   1 SG CP F
   0 SG
   NP
      604 322 10.000 4.000 106 0 TGAT
   CP F
GR

% TEXT
NP
0 SG
   GS
      1 W
      443 335 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [18 0 0 -18 0 0] MS
            (Tn) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      629 334 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [18 0 0 -18 0 0] MS
            (Tn) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      477 298 M
      497 298 L
   TGSM
   2 W
   S
   1 W
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      603 297 M
      618 297 L
   TGSM
   2 W
   S
   1 W
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 400 222 M 439 222 L 439 254 L 400 254 L CP
      S
   GR
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 568 222 M 607 222 L 607 254 L 568 254 L CP
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      447 237 M
      480 237 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% BOX
0 SG
GS
   10 SM
   GS
      NP 484 223 M 523 223 L 523 255 L 484 255 L CP
      S
   GR
GR

% POLY/OPEN-SPLINE
0 SG
GS
   [4 4] 0 SD
   NP
      531 236 M
      564 236 L
   TGSM
   1 W
   S
   [] 0 SD
GR

% TEXT
NP
0 SG
   GS
      1 W
      407 245 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R) SH
            0 SG
            /NewCenturySchlbk-Roman FF [17 0 0 -17 0 0] MS
            (u) SH
      GR
   GR

% TEXT
NP
0 SG
   GS
      1 W
      574 245 M
      GS
            0 SG
            /NewCenturySchlbk-Roman FF [20 0 0 -20 0 0] MS
            (R) SH
            0 SG
            /NewCenturySchlbk-Roman FF [17 0 0 -17 0 0] MS
            (v) SH
      GR
   GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      421 256 M
      497 285 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      505 258 M
      564 288 L
   TGSM
   1 W
   S
GR

% POLY/OPEN-SPLINE
0 SG
GS
   NP
      584 255 M
      618 289 L
   TGSM
   1 W
   S
GR

GR
tgifsavedpage restore
end
showpage

%%Trailer
%MatchingCreationDate: Mon Feb 21 01:59:54 2005
%%DocumentFonts: NewCenturySchlbk-Roman
%%+ Symbol
%%EOF

%%EndDocument
 @endspecial -152 3208 a(The)j(serv)n(er)g(comp)r(oses)h(the)e(query)g
(reply)g(as)h(follo)n(ws:)-62 3452 y(1.)38 b(computes)29
b(the)g(tuple)f(set)h Fm(T)883 3460 y Fl(s)945 3452 y
Fq(consisting)i(of)e(all)h(the)f(tuples)35 3539 y(that)d(matc)n(h)f
(the)g(query)g(p)r(osed.)35 b Fm(T)1071 3547 y Fl(s)1125
3539 y Fq(=)21 b Ft(f)p Fm(R)1302 3547 y Fl(a)1340 3539
y Fm(;)13 b(:)h(:)f(:)g(;)g(R)1569 3548 y Fl(b)1601 3539
y Ft(g)-62 3705 y Fq(2.)38 b(computes)22 b(the)f(set)i
Fm(T)663 3713 y Fl(n)727 3705 y Fq(consisting)g(of)f(immediate)h
(predeces-)35 3792 y(sor)k(and)f(successor)i(no)r(des)f(of)g(the)f
(\014rst)g(and)g(last)h(no)r(des)g(re-)35 3879 y(sp)r(ectiv)n(ely)22
b(along)h(the)e(searc)n(h)i(dimension)f(\(i.e.,)i(the)d(b)r(ound-)35
3967 y(ary)27 b(tuples\).)39 b Fm(T)507 3975 y Fl(n)573
3967 y Fq(=)23 b Ft(f)p Fm(R)752 3975 y Fl(a)p Fk(\000)p
Fo(1)869 3967 y Fm(;)13 b(R)961 3976 y Fl(b)p Fo(+1)1069
3967 y Ft(g)p Fq(.)40 b(These)27 b(v)l(alues)g(are)h(re-)35
4054 y(quired)22 b(to)h(pro)n(v)n(e)f(completeness.)34
b(W)-6 b(e)23 b(note)f(that)h(the)f(serv)n(er)35 4141
y(needs)29 b(to)g(release)h(only)e(the)h(relev)l(an)n(t)f(attributes')h
(v)l(alue)g(in)35 4228 y(plain)h(text)e(and)h(simply)g(send)g(the)g
(hashes)g(of)h(the)f(remain-)35 4315 y(ing)38 b(attributes.)70
b(W)-6 b(e)38 b(assume)g(that)f(the)h(relation)g Fm(R)g
Fq(has)35 4402 y Fm(r)c Fq(attributes)e Ft(f)p Fm(A)561
4410 y Fo(1)595 4402 y Fm(;)13 b(:::;)h(A)785 4410 y
Fl(r)820 4402 y Ft(g)32 b Fq(and)f Fm(C)37 b Fq(is)c(a)f(condition)g
(on)g(at-)35 4490 y(tribute)f Fm(A)355 4498 y Fl(i)380
4490 y Fq(.)51 b(In)30 b(this)h(case,)i(the)e(serv)n(er)g(only)f(needs)
h(to)g(re-)35 4577 y(v)n(eal)h Fm(R)257 4585 y Fl(a)p
Fk(\000)p Fo(1)374 4577 y Fm(:A)453 4585 y Fl(i)511 4577
y Fq(and)f Fm(R)724 4586 y Fl(b)p Fo(+1)833 4577 y Fm(:A)912
4585 y Fl(i)970 4577 y Fq(in)h(plain)n(text)g(and)f(send)h(the)35
4664 y(hashes)c Fm(h)p Fq(\()p Fm(A)413 4672 y Fl(j)446
4664 y Fq(\))f(for)i(the)e(other)h(\()p Fm(r)21 b Ft(\000)d
Fq(1\))28 b(attributes)g(of)h Fm(R)1725 4672 y Fl(a)p
Fk(\000)p Fo(1)35 4751 y Fq(and)g Fm(R)246 4759 y Fl(j)s
Fo(+1)356 4751 y Fq(.)47 b(Th)n(us)29 b(it)h(is)g(p)r(ossible)h(to)f
(prev)n(en)n(t)e(exp)r(osure)i(of)35 4838 y(data)22 b(\(i.e.,)i(p)r
(ertaining)e(to)g(the)g(tuples)g(that)f(are)h(b)r(ey)n(ond)f(the)35
4925 y(left)h(and)f(righ)n(t)g(b)r(oundaries)g(of)h(the)f(query)f
(result\))h(to)g(p)r(oten-)35 5013 y(tially)27 b(unauthorized)e
(queriers.)-62 5179 y(3.)38 b(obtains)c(the)g(corresp)r(onding)g
(signatures)h(\(either)f(RSA)e(or)35 5266 y(BGLS\))26
b Ft(f)p Fm(S)t(ig)s(n)p Fq(\()p Fm(R)585 5274 y Fl(a)623
5266 y Fq(\))p Fm(;)13 b(:)g(:)g(:)g(;)h(S)t(ig)s(n)p
Fq(\()p Fm(R)1075 5275 y Fl(b)p Fo(+1)1183 5266 y Fq(\))p
Ft(g)1277 5234 y Fo(6)-62 5432 y Fq(4.)38 b(aggregates)26
b(individual)d(signatures)h(to)f(form)h(a)f(uni\014ed)g(\(ag-)35
5519 y(gregated\))k(signature:)35 5606 y Fm(\033)d Fq(=)d
Fm(Ag)s(g)s(r)r(eg)s(ate)p Fq(\()p Fm(S)t(ig)s(n)p Fq(\()p
Fm(R)821 5614 y Fl(a)855 5606 y Fq(\))p Fm(;)13 b(:)g(:)g(:)g(;)g(S)t
(ig)s(n)p Fq(\()p Fm(R)1306 5615 y Fl(b)p Fo(+1)1415
5606 y Fq(\)\))p -152 5671 797 4 v -148 5724 a Fo(6)-113
5756 y Fq(Note)20 b(that)f(it)h(is)g(necessary)h(to)f(include)g
Fm(S)t(ig)s(n)p Fq(\()p Fm(R)1302 5765 y Fl(b)p Fo(+1)1410
5756 y Fq(\))g(to)g(c)n(hec)n(k)f(for)-152 5831 y(completeness.)61
b(Ho)n(w)n(ev)n(er,)37 b Fm(S)t(ig)s(n)p Fq(\()p Fm(R)958
5839 y Fl(a)p Fk(\000)p Fo(1)1074 5831 y Fq(\))d(is)h(not)f(required)f
(since)-152 5906 y(hash)26 b(of)g Fm(R)173 5914 y Fl(a)p
Fk(\000)p Fo(1)315 5906 y Fq(is)g(included)g(in)f Fm(S)t(ig)s(n)p
Fq(\()p Fm(R)1040 5914 y Fl(a)1078 5906 y Fq(\).)2130
319 y(5.)38 b(for)21 b(eac)n(h)f(tuple)g(in)g Fm(T)2826
327 y Fl(s)2880 319 y Fq(and)f(tuple)h Fm(R)3272 328
y Fl(b)p Fo(+1)3381 319 y Fq(,)h(collects)h(the)e(hashes)2227
407 y(of)h(immediate)h(predecessor)f(tuples)g(along)g(all)h(other)e
(searc)n(h-)2227 494 y(able)28 b(dimensions)g Ft(f)p
Fm(A)2882 502 y Fo(1)2917 494 y Fm(;)13 b(:)g(:)g(:)g(;)g(A)3145
502 y Fl(i)p Fk(\000)p Fo(1)3250 494 y Fm(;)g(A)3342
502 y Fl(i)p Fo(+1)3445 494 y Fm(;)g(:)g(:)g(:)g(;)g(A)3673
503 y Fl(l)3697 494 y Ft(g)p Fq(,)29 b(where)e Fm(l)2227
581 y Fq(is)34 b(the)g(n)n(um)n(b)r(er)e(of)j(searc)n(hable)g
(attributes.)58 b(\(Recall)35 b(that)2227 668 y(the)30
b(signature)h(of)h(a)f(tuple)f(is)h(computed)f(on)h(the)f(con)n(ten)n
(ts)2227 755 y(of)35 b(the)f(tuple)g(in)h(conjunction)g(with)f(the)g
(con)n(ten)n(ts)h(of)g(the)2227 842 y(immediate)30 b(predecessor)g(no)r
(des)f(along)h(all)g(the)f(searc)n(hable)2227 930 y(dimensions.\))35
b(Then)25 b(for)g(eac)n(h)g(tuple)g Fm(R)3422 938 y Fl(i)3448
930 y Fq(,)h(serv)n(er)e(computes)2227 1017 y(2)i(v)l(alues:)2227
1146 y Fm(H)2291 1154 y Fo(1)2325 1146 y Fq(\()p Fm(R)2413
1154 y Fl(i)2439 1146 y Fq(\))c(=)f Fm(h)p Fq(\()p Fm(I)6
b(P)11 b(R)2804 1154 y Fo(1)2838 1146 y Fq(\()p Fm(R)2926
1154 y Fl(i)2952 1146 y Fq(\)\))p Ft(jj)i Fm(:)g(:)g(:)g(h)p
Fq(\()p Fm(I)6 b(P)11 b(R)3401 1154 y Fl(i)p Fk(\000)p
Fo(1)3506 1146 y Fq(\()p Fm(R)3594 1154 y Fl(i)3620 1146
y Fq(\)\)\))68 b(and)2227 1233 y Fm(H)2291 1241 y Fo(2)2325
1233 y Fq(\()p Fm(R)2413 1241 y Fl(i)2439 1233 y Fq(\))22
b(=)f Fm(h)p Fq(\()p Fm(I)6 b(P)11 b(R)2804 1241 y Fl(i)p
Fo(+1)2906 1233 y Fq(\()p Fm(R)2994 1241 y Fl(i)3021
1233 y Fq(\)\))p Ft(jj)i Fm(:)g(:)g(:)g(h)p Fq(\()p Fm(I)6
b(P)11 b(R)3470 1242 y Fl(l)3494 1233 y Fq(\()p Fm(R)3582
1241 y Fl(i)3608 1233 y Fq(\)\)\))2227 1320 y(Therefore,)2227
1407 y Fm(T)2272 1415 y Fl(m)2352 1407 y Fq(=)21 b Ft(f)p
Fm(H)2535 1415 y Fo(1)2569 1407 y Fq(\()p Fm(R)2657 1415
y Fl(a)2695 1407 y Fq(\))p Fm(;)13 b(H)2823 1415 y Fo(2)2857
1407 y Fq(\()p Fm(R)2945 1415 y Fl(a)2983 1407 y Fq(\))p
Fm(;)g(:)g(:)g(:)g(;)g(H)3247 1415 y Fo(1)3281 1407 y
Fq(\()p Fm(R)3369 1416 y Fl(b)p Fo(+1)3478 1407 y Fq(\))p
Fm(;)g(H)3606 1415 y Fo(2)3640 1407 y Fq(\()p Fm(R)3728
1416 y Fl(b)p Fo(+1)3836 1407 y Fq(\))p Ft(g)2227 1494
y Fq(Sp)r(eci\014cally)-6 b(,)21 b(the)d(size)i(of)g
Fm(T)3028 1502 y Fl(m)3106 1494 y Fq(is)f(\(\()p Fm(l)5
b Ft(\000)t Fq(1\))t Ft(\003)t Fq(\()p Fm(b)t Fq(+)t(1)t
Ft(\000)t Fm(a)p Fq(\))t Ft(\003)t(j)p Fm(hash)p Ft(j)p
Fq(\))2227 1581 y(where)28 b Ft(j)p Fm(hash)p Ft(j)g
Fq(is)g(the)f(hash)g(v)l(alue)g(of)h(eac)n(h)g(of)g(these)g(tuples)2227
1669 y(and)h(is)g(usually)g(160)h(bits)f(long.)46 b(Th)n(us)29
b(the)f(V)n(O)g(comprises)2227 1756 y(of)e Ft(f)p Fm(T)2397
1764 y Fl(s)2431 1756 y Fm(;)13 b(T)2510 1764 y Fl(n)2552
1756 y Fm(;)g(T)2631 1764 y Fl(m)2690 1756 y Fm(;)g(\033)s
Ft(g)2040 1979 y Fr(5.2)99 b(J)o(oin:)2040 2070 y Fq(A)37
b(basic)h(join)g(op)r(eration)h Fm(R)i Fh(1)3012 2078
y Fl(C)3105 2070 y Fm(S)g Fq(in)n(v)n(olv)n(es)c(t)n(w)n(o)h(relations)
h Fm(R)2040 2157 y Fq(and)33 b Fm(S)j Fq(where)e Fm(C)j
Fq(is)d(a)f(condition)g(of)g(the)g(form)g Fm(A)3582 2165
y Fl(i)3608 2157 y Fm(\022)r(A)3704 2165 y Fl(j)3736
2157 y Fq(,)i Fm(A)3850 2165 y Fl(i)3909 2157 y Fq(and)2040
2244 y Fm(A)2098 2252 y Fl(j)2159 2244 y Fq(are)29 b(attributes)g(of)g
(relation)h Fm(R)g Fq(and)e Fm(S)33 b Fq(resp)r(ectiv)n(ely)c(and)f
Fm(\022)g Ft(2)2040 2332 y(f)p Fq(=)p Fm(;)13 b Ft(6)p
Fq(=)p Fm(;)g(<;)g Ft(\024)p Fm(;)g(>;)g Ft(\025g)p Fq(.)47
b(Both)31 b(AuthDS)d(and)h(VB-tree)h(approac)n(hes)2040
2419 y(assume)d(that)e(all)i(join)f(queries)g(are)g(kno)n(wn)f
Fp(a)j(priori)33 b Fq(and)26 b(require)2040 2506 y Fp(additional)g
Fq(pre-computed)f(B-trees)h(to)g(ensure)f(authen)n(tication.)2040
2680 y(In)g(the)g(discussion)h(that)g(follo)n(ws,)i(w)n(e)e(fo)r(cus)g
(mainly)g(on)f(the)g(equi-)2040 2767 y(join)g(op)r(eration,)g(i.e.,)g
(where)f Fm(\022)i Fq(is)e(the)f(equalit)n(y)h(predicate.)34
b(Giv)n(en)2040 2855 y(a)26 b(query)f(of)h(the)f(t)n(yp)r(e)g
Fm(R)d Fh(1)2845 2863 y Fl(A)2891 2871 y Fg(r)2925 2863
y Fo(=)p Fl(A)3018 2871 y Fg(s)3075 2855 y Fm(S)t Fq(,)k(pro)n(ving)g
(correctness)g(is)g(rel-)2040 2942 y(ativ)n(ely)h(simple)h(using)f(our)
g(approac)n(h.)38 b(The)27 b(serv)n(er)g(executes)g(the)2040
3029 y(join)c(query)e(and)h(computes)h(the)e(list)j(of)f(tuples)f(\()p
Fm(t)f Ft(2)g Fm(R)i Fq(and)f Fm(s)f Ft(2)h Fm(S)t Fq(\))2040
3116 y(that)37 b(matc)n(h)g(the)g(equalit)n(y)g(predicate)h(and)f
(obtains)g(the)g(corre-)2040 3203 y(sp)r(onding)31 b(signatures)h(of)f
Fm(t)g Fq(and)f Fm(s)g Fq(from)i Fm(R)f Fq(and)g Fm(S)k
Fq(resp)r(ectiv)n(ely)-6 b(.)2040 3290 y(Serv)n(er)22
b(com)n(bines)h(all)g(individual)f(signatures)h(of)g(tuples)g(in)f(the)
g(re-)2040 3378 y(sult)32 b(set)g(to)f(compute)h(the)f(aggregated)j
(signature)e(of)g(the)g(en)n(tire)2040 3465 y(result)f(set.)49
b(Note)31 b(that)f(the)g(aggregated)i(signature)g(is)f(su\016cien)n(t)
2040 3552 y(to)26 b(pro)n(v)n(e)f(correctness.)2040 3726
y(Ho)n(w)n(ev)n(er,)19 b(pro)n(ving)e(completeness)h(of)g(a)g(join)g
(query)e(is)h(not)g(straigh)n(t-)2040 3813 y(forw)n(ard.)65
b(The)36 b(querier)g(needs)f(to)h(b)r(e)f(assured)h(that)f(all)i
(tuples)2040 3901 y(matc)n(hing)30 b(the)g(equalit)n(y)f(predicate)i
(from)f Fm(R)h Fq(and)e Fm(S)34 b Fq(are)d(presen)n(t)2040
3988 y(in)36 b(the)f(result)h(set)f Fm(T)2680 3996 y
Fl(s)2713 3988 y Fq(.)65 b(One)35 b(w)n(a)n(y)-6 b(,)38
b(alb)r(eit)e(quite)f(ine\016cien)n(t,)j(to)2040 4075
y(accomplish)31 b(this)g(is)f(to)h(pic)n(k)e(the)h(smaller)i(relation)f
(\(sa)n(y)f Fm(S)t Fq(\))g(and)2040 4162 y(for)25 b(eac)n(h)g(tuple)f
Fm(s)g Fq(\(or)h(eac)n(h)g(con)n(tiguous)g(set)f(of)i(tuples\))e(in)g
(the)g(set)2040 4249 y Fm(S)g Ft(\000)c Fm(T)2236 4257
y Fl(s)2269 4249 y Fq(,)32 b(sho)n(w)f(an)f(empt)n(y)f(pro)r(of)i(that)
f Fm(s)g Fq(\(more)h(precisely)g Fm(s:A)3970 4257 y Fl(s)4003
4249 y Fq(\))2040 4336 y(do)r(es)j(not)g(exist)f(in)h
Fm(R)q Fq(.)57 b(Recall)35 b(that)e(an)h(empt)n(y)e(pro)r(of)j(in)n(v)n
(olv)n(es)2040 4424 y(releasing)k(t)n(w)n(o)g(adjacen)n(t)f(tuples)f
Fm(i;)14 b(j)42 b Fq(of)d(relation)f Fm(R)h Fq(suc)n(h)e(that)2040
4511 y(\()p Fm(i:A)2175 4519 y Fl(r)2239 4511 y Fm(<)29
b(s:A)2443 4519 y Fl(s)2505 4511 y Fm(<)g(j:A)2704 4519
y Fl(r)2739 4511 y Fq(\))h(and)h(the)f(signature)h(of)g
Fm(j)t Fq(.)49 b(Note)31 b(that)f(if)2040 4598 y(the)25
b(serv)n(er)h(needs)g(to)g(sho)n(w)g(empt)n(y)f(pro)r(ofs)i(for)g
Fm(m)e Fq(tuples,)h(serv)n(er,)2040 4685 y(instead)g(of)h(releasing)h
Fm(m)d Fq(individual)h(signatures,)i(aggregates)g(the)2040
4772 y Fm(m)e Fq(signatures)h(in)n(to)g(a)g(single)g
(condensed/aggregated)h(signature.)2040 4860 y(Suc)n(h)c(a)i(pro)r(of)g
(is)g(clearly)g(linear)g(in)f(the)f(size)i(of)g Fm(S)t
Fq(.)35 b(It)25 b(remains)h(an)2040 4947 y(in)n(teresting)31
b(op)r(en)f(problem)h(to)f(mo)r(dify)h(the)f(signature)h(c)n(haining)
2040 5034 y(mec)n(hanism)e(to)g(yield)f(e\016cien)n(t)g(completeness)i
(pro)r(ofs)g(whic)n(h)e(are)2040 5121 y(linear)e(in)f(the)f(size)i(of)g
(the)e(result)h(set)h(for)f(arbitrary)g(Join)h(queries.)2040
5295 y(Using)g(DSA)n(C)e(approac)n(h,)i(it)f(is)h(p)r(ossible)g(to)g
(construct)f(more)h(e\016-)2040 5383 y(cien)n(t)g(pro)r(ofs)h(of)g
(completeness)g(if)g(the)f(join)g(queries)g(are)h(kno)n(wn)e
Fp(a)2040 5470 y(priori)p Fq(.)34 b(Then,)25 b(while)h(computing)e(the)
g(signature)i(of)f(a)g(tuple)f(that)2040 5557 y(is)k(part)f(of)h(a)g
(join)g(query)e(result)i(set,)g(the)f(hash)h(of)g(its)g(immediate)2040
5644 y(predecessor)23 b(whic)n(h)f(is)h(also)g(in)f(result)g(set)h(of)f
(the)g(same)h(join)g(query)2040 5731 y(is)30 b(included)f(in)h(the)f
(tuple)g(signature.)47 b(This)30 b(creates)h(an)e(explicit)2040
5818 y(signature)23 b(c)n(hain)g(corresp)r(onding)g(to)g(the)f(join)h
(query)-6 b(.)32 b(No)n(w,)24 b(when)2040 5906 y(a)h(pre-computed)f
Fm(A)d Fh(1)h Fm(B)28 b Fq(query)c(is)i(executed,)e(the)h(serv)n(er)f
(simply)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop -152 319 a Fq(sends)25 b(an)f(aggregated)i
(signature)f(that)f(represen)n(ts)g(the)g(signature)-152
407 y(c)n(hain)d(of)h Fm(A)f Fh(1)h Fm(B)t Fq(.)32 b(Note)21
b(that,)h(unlik)n(e)e(the)h(other)g(t)n(w)n(o)g(approac)n(hes,)-152
494 y(pre-computing)k(a)h(join)h(query)d(in)h(our)h(approac)n(h)g(do)r
(es)g(not)f(en)n(tail)-152 581 y(additional)i(storage)g(o)n(v)n
(erhead.)-152 794 y Fr(5.3)99 b(Set)26 b(Operations:)-152
885 y Fq(A)g(set)h(op)r(eration)g(in)n(v)n(olv)n(es)f(t)n(w)n(o)h
(relations)g Fm(U)35 b Fq(and)26 b Fm(V)17 b Fq(.)36
b(Eac)n(h)26 b(rela-)-152 972 y(tion)g(is)g(assumed)g(to)g(ha)n(v)n(e)f
(its)h(o)n(wn)g(signature)h(c)n(hains.)-41 1213 y Ft(\017)38
b Fq(Union:)c Fm(T)338 1221 y Fl(s)393 1213 y Fq(=)21
b Fm(U)k Ft([)17 b Fm(V)35 1301 y Fq(Pro)n(viding)39
b(pro)r(ofs)i(of)f(correctness)g(and)e(completeness)i(is)35
1388 y(straigh)n(tforw)n(ard:)33 b(aggregate)20 b(individual)e
(signatures)i(for)f(all)35 1475 y(tuples)28 b(of)g Fm(U)36
b Fq(and)27 b(all)h(tuples)g(of)g Fm(V)44 b Fq(to)28
b(obtain)g(a)g(single)g(sig-)35 1562 y(nature)e(for)h
Fm(U)e Ft([)18 b Fm(V)f Fq(;)26 b(if)h Fm(U)35 b Fq(and)25
b Fm(V)43 b Fq(are)27 b(in)n(termediate)f(results)35
1649 y(of)36 b(a)f(query)e(ev)l(aluation)i(or)h(subsets)e(of)i(some)g
(other)e(rela-)35 1736 y(tions)c Fm(R)g Fq(and)f Fm(S)t
Fq(,)i(collect)g(b)r(oundary)d(tuples)i(for)g Fm(U)38
b Fq(and)29 b Fm(V)17 b Fq(;)35 1824 y(\014nally)27 b(construct)h(the)f
(V)n(O)f(as)i(describ)r(ed)g(ab)r(o)n(v)n(e)f(for)h(selec-)35
1911 y(tion)e(queries.)-41 2071 y Ft(\017)38 b Fq(In)n(tersection:)d
Fm(T)529 2079 y Fl(s)583 2071 y Fq(=)21 b Fm(U)26 b Ft(\\)17
b Fm(V)35 2159 y Fq(T)-6 b(o)18 b(pro)n(v)n(e)e(completeness)i(and)f
(correctness,)j(the)d(serv)n(er)g(needs)35 2246 y(to)22
b(con)n(vince)g(the)f(querier)h(that)g(eac)n(h)g(tuple)f(in)h
Fm(T)1471 2254 y Fl(s)1526 2246 y Fq(is)g(presen)n(t)35
2333 y(in)29 b(b)r(oth)f Fm(U)38 b Fq(and)28 b Fm(V)17
b Fq(.)44 b(Our)28 b(approac)n(h)h(is)h(similar)g(to)f(that)g(of)35
2420 y(AuthDS:)h(the)h(serv)n(er)g(pic)n(ks)g(the)g(smaller)i(of)f(the)
f(t)n(w)n(o)g(sets)35 2507 y(\(sa)n(y)20 b Fm(U)8 b Fq(\))20
b(and)g(for)h(eac)n(h)f(elemen)n(t)g(in)g Fm(U)14 b Ft(\000)6
b Fm(T)1264 2515 y Fl(s)1317 2507 y Fq(the)20 b(serv)n(er)g(sends)35
2595 y(bac)n(k)30 b(empt)n(y)f(pro)r(of)i(that)e(that)h(elemen)n(t)g
(\(tuple\))f(do)r(es)i(not)35 2682 y(exist)h(in)g Fm(V)17
b Fq(.)52 b(This)33 b(pro)r(of)g(is)f(linear)h(in)e(the)h(size)h(of)f
Fm(U)40 b Fq(and)35 2769 y(sho)n(ws)31 b(that)f(the)f(result)i(is)f
(correct)h(and)f(ev)n(ery)f(elemen)n(t)h(in)35 2856 y(\()p
Fm(U)25 b Ft(\000)17 b Fq(\()p Fm(U)25 b Ft(\\)18 b Fm(V)e
Fq(\)\))26 b(is)g(not)g(in)f Fm(V)43 b Fq(and)25 b(hence)g(complete.)
-152 3069 y Fr(5.4)99 b(Pr)n(ojections:)-152 3160 y Fm(\031)-108
3168 y Fl(L)-61 3160 y Fq(\()p Fm(R)q Fq(\))20 b(is)i(the)e(pro)t
(jection)j(of)e(relation)i Fm(R)e Fq(on)n(to)g(the)g(list)h
Fm(L)f Fq(where)h Fm(L)-152 3248 y Fq(is)27 b(t)n(ypically)f(a)g(list)h
(of)f(\(some)h(of)g(the\))e(attributes)h(of)h Fm(R)q
Fq(.)35 b Fm(\031)1595 3256 y Fl(L)1641 3248 y Fq(\()p
Fm(R)q Fq(\))21 b(=)-152 3335 y Ft(f)p Fm(<)42 b(t:A)95
3343 y Fl(j)127 3335 y Fm(;)13 b(:::;)h(t:A)366 3344
y Fl(k)446 3335 y Fm(>)41 b Ft(j)p Fm(t)g Ft(2)h Fm(R)q
Ft(g)c Fq(where)g Fm(A)1157 3343 y Fl(i)1183 3335 y Fq('s)g(are)g
(attributes)g(of)-152 3422 y(relation)27 b Fm(R)q Fq(.)35
b(The)27 b(result)f(of)h(the)e(pro)t(jection)i(is)g(a)f(relation)h
(with)f(a)-152 3509 y(sc)n(hema)i(formed)f(b)n(y)f(the)h(attributes)f
(on)h(list)h Fm(L)f Fq(and)g(the)f(result)h(is)-152 3596
y(computed)e(b)n(y)g(examining)h(ev)n(ery)f(tuple)g(in)h
Fm(R)q Fq(.)-152 3771 y(In)31 b(order)h(to)g(supp)r(ort)f(pro)t
(jections,)k(a)d(tuple)g(hash)f(is)h(computed)-152 3858
y(as:)g Fm(h)p Fq(\()p Fm(t)p Fq(\))21 b(=)g Fm(h)p Fq(\()p
Fm(h)p Fq(\()p Fm(t:A)458 3866 y Fo(1)492 3858 y Fq(\))p
Ft(jj)p Fm(h)p Fq(\()p Fm(t:A)745 3866 y Fo(2)780 3858
y Fq(\))p Ft(jj)14 b Fm(:)f(:)g(:)g Ft(jj)p Fm(t:h)p
Fq(\()p Fm(A)1191 3867 y Fl(k)1230 3858 y Fq(\)\).)31
b(In)18 b(other)h(w)n(ords,)-152 3945 y(instead)27 b(of)g(hashing)g
(the)f(en)n(tire)g(tuple,)h(w)n(e)g(hash)f(eac)n(h)h(attribute,)-152
4032 y(concatenate)d(the)e(resulting)i(hashes)f(and)f(hash)h(them)f
(once)h(again.)-152 4119 y(Then,)34 b(w)n(e)f(compute)f(a)g(tuple)g
(signature)h(of)g(tuple)f(as)h(describ)r(ed)-152 4206
y(in)c(section)g(4.2.)44 b(This)29 b(w)n(a)n(y)-6 b(,)30
b(the)e(serv)n(er)g(needs)h(to)g(send)f(only)g(the)-152
4294 y(hashes)i(\(instead)f(of)h(actual)g(plain)n(text)f(v)l(alues\))g
(for)h(eac)n(h)f(\014ltered)-152 4381 y(attribute.)43
b(Unfortunately)-6 b(,)28 b(this)h(basic)g(solution)g(is)g(not)f(v)n
(ery)g(ef-)-152 4468 y(\014cien)n(t)35 b(in)g(terms)g(of)h(bandwidth)e
(since)i(it)f(requires)g(us)g(to)g(send)-152 4555 y(individual)23
b(hashes)h(for)f(eac)n(h)h(\014ltered)e(attribute,)i(for)g(all)g
(tuples)f(in)-152 4642 y(the)k(result)g(set.)39 b(\(Note)27
b(that)g(it)g(is)g(necessary)h(to)f(send)g(individual)-152
4730 y(v)l(alues)c(to)g(allo)n(w)i(the)d(querier)h(to)g(recompute)g
(the)g(tuple)f(signature)-152 4817 y(since)i(the)g(tuple)f(hash)g(is)h
(computed)f(b)n(y)g(concatenating)i(these)e(in-)-152
4904 y(dividual)i(hash)f(v)l(alues.\))34 b(W)-6 b(e)25
b(prop)r(ose)g(further)f(impro)n(v)n(emen)n(ts)h(to)-152
4991 y(this)g(basic)g(solution)g(to)f(reduce)g(the)g(bandwidth)g(o)n(v)
n(erhead)g(in)g(the)-152 5078 y(next)h(section.)-152
5291 y Fr(5.5)99 b(Database)25 b(Updates:)-152 5383 y
Fq(Up)r(date)32 b(op)r(erations)i(in)n(v)n(olv)n(e)e(the)h(serv)n(er)f
(and)h(the)f(data)h(o)n(wner.)-152 5470 y(An)h(up)r(date)g(op)r
(eration)h(t)n(ypically)f(requires)g(recomputing)h(some)-152
5557 y(of)27 b(the)e(tuple)g(signatures.)-152 5731 y
Fn(Insertion:)41 b Fq(W)-6 b(e)29 b(presen)n(t)g(the)g(details)h(of)f
(the)g(m)n(ulti-round)f(pro-)-152 5818 y(to)r(col)d(to)f(insert)f(a)h
(tuple)f(when)g(the)g(data)h(o)n(wner)g(do)r(es)g(not)f(lo)r(cally)-152
5906 y(retain)j(a)g(cop)n(y)g(of)g(the)f(database.)2040
319 y(T)-6 b(o)23 b(insert)f(a)g(tuple)g Fm(r)i Fq(in)n(to)e(table)g
Fm(T)32 b Fq(\(refer)23 b(to)f(\014gure)g(3\),)h(the)f(o)n(wner)2040
407 y(sends)i(the)g(new)g(tuple)f(to)i(the)e(serv)n(er.)34
b(The)24 b(serv)n(er)g(calculates)i(the)2040 494 y(actual)f(p)r
(osition)h(of)f(insertion)g(along)g(all)h Fm(l)f Fq(c)n(hains)g
(\(where)g Fm(l)g Fq(is)g(the)2040 581 y(n)n(um)n(b)r(er)c(of)i(searc)n
(hable)h(attributes\))e(b)n(y)f(examining)i(the)e(v)l(alues)i(of)2040
668 y(the)33 b(individual)h(attributes.)58 b(The)34 b(serv)n(er)f
(computes)h(the)f(set)h(of)2040 755 y(pairs)23 b(of)h(adjacen)n(t)f
(tuples)g Ft(f)p Fq(\()p Fm(R)2964 763 y Fl(i)2986 775
y Fg(k)3027 755 y Fm(;)13 b(R)3119 763 y Fl(i)3141 775
y Fg(k)q Ff(+1)3252 755 y Fq(\))p Ft(g)23 b Fq(for)h(inserting)f(the)f
(new)2040 842 y(tuple,)34 b(collects)g(the)f(signatures)g(of)g(all)h
(successor)g(no)r(des)f Fm(R)3878 850 y Fl(i)3900 862
y Fg(k)q Ff(+1)4011 842 y Fq(,)2040 930 y(aggregates)23
b(these)e(individual)g(signatures)h(to)f(obtain)g Fm(\033)i
Fq(and)e(sends)2040 1017 y(bac)n(k)j(these)h(v)l(alues)g(\()p
Fm(T)2717 1025 y Fl(ins)2810 1017 y Fq(\))f(to)h(the)g(data)f(o)n
(wner.)35 b Fm(T)3561 1026 y Fl(h)3626 1017 y Fq(con)n(tains)25
b(the)2040 1104 y(additional)35 b(hashes)f(required)g(to)g(recompute)f
(the)h(signatures)h(of)2040 1191 y(the)25 b(successor)i(no)r(des.)2748
1159 y Fo(7)2040 1365 y Fq(Up)r(on)17 b(successful)i(v)n(eri\014cation)
f(of)g Fm(\033)s Fq(,)h(the)e(o)n(wner)h(computes)f(the)h(tu-)2040
1453 y(ple)23 b(signature)g(for)h Fm(r)g Fq(b)n(y)e(including)g(the)h
(immediate)g(predecessors')2040 1540 y(\(i.e.,)40 b(all)d
Fm(R)2403 1548 y Fl(i)2425 1560 y Fg(k)2465 1540 y Fq(\))f(hash)g(v)l
(alues)g(and)f(also)j(up)r(dates)d(the)h(signature)2040
1627 y(c)n(hains)h(for)g(the)f(successor)h(no)r(des)g(\(i.e.,)j(all)d
Fm(R)3485 1635 y Fl(i)3507 1647 y Fg(k)q Ff(+1)3619 1627
y Fq(\))f(b)n(y)f(includ-)2040 1714 y(ing)26 b Fm(r)r
Fq('s)f(hash)h(v)l(alue)f(\(along)h(with)g(the)f(other)g(appropriate)h
(hashes)2040 1801 y(from)20 b Fm(T)2260 1810 y Fl(h)2300
1801 y Fq(\).)32 b(The)20 b(o)n(wner)g(then)e(sends)h(bac)n(k)g(all)h
Fm(l)5 b Fq(+)t(1)20 b(new)g(signatures)2040 1888 y Fm(T)2085
1896 y Fl(sig)2172 1888 y Fq(.)48 b(Th)n(us)30 b(inserting)h(a)f(new)h
(tuple)e(in)n(to)h(the)g(database)h(results)2040 1976
y(in)26 b(re-computing)f Fm(l)18 b Fq(+)f(1)26 b(signatures)h(b)n(y)e
(the)g(data)h(o)n(wner.)2040 2150 y Fn(Deletion:)k Fq(P)n(erforming)23
b(a)f(delete)g(is)g(similar)h(to)f(insert)g(op)r(eration)2040
2237 y(and)h(is)h(a)f(m)n(ulti-round)f(proto)r(col.)35
b(Due)23 b(to)g(space)h(restrictions,)h(w)n(e)2040 2324
y(only)k(presen)n(t)h(a)f(high-lev)n(el)h(description)g(of)g(the)f
(proto)r(col.)47 b(Data)2040 2411 y(o)n(wner)23 b(sp)r(eci\014es)g(the)
f(tuple\(s\))f(to)i(b)r(e)f(deleted)g(based)g(on)h(some)g(cri-)2040
2499 y(terion.)33 b(Serv)n(er)21 b(isolates)i(parts)e(of)g(all)h(the)f
Fm(l)h Fq(signature)g(c)n(hains)f(that)2040 2586 y(get)27
b(a\013ected)f(b)n(y)g(this)g(op)r(eration)i(and)e(sends)g(bac)n(k)g
(sets)h(of)h(tuples)2040 2673 y(that)34 b(surround)f(the)h(tuple)g(to)g
(b)r(e)g(deleted)g(bac)n(k)g(to)g(the)g(o)n(wner.)2040
2760 y(The)26 b(o)n(wner)g(recomputes)g(the)f(signatures)h(of)h(the)e
(successor)i(no)r(de)2040 2847 y(of)g(the)f(no)r(de)h(to)f(b)r(e)h
(deleted,)f(along)i(eac)n(h)f(dimension,)g(b)n(y)e(replac-)2040
2935 y(ing)37 b(the)g(hash)g(of)h(the)e(no)r(de)h(to)g(b)r(e)g(deleted)
g(with)g(the)g(hash)g(of)2040 3022 y(its)28 b(predecessor)g(along)h
(that)e(dimension)h(and)f(returns)g(the)g Fm(l)h Fq(new)2040
3109 y(signatures)f(bac)n(k)e(to)h(the)f(serv)n(er.)2040
3302 y Fr(6.)99 b(AN)n(AL)-9 b(YSIS)2040 3393 y Fq(W)j(e)28
b(prop)r(osed)g(a)g(new)h Fn(DSA)n(C)e Fq(sc)n(heme)i(based)f(on)g
(signature)g(ag-)2040 3480 y(gregation)34 b(and)f(c)n(haining)g(to)f
(pro)n(vide)h(authen)n(tication)f(of)i(query)2040 3568
y(replies)28 b(when)f(the)g(database)g(is)h(queried)f(b)n(y)f(remote)h
(clien)n(ts)h(o)n(v)n(er)2040 3655 y(insecure)j(public)g(net)n(w)n
(orks.)50 b(In)30 b(this)h(section,)i(w)n(e)e(b)r(egin)g(b)n(y)f(an-)
2040 3742 y(alyzing)h(the)f(costs)h(and)f(o)n(v)n(erhead)f(factors)j
(asso)r(ciated)g(with)f(our)2040 3829 y(sc)n(heme)20
b(and)f(then)h(compare)g(its)g(p)r(erformance)h(with)f(AuthDS)e(and)
2040 3916 y(VB-tree)25 b(approac)n(hes.)2040 4091 y(W)-6
b(e)24 b(b)r(egin)h(b)n(y)e(summarizing)i(the)f(notation)h(used)f(in)g
(this)g(section.)2246 4361 y Fm(n)p 2336 4383 4 75 v
90 w Fq(T)-6 b(otal)27 b(n)n(um)n(b)r(er)e(of)h(tuples)g(in)f(the)g
(relation)2257 4435 y Fm(s)p 2336 4458 V 89 w Fq(Num)n(b)r(er)g(of)h
(tuples)g(in)g(the)f(result)h(set)2265 4510 y Fm(t)p
2336 4532 V 89 w Fq(T)-6 b(otal)27 b(n)n(um)n(b)r(er)e(of)h(attributes)
g(in)f(the)h(relation)2268 4585 y Fm(l)p 2336 4607 V
91 w Fq(T)-6 b(otal)27 b(n)n(um)n(b)r(er)e(of)h(searc)n(hable)h
(attributes;)f(1)21 b Ft(\024)h Fm(l)g Ft(\024)f Fm(t)2102
4663 y Ft(j)p Fm(sig)s(n)p Ft(j)p 2336 4686 4 79 v 90
w Fq(Size)26 b(of)h(a)f(digital)g(signature:)36 b(128)27
b(b)n(ytes)e(for)h(RSA,)p 2336 4760 4 75 v 2382 4738
a(64)h(b)n(ytes)e(for)h(BGLS)2085 4816 y Ft(j)p Fm(hash)p
Ft(j)p 2336 4839 4 79 v 90 w Fq(Size)g(of)h(a)f(hash.)34
b(Default)26 b(=)g(20)g(b)n(ytes)2040 5034 y(W)-6 b(e)31
b(no)n(w)g(illustrate)h(the)f(bandwidth)g(and)f(computation)i(adv)l
(an-)2040 5121 y(tages)25 b(of)f(DSA)n(C)f(o)n(v)n(er)g(the)g(na)-9
b(\177)-30 b(\020v)n(e)24 b(approac)n(h)g(of)g(sending)g(and)f(v)n
(eri-)2040 5208 y(fying)e(individual)e(tuple)h(signatures.)34
b(In)19 b(our)h(exp)r(erimen)n(ts,)i(tuples)2040 5295
y(are)37 b(signed)g(with)g(the)g(RSA)e(signature)j(sc)n(heme)e(using)h
(a)g(1024-)2040 5382 y(bit)f(public)f(mo)r(dulus.)65
b(The)36 b(exp)r(erimen)n(ts)f(w)n(ere)i(conducted)e(on)p
2040 5422 797 4 v 2044 5476 a Fo(7)2078 5507 y Fq(Note)30
b(that)g(eac)n(h)g(of)h(the)e(successor)j(no)r(de)d Fm(R)3426
5515 y Fl(i)3448 5527 y Fg(k)q Ff(+1)3590 5507 y Fq(has)h
Fm(l)h Fq(\\imme-)2040 5594 y(diate)e(predecessor)h(no)r(des".)44
b(When)28 b(the)g(predecessor)i(along)f(one)2040 5669
y(dimension)22 b(c)n(hanges)f(due)g(to)g(the)g(new)g(insertion,)i(it)e
(b)r(ecomes)h(nec-)2040 5744 y(essary)27 b(to)g(recompute)g(the)g
(signatures)g(of)h(eac)n(h)f(of)g Fm(R)3649 5752 y Fl(i)3671
5764 y Fg(k)q Ff(+1)3783 5744 y Fq(.)38 b(In)26 b(or-)2040
5831 y(der)j(to)g(do)f(this,)i(the)e(hashes)i(corresp)r(onding)f(to)g
(the)f(other)h Fm(l)20 b Ft(\000)f Fq(1)2040 5906 y(dimensions)26
b(need)g(to)g(b)r(e)f(sen)n(t)h(bac)n(k)f(to)h(the)f(o)n(wner.)p
eop end
%%Page: 7 7
TeXDict begin 7 6 bop 27 240 3828 4 v 25 334 4 95 v 639
308 a Fe(Owner)1971 b(Serv)m(er)p 3853 334 V 25 465 4
131 v 225 429 a Fm(stmt)24 b Fq(=)h(Insert)h(tuple)f
Fm(r)i Fq(in)n(to)f(table)g Fm(T)1864 397 y Fd(stmt)1665
465 y Fc(\000)-34 b(\000)-26 b(\000)f(\000)h(\000)f(\000)g(\000)-34
b(!)p 3853 465 V 25 553 4 88 v 2460 526 a Fm(T)2505 534
y Fl(ins)2620 526 y Fq(=)21 b Ft(f)p Fq(\()p Fm(R)2827
534 y Fl(i)2849 546 y Fg(k)2890 526 y Fm(;)13 b(R)2982
534 y Fl(i)3004 546 y Fg(k)q Ff(+1)3115 526 y Fq(\))p
Ft(8)p Fm(i)22 b Ft(2)f(f)p Fq(1)p Fm(;)14 b(l)q Ft(g)p
Fm(;)g(T)3561 535 y Fl(h)3601 526 y Fm(;)f(\033)s Ft(g)p
3853 553 V 25 691 4 139 v 1876 622 a Fd(T)1925 634 y
Fb(ins)1677 691 y Fc( )-45 b(\000)-28 b(\000)i(\000)f(\000)h(\000)f
(\000)-46 b(\000)2657 652 y Fm(R)2715 660 y Fl(i)2737
672 y Fg(k)2778 652 y Fm(:A)2857 660 y Fl(i)2904 652
y Fm(<)21 b(r)n(:A)3097 660 y Fl(i)3144 652 y Fm(<)h(R)3284
660 y Fl(i)3306 672 y Fg(k)q Ff(+1)3417 652 y Fm(:A)3496
660 y Fl(i)p 3853 691 V 25 778 4 88 v 654 752 a Fq(V)-6
b(erify)25 b Fm(\033)s Fq(,)p 3853 778 V 25 866 V 161
839 a Fm(T)206 847 y Fl(sig)315 839 y Fq(=)c Fm(S)t(ig)s(n)p
Fq(\()p Fm(r)r Fq(\))p Fm(;)13 b(S)t(ig)s(n)p Fq(\()p
Fm(R)941 847 y Fl(i)963 859 y Fg(k)q Ff(+1)1074 839 y
Fq(\))p Ft(8)p Fm(i)21 b Ft(2)h(f)p Fq(1)p Fm(;)14 b(l)q
Ft(g)p 3853 866 V 25 1016 4 150 v 1879 935 a Fd(T)1928
947 y Fb(sig)1680 1016 y Fc(\000)-49 b(\000)-26 b(\000)f(\000)h(\000)f
(\000)g(\000)-49 b(!)p 3853 1016 V 25 1103 4 88 v 2653
1077 a Fq(Up)r(date)25 b Fm(T)36 b Fq(with)26 b Fm(r)i
Fq(and)d Fm(T)3439 1085 y Fl(sig)p 3853 1103 V 27 1106
3828 4 v 925 1254 a Fn(Figure)k(3:)39 b(Proto)r(col)32
b(to)e(insert)f(a)g(new)h(tuple)f(in)n(to)g(a)g(table)-152
1577 y Fq(a)39 b(P3-977MHz)g(Lin)n(ux)e(PC.)i(W)-6 b(e)37
b(used)h(the)f(p)r(opular)h(Op)r(enSSL)-152 1664 y(library[17])d(to)f
(implemen)n(t)f(all)h(cryptographic)f(functions.)57 b(Fig-)-152
1751 y(ure)27 b(4\(a\))h(compares)g(the)f(time)g(\(in)g(msec\))h(for)f
(query)f(v)n(eri\014cation)-152 1839 y(using)d(na)-9
b(\177)-30 b(\020v)n(e)22 b(approac)n(h)g(with)h(query)d(v)n
(eri\014cation)j(with)f(DSA)n(C)f(for)-152 1926 y(v)l(arying)35
b(size)i(of)f(the)f(result)h(set.)65 b(W)-6 b(e)35 b(can)h(see)g(that)f
(signature)-152 2013 y(aggregation)27 b(greatly)f(reduces)f(the)f
(computational)i(o)n(v)n(erhead)e(re-)-152 2100 y(quired)h(to)h(v)n
(erify)g(the)f(in)n(tegrit)n(y)g(of)i(the)e(result)h(set.)-152
2274 y(Figure)e(4\(b\))f(con)n(trasts)i(measured)e(bandwidth)g(o)n(v)n
(erhead)g(for)h(the)-152 2362 y(na)-9 b(\177)-30 b(\020v)n(e)20
b(approac)n(h)f(with)h(that)e(in)h(DSA)n(C.)g(Recall)h(that)f(the)f(na)
-9 b(\177)-30 b(\020v)n(e)20 b(ap-)-152 2449 y(proac)n(h)f(do)r(es)g
(not)g(pro)n(vide)f(completeness)i(guaran)n(tees.)33
b(In)18 b(DSA)n(C,)-152 2536 y(since)35 b(the)g(signatures)g(are)h(c)n
(hained)e(in)h(order)g(to)f(pro)n(vide)h(com-)-152 2623
y(pleteness,)g(w)n(e)d(need)f(to)h(send)g(additional)h(hashes.)53
b(Sp)r(eci\014cally)-6 b(,)-152 2710 y(when)20 b(the)g(searc)n(h)h
(predicate)g(in)n(v)n(olv)n(es)f(a)g(particular)i(attribute)e
Fm(A)1794 2718 y Fl(i)1820 2710 y Fq(,)-152 2797 y(for)30
b(eac)n(h)e(tuple)g(in)g(the)g(result)h(set,)g(w)n(e)g(need)f(to)h
(send)f(additional)-152 2885 y(hashes)34 b(corresp)r(onding)g(to)g(the)
f(immediate)h(predecessor)g(tuples)-152 2972 y(along)27
b(the)f(remaining)h(\()p Fm(l)18 b Ft(\000)f Fq(1\))27
b(searc)n(hable)g(attributes.)36 b(W)-6 b(e)25 b(sho)n(w)-152
3059 y(the)h(o)n(v)n(erhead)g(for)i(v)l(arying)e(sizes)h(of)g(the)f
(result)h(set)g(\(in)f(records\),)-152 3146 y(for)k Fm(l)d
Fq(=)g(5.)43 b(It)29 b(is)g(easy)g(to)g(see)g(that)g(although)g(DSA)n
(C)e(incurs)i(ad-)-152 3233 y(ditional)34 b(o)n(v)n(erhead)e(to)g(pro)n
(vide)g(completeness,)k(it)c(still)i(is)f(m)n(uc)n(h)-152
3320 y(more)27 b(bandwidth)d(e\016cien)n(t)i(than)f(the)h(na)-9
b(\177)-30 b(\020v)n(e)26 b(approac)n(h.)-152 3495 y(Next,)37
b(w)n(e)e(compare)g(our)g(sc)n(heme)f(with)h(AuthDS)e(and)h(VB-tree)
-152 3582 y(approac)n(hes.)-152 3756 y Fn(Storage)g(Costs:)k
Fq(In)28 b(AuthDS)e(sc)n(heme,)j(to)f(obtain)h(an)f(e\016cien)n(t)-152
3844 y(V)n(O)23 b(on)g(the)g(order)h(of)g Fm(O)r Fq(\()p
Fm(l)q(og)s Ft(j)p Fm(n)p Ft(j)p Fq(\))g(in)f(size)h(and,)g(more)g(imp)
r(ortan)n(tly)-6 b(,)-152 3931 y(to)33 b(pro)n(v)n(e)f(completeness)i
(of)g(a)f(range)g(query)-6 b(,)33 b(a)g(separate)h(B-tree)-152
4018 y(for)h(eac)n(h)f(searc)n(h)g(order)g(is)g(required.)58
b(Therefore,)37 b(for)e Fm(l)g Fq(searc)n(h-)-152 4105
y(able)41 b(attributes,)j(a)d(total)g(of)g Fm(l)h Fq(separate)f
(B-trees)g(need)e(to)i(b)r(e)-152 4192 y(pre-computed)c(and)g(stored)i
(at)f(the)f(serv)n(er.)71 b(F)-6 b(urthermore,)41 b(to)-152
4279 y(supp)r(ort)c(other,)k(more)d(adv)l(anced)e(queries,)41
b(suc)n(h)c(as)h(joins,)j(the)-152 4367 y(sc)n(heme)33
b(requires)g(separate)h(data)f(structures)f(for)i(eac)n(h)f(p)r
(ossible)-152 4454 y(query)-6 b(.)33 b(F)-6 b(or)26 b(example,)g(to)g
(supp)r(ort)f Fm(A)c Fh(1)g Fm(B)t Fq(,)26 b(the)f(authors)h(suggest)
-152 4541 y(pre-computing)19 b(a)h(tree)f(corresp)r(onding)h(to)g(the)f
(cartesian)h(pro)r(duct)-152 4628 y Fm(A)g Ft(\002)f
Fm(B)t Fq(.)46 b(Storing)30 b(these)f(trees)h(can)g(result)g(in)f
(enormous)h(storage)-152 4715 y(o)n(v)n(erhead.)54 b(F)-6
b(urther,)33 b(storing)g(m)n(ultiple)g(trees)f(for)h(the)f(same)h(re-)
-152 4802 y(lation)c(also)g(increases)g(the)e(cost)h(and)f(complexit)n
(y)h(of)g(the)f(up)r(date)-152 4890 y(op)r(erations)d(since)g(eac)n(h)f
(up)r(date)f(op)r(eration)i(results)g(in)e(recomput-)-152
4977 y(ing)27 b(the)f(tree)h(hashes)g(and)f(the)g(ro)r(ot)i(signatures)
f(for)h(all)f(the)f(trees)-152 5064 y(and)g(p)r(oten)n(tially)g(some)g
(tree)g(re-balancing)g(op)r(erations.)-152 5238 y(In)e(VB-tree)h(sc)n
(heme,)g(eac)n(h)g(attribute)g(v)l(alue)f(of)i(a)f(tuple)f(is)h(signed)
-152 5325 y(b)n(y)30 b(the)g(o)n(wner.)50 b(F)-6 b(urther,)31
b(eac)n(h)g(tuple)f(is)h(also)h(signed)f(in)f(its)h(en-)-152
5413 y(tiret)n(y)-6 b(.)70 b(Finally)-6 b(,)41 b(a)d(single)g(VB-tree)g
(is)g(constructed)f(p)r(er)g(table)-152 5500 y(where)27
b(individual)f(no)r(des)h(of)g(the)f(tree)h(are)f(also)i(signed.)37
b(This)27 b(in-)-152 5587 y(curs)h(a)g(substan)n(tial)h(storage)g(o)n
(v)n(erhead)e(of)i Fm(O)r Fq(\()p Fm(n)19 b Ft(\003)g
Fm(t)f Ft(\003)h(j)p Fm(sig)s(n)p Ft(j)g Fq(+)f Fm(t)g
Ft(\003)-152 5674 y(j)p Fm(sig)s(n)p Ft(j)p Fq(\))28
b(in)f(addition)h(to)g(the)f(cost)h(of)g(storing)h(the)e(VB)g(tree)h
(itself.)-152 5761 y(Th)n(us,)22 b(VB-tree)f(is)g(signi\014can)n(tly)g
(more)g(exp)r(ensiv)n(e)g(than)f(DSA)n(C)g(in)-152 5849
y(terms)30 b(of)g(storage.)47 b(F)-6 b(urthermore,)30
b(as)g(with)g(AuthDS)d(approac)n(h,)2040 1577 y(VB-tree)i(requires)h
(separate)h(pre-computed)d(data)i(structures)g(in)2040
1664 y(order)c(to)g(supp)r(ort)f(Join)i(queries.)2040
1839 y(In)i(comparison,)i(DSA)n(C)e(incurs)g(\014xed)f(storage)j(o)n(v)
n(erhead)d(of)i(one)2040 1926 y(signature)25 b(p)r(er)f(tuple)g(irresp)
r(ectiv)n(e)h(of)g(the)f(n)n(um)n(b)r(er)f(of)j(searc)n(hable)2040
2013 y(attributes)k(or)g(the)g(n)n(um)n(b)r(er)f(of)h(queries)g(to)g(b)
r(e)g(supp)r(orted.)47 b(This)2040 2100 y(lo)n(w)38 b(storage)g(cost)f
(renders)g(our)g(sc)n(heme)g(orders)g(of)g(magnitude)2040
2187 y(more)g(e\016cien)n(t)f(as)g(compared)h(to)f(b)r(oth)f(AuthDS)f
(and)i(VB-tree)2040 2274 y(approac)n(hes.)2040 2449 y
Fn(V)n(O)f(Size:)44 b Fq(In)30 b(this)h(analysis,)j(w)n(e)d(measure)h
(only)e(the)h(o)n(v)n(erhead)2040 2536 y(and)c(do)g(not)g(include)g
(the)g(size)h(of)g(the)f(actual)h(result)g(set.)39 b(In)27
b(Au-)2040 2623 y(thDS,)j(the)h(V)n(O)f(size)i(for)g(a)f(selection/pro)
t(jection)k(query)29 b(can)j(b)r(e)2040 2720 y(expressed)f(as:)46
b Fm(V)16 b(O)2644 2728 y Fl(siz)r(e)2791 2720 y Fq(=)30
b Ft(j)p Fm(s)p Ft(j)21 b(\002)3061 2664 y Fa(P)3142
2685 y Fl(k)3142 2743 y(i)3193 2720 y Ft(j)p Fm(hash)p
Ft(j)g Fq(+)f(\(2)13 b(log)i Ft(j)p Fm(n)p Ft(j)22 b(\000)e
Fq(1\))h Ft(\002)2040 2807 y(j)p Fm(hash)p Ft(j)27 b
Fq(+)e Ft(j)p Fm(sig)s(n)p Ft(j)h Fq(+)g(2\()p Ft(j)p
Fm(tupl)q(e)p Ft(j)p Fq(\))39 b(where)g Ft(f)p Fm(A)3342
2815 y Fl(i)3381 2807 y Fm(:)13 b(:)g(:)g(A)3541 2816
y Fl(k)3579 2807 y Ft(g)39 b Fq(are)h(the)e(\014l-)2040
2895 y(tered)32 b(attributes)g(of)h(eac)n(h)f(tuple.)54
b(2\()p Ft(j)p Fm(tupl)q(e)p Ft(j)p Fq(\))32 b(corresp)r(onds)h(to)f(2)
2040 2982 y(b)r(oundary)f(tuples)h(whic)n(h)g(are)h(released)g(to)f
(pro)n(v)n(e)g(completeness)2040 3069 y(and)i Ft(j)p
Fm(sig)s(n)p Ft(j)h Fq(corresp)r(onds)g(to)f(the)g(size)i(of)f(the)f
(signature)h(of)g(the)2040 3166 y(ro)r(ot.)57 b(Note)33
b(that)g Ft(j)p Fm(s)p Ft(j)22 b(\002)2804 3110 y Fa(P)2885
3130 y Fl(k)2885 3189 y(i)2936 3166 y Ft(j)p Fm(hash)p
Ft(j)34 b Fq(measures)g(the)e(hashes)h(cor-)2040 3253
y(resp)r(onding)26 b(to)g(\014ltered)f(attributes)g(and)h(\(2)13
b(log)i Ft(j)p Fm(n)p Ft(j)i(\000)g Fq(1\))g Ft(\002)f(j)p
Fm(hash)p Ft(j)2040 3340 y Fq(measures)22 b(additional)h(hashes)e(that)
g(m)n(ust)g(b)r(e)g(sen)n(t)g(to)h(re-compute)2040 3427
y(the)j(ro)r(ot)i(of)f(the)g(B-tree.)2040 3602 y(In)g(VB-tree,)h(the)f
(V)n(O)f(size)j(for)f(a)g(selection/pro)t(jection)i(query)d(is:)2040
3699 y Fm(V)17 b(O)2160 3707 y Fl(siz)r(e)2298 3699 y
Fq(=)k Ft(j)p Fm(s)p Ft(j)7 b(\002)2531 3643 y Fa(P)2612
3663 y Fl(k)2612 3722 y(i)2663 3699 y Ft(j)p Fm(sig)s(n)p
Ft(j)g Fq(+)g(\(2)13 b(log)i Ft(j)p Fm(s)p Ft(j)7 b(\000)g
Fq(1\))g Ft(\002)g(j)p Fm(sig)s(n)p Ft(j)21 b Fq(where)g(log)15
b Ft(j)p Fm(s)p Ft(j)2040 3786 y Fq(is)28 b(the)f(heigh)n(t)h(of)g(the)
f(en)n(v)n(eloping)g(tree)h(and)f Ft(f)p Fm(A)3493 3794
y Fl(i)3532 3786 y Fm(:)13 b(:)g(:)g(A)3692 3795 y Fl(k)3730
3786 y Ft(g)28 b Fq(are)g(the)2040 3873 y(\014ltered)36
b(attributes)g(of)h(eac)n(h)g(tuple.)65 b(Note)36 b(that)g(this)h(V)n
(O)e(cost)2040 3960 y(assumes)c(that)e(the)g(searc)n(h)h(is)g(b)r(eing)
f(done)h(on)f(the)g(primary)h(k)n(ey)-6 b(.)2040 4048
y(In)28 b(this)i(case,)h(a)e(set)g(of)h(con)n(tiguous)g(tuples)f(is)g
(returned)f(and)h(the)2040 4135 y(additional)37 b(o)n(v)n(erhead)f(is)g
Fm(O)r Fq(\()p Fm(l)q(og)s Ft(j)p Fm(s)p Ft(j)p Fq(\))h(signed)f
(digests.)66 b(Ho)n(w)n(ev)n(er,)2040 4222 y(if)36 b(the)f(searc)n(h)h
(is)g(on)g(a)g(non-primary)f(k)n(ey)f(attribute,)k(then)d(the)2040
4309 y(en)n(v)n(eloping)23 b(tree)f(can)h(b)r(ecome)g(quite)f(large)i
(\(p)r(oten)n(tially)-6 b(,)23 b(as)g(large)2040 4396
y(as)h(the)f(en)n(tire)h(B-tree\))g(and)f(signed)h(digests)g(corresp)r
(onding)h(to)f(all)2040 4483 y(tuples)c(that)f(are)i(not)e(part)h(of)h
(the)e(result)h(set)g(need)f(to)h(b)r(e)g(returned.)2040
4658 y(F)-6 b(or)25 b(the)f(prop)r(osed)h(DSA)n(C)f(approac)n(h,)h(the)
f(V)n(O)g(size)i(is)f(expressed)2040 4745 y(as:)55 b
Fm(V)17 b(O)2304 4753 y Fl(siz)r(e)2459 4745 y Fq(=)37
b Ft(j)p Fm(sig)s(n)p Ft(j)24 b Fq(+)f Ft(j)p Fm(s)p
Ft(j)h(\002)g Fq(\()3069 4689 y Fa(P)3150 4709 y Fl(k)3150
4768 y(i)3201 4745 y Ft(j)p Fm(hash)p Ft(j)g Fq(+)3515
4689 y Fa(P)3596 4709 y Fl(l)p Fk(\000)p Fo(1)3596 4768
y(1)3712 4745 y Ft(j)p Fm(hash)p Ft(j)p Fq(\))g(+)2040
4832 y(2\()p Ft(j)p Fm(tupl)q(e)p Ft(j)p Fq(\).)35 b(W)-6
b(e)25 b(send)g(bac)n(k)g(a)g(condensed/aggregated)j(signature)2040
4919 y(to)e(v)n(erify)f(the)g(correctness)i(and)e(completeness)i(of)f
(the)f(result)h(set.)2040 5007 y(Figure)33 b(4\(c\))f(sho)n(ws)g(the)g
(V)n(O)f(size)h(o)n(v)n(erheads)g(for)h(the)e(AuthDS,)2040
5094 y(VB-tree)h(and)g(DSA)n(C)g(approac)n(hes.)56 b(As)32
b(can)h(b)r(e)f(seen)h(from)g(the)2040 5181 y(\014gure,)d(VB-tree)e
(approac)n(h)h(incurs)f(v)n(ery)g(high)g(bandwidth)g(o)n(v)n(er-)2040
5268 y(heads.)60 b(DSA)n(C)33 b(approac)n(h)h(is)h(as)f(e\016cien)n(t)h
(as)f(the)g(AuthDS)e(ap-)2040 5355 y(proac)n(h)27 b(while)h(requiring)f
(the)f(storage)i(of)g(a)f(single)h(signature)g(p)r(er)2040
5442 y(record.)2040 5617 y(Our)34 b(sc)n(heme)h(incurs)g(an)f(o)n(v)n
(erhead)h(of)g(\()p Ft(j)p Fm(s)p Ft(j)23 b(\002)3472
5561 y Fa(P)3553 5581 y Fl(l)p Fk(\000)p Fo(1)3553 5640
y(1)3669 5617 y Ft(j)p Fm(hash)p Ft(j)p Fq(\))35 b(for)2040
5704 y(guaran)n(teeing)30 b(completeness.)46 b(This)30
b(is)f(b)r(ecause)h(w)n(e)f(need)g(to)g(in-)2040 5791
y(clude)e(the)f(hashes)h(of)g(the)g(immediate)g(predecessor)h(tuples)e
(along)2040 5878 y(ev)n(ery)d(searc)n(hable)i(attribute)f(while)h
(computing)f(the)f(signature)i(of)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop -98 1146 a
 currentpoint currentpoint translate 0.43307 0.43307 scale neg exch
neg exch translate
 -98 1146 a @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: ver.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: ver.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Feb 25 19:29:25 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -93 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 280 scalefont setfont
1.000 UL
LTb
1428 840 M
63 0 V
5233 0 R
-63 0 V
-5401 0 R
(0) Rshow
1428 1269 M
63 0 V
5233 0 R
-63 0 V
-5401 0 R
(200) Rshow
1428 1699 M
63 0 V
5233 0 R
-63 0 V
-5401 0 R
(400) Rshow
1428 2128 M
63 0 V
5233 0 R
-63 0 V
-5401 0 R
(600) Rshow
1428 2557 M
63 0 V
5233 0 R
-63 0 V
-5401 0 R
(800) Rshow
1428 2987 M
63 0 V
5233 0 R
-63 0 V
-5401 0 R
(1000) Rshow
1428 3416 M
63 0 V
5233 0 R
-63 0 V
-5401 0 R
(1200) Rshow
1428 3845 M
63 0 V
5233 0 R
-63 0 V
-5401 0 R
(1400) Rshow
1428 4275 M
63 0 V
5233 0 R
-63 0 V
-5401 0 R
(1600) Rshow
1428 4704 M
63 0 V
5233 0 R
-63 0 V
-5401 0 R
(1800) Rshow
1427 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
(0) Cshow
2487 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
(2000) Cshow
3546 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
(4000) Cshow
4605 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
(6000) Cshow
5665 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
(8000) Cshow
6724 840 M
0 63 V
0 3801 R
0 -63 V
0 -4081 R
(10000) Cshow
1.000 UL
LTb
1428 840 M
5296 0 V
0 3864 V
-5296 0 V
0 -3864 V
280 2772 M
currentpoint gsave translate 90 rotate 0 0 M
(VerificationTime \(mSec\)) Cshow
grestore
4076 140 M
(Result Set) Cshow
2.500 UP
1.000 UL
LT0
5391 4501 M
(Naive) Rshow
5559 4501 M
829 0 V
1428 840 M
52 35 V
477 309 V
4076 2558 L
6724 4276 L
1428 840 Pls
1480 875 Pls
1957 1184 Pls
4076 2558 Pls
6724 4276 Pls
5973 4501 Pls
2.500 UP
1.000 UL
LT1
5391 4221 M
(DSac) Rshow
5559 4221 M
829 0 V
1428 840 M
52 10 V
477 85 V
2119 378 V
2648 474 V
1428 840 Box
1480 850 Box
1957 935 Box
4076 1313 Box
6724 1787 Box
5973 4221 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial -98 1146 a
 currentpoint currentpoint translate 1 0.43307 div 1 0.43307 div scale
neg exch neg exch translate
 -98 1146 a 1291 1146 a
 currentpoint currentpoint translate 0.43307 0.43307 scale neg exch
neg exch translate
 1291 1146
a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury 3600
@rwi @setspecial
%%BeginDocument: bw2.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: bw2.eps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Feb 25 19:28:43 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 240 scalefont setfont
1.000 UL
LTb
936 720 M
63 0 V
5793 0 R
-63 0 V
792 720 M
(0) Rshow
936 1526 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
(5) Rshow
936 2333 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
(10) Rshow
936 3139 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
(15) Rshow
936 3946 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
(20) Rshow
936 4752 M
63 0 V
5793 0 R
-63 0 V
-5937 0 R
(25) Rshow
2060 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
(20) Cshow
3243 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
(40) Cshow
4426 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
(60) Cshow
5609 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
(80) Cshow
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
(100) Cshow
1.000 UL
LTb
936 720 M
5856 0 V
0 4032 V
-5856 0 V
936 720 L
240 2736 M
currentpoint gsave translate 90 rotate 0 0 M
(VO Size \(kBytes\)) Cshow
grestore
3864 120 M
(Result Set) Cshow
2.500 UP
1.000 UL
LT0
5627 4569 M
(Naive) Rshow
5771 4569 M
733 0 V
936 753 M
532 295 V
888 491 V
1478 819 V
1479 819 V
1479 819 V
936 753 Pls
1468 1048 Pls
2356 1539 Pls
3834 2358 Pls
5313 3177 Pls
6792 3996 Pls
6137 4569 Pls
2.500 UP
1.000 UL
LT1
5627 4329 M
(DSac) Rshow
5771 4329 M
733 0 V
936 753 M
532 113 V
888 189 V
1478 315 V
1479 315 V
1479 315 V
936 753 Box
1468 866 Box
2356 1055 Box
3834 1370 Box
5313 1685 Box
6792 2000 Box
6137 4329 Box
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 1291 1146 a
 currentpoint currentpoint translate 1 0.43307 div 1 0.43307 div scale
neg exch neg exch translate
 1291 1146 a 2680 1146 a
 currentpoint currentpoint translate 0.43307 0.43307 scale neg exch
neg exch translate
 2680
1146 a @beginspecial 50 @llx 50 @lly 410 @urx 302 @ury
3600 @rwi @setspecial
%%BeginDocument: vosize.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: vosize.eps
%%Creator: gnuplot 3.8j patchlevel 0
%%CreationDate: Tue May 31 00:29:15 2005
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Roman) findfont 240 scalefont setfont
1.000 UL
LTb
1512 720 M
63 0 V
5217 0 R
-63 0 V
-5361 0 R
gsave 0 setgray
( 0) Rshow
grestore
1.000 UL
LTb
1512 1224 M
63 0 V
5217 0 R
-63 0 V
-5361 0 R
gsave 0 setgray
( 5000) Rshow
grestore
1.000 UL
LTb
1512 1728 M
63 0 V
5217 0 R
-63 0 V
-5361 0 R
gsave 0 setgray
( 10000) Rshow
grestore
1.000 UL
LTb
1512 2232 M
63 0 V
5217 0 R
-63 0 V
-5361 0 R
gsave 0 setgray
( 15000) Rshow
grestore
1.000 UL
LTb
1512 2736 M
63 0 V
5217 0 R
-63 0 V
-5361 0 R
gsave 0 setgray
( 20000) Rshow
grestore
1.000 UL
LTb
1512 3240 M
63 0 V
5217 0 R
-63 0 V
-5361 0 R
gsave 0 setgray
( 25000) Rshow
grestore
1.000 UL
LTb
1512 3744 M
63 0 V
5217 0 R
-63 0 V
-5361 0 R
gsave 0 setgray
( 30000) Rshow
grestore
1.000 UL
LTb
1512 4248 M
63 0 V
5217 0 R
-63 0 V
-5361 0 R
gsave 0 setgray
( 35000) Rshow
grestore
1.000 UL
LTb
1512 4752 M
63 0 V
5217 0 R
-63 0 V
-5361 0 R
gsave 0 setgray
( 40000) Rshow
grestore
1.000 UL
LTb
6792 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 15) Cshow
grestore
1.000 UL
LTb
6038 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 14) Cshow
grestore
1.000 UL
LTb
5283 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 13) Cshow
grestore
1.000 UL
LTb
4529 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 12) Cshow
grestore
1.000 UL
LTb
3775 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 11) Cshow
grestore
1.000 UL
LTb
3021 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
2266 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 9) Cshow
grestore
1.000 UL
LTb
1512 720 M
0 63 V
0 3969 R
0 -63 V
0 -4209 R
gsave 0 setgray
( 8) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1512 720 M
5280 0 V
0 4032 V
-5280 0 V
0 -4032 V
LTb
240 2736 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(VO Size \(KBytes\)) Cshow
grestore
grestore
LTb
4152 120 M
gsave 0 setgray
(log2 Result Set\(in Records\)) Cshow
grestore
2.500 UP
2.500 UP
1.000 UL
LT0
LTb
5627 4569 M
gsave 0 setgray
(AuthDS) Rshow
grestore
LT0
5771 4569 M
733 0 V
1512 725 M
754 5 V
755 9 V
754 18 V
754 38 V
754 74 V
755 149 V
754 297 V
1512 725 Pls
2266 730 Pls
3021 739 Pls
3775 757 Pls
4529 795 Pls
5283 869 Pls
6038 1018 Pls
6792 1315 Pls
6137 4569 Pls
2.500 UP
1.000 UL
LT1
LTb
5627 4329 M
gsave 0 setgray
(VB-tree) Rshow
grestore
LT1
5771 4329 M
733 0 V
1512 750 M
754 30 V
755 59 V
754 119 V
754 238 V
754 476 V
755 951 V
754 1902 V
1512 750 Crs
2266 780 Crs
3021 839 Crs
3775 958 Crs
4529 1196 Crs
5283 1672 Crs
6038 2623 Crs
6792 4525 Crs
6137 4329 Crs
2.500 UP
1.000 UL
LT2
LTb
5627 4089 M
gsave 0 setgray
(DSAC) Rshow
grestore
LT2
5771 4089 M
733 0 V
1512 726 M
754 7 V
755 12 V
754 25 V
754 49 V
754 99 V
755 199 V
754 396 V
1512 726 Box
2266 733 Box
3021 745 Box
3775 770 Box
4529 819 Box
5283 918 Box
6038 1117 Box
6792 1513 Box
6137 4089 Box
1.000 UL
LTb
1512 720 M
5280 0 V
0 4032 V
-5280 0 V
0 -4032 V
2.500 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman

%%EndDocument
 @endspecial 2680 1146 a
 currentpoint currentpoint translate 1 0.43307 div 1 0.43307 div scale
neg exch neg exch translate
 2680 1146 a -152 1323 a Fn(Figure)31
b(4:)41 b(\(a\))32 b(Query)f(V)-7 b(eri\014cation)30
b(Costs)h(compared)g(to)g(na)-10 b(\177)-34 b(\020v)n(e,)29
b(\(b\))j(Bandwidth)f(Costs)g(compared)g(to)g(na)-10
b(\177)-34 b(\020v)n(e,)29 b(\(c\))j(V)n(O)-152 1411
y(Size)d(Costs)h(compared)g(to)g(AuthDS)g(and)f(VB-tree)-152
1545 y Fq(a)24 b(tuple.)34 b(One)23 b(w)n(a)n(y)g(to)h(reduce)f(this)h
(o)n(v)n(erhead)f(w)n(ould)h(b)r(e)f(to)h(trade)-152
1632 y(storage)f(e\016ciency)e(to)g(gain)h(bandwidth)e(e\016ciency)h(b)
n(y)f(using)h(m)n(ul-)-152 1719 y(tiple)27 b(signature)h(c)n(hains.)37
b(F)-6 b(urthermore,)27 b(w)n(e)g(can)g(reduce)f(the)h(V)n(O)-152
1807 y(size)j(while)g(main)n(taining)h(a)e(single)h(signature)g(c)n
(hain)g(b)n(y)e(utilizing)-152 1894 y(secure)33 b(hashing)f(tec)n
(hniques)g(describ)r(ed)g(in)g([2,)i(3].)55 b(These)33
b(tec)n(h-)-152 1981 y(niques,)d(whic)n(h)f(are)g(prop)r(osed)g(mainly)
g(in)f(the)h(con)n(text)f(of)i(Incre-)-152 2068 y(men)n(tal)21
b(Hashing,)h(compute)f(the)f(hash)h(of)g(a)g(message)h(b)n(y)e
(breaking)-152 2155 y(the)31 b(message)h(in)n(to)f(smaller)i(blo)r(c)n
(ks)e(and)g(com)n(bining)g(the)f(hashes)-152 2242 y(of)c(individual)f
(blo)r(c)n(ks)g(b)n(y)f(using)h(a)g(\\compression)h(function".)35
b(W)-6 b(e)-152 2330 y(skip)35 b(the)g(details)g(but)f(w)n(ould)i(lik)n
(e)f(to)g(men)n(tion)g(that)f(this)h(fam-)-152 2417 y(ily)29
b(of)g(hash)g(functions)g(can)g(b)r(e)f(adapted)g(for)i(use)e(in)h(our)
g(sc)n(heme)-152 2504 y(in)35 b(order)g(to)f(send)h(bac)n(k)f(a)h
(single)g(\\compressed")h(hash)f(for)g(the)-152 2591
y(tuple)26 b(instead)h(of)g(sending)f(one)g(hash)g(along)h(eac)n(h)g
(searc)n(h)f(dimen-)-152 2678 y(sion.)34 b(F)-6 b(urther,)20
b(the)g(same)g(tec)n(hnique)f(can)h(also)h(b)r(e)f(used)g(to)g(reduce)
-152 2765 y(the)j(bandwidth)f(o)n(v)n(erhead)h(asso)r(ciated)i(with)e
(Pro)t(jection)i(queries.)-152 2853 y(The)d(detailed)f(description)g
(of)h(this)f(tec)n(hnique)f(is)i(out)f(of)g(the)g(scop)r(e)-152
2940 y(of)27 b(the)e(curren)n(t)g(w)n(ork.)-152 3114
y Fn(Query)46 b(V)-7 b(eri\014cation)46 b(Costs:)62 b
Fq(Query)39 b(v)n(eri\014cation)h(in)g(b)r(oth)-152 3201
y(AuthDS)34 b(and)h(DSA)n(C)g(approac)n(hes)h(in)n(v)n(olv)n(e)f
(computing)g(simple)-152 3288 y(hashes)j(and)f(com)n(bining)h(them)f
(and)g(v)n(erifying)h(a)g(single)g(signa-)-152 3376 y(ture)23
b(to)h(v)n(erify)f(the)f(correctness)j(and)d(completeness)j(of)f(the)e
(result)-152 3463 y(set.)44 b(In)29 b(comparison,)i(VB-tree)d(in)n(v)n
(olv)n(es)h(p)r(erforming)h(a)f(n)n(um)n(b)r(er)-152
3550 y(of)24 b(signature)f(v)n(eri\014cations)h(\(since)f(the)f(sc)n
(heme)h(returns)g(\\signed")-152 3637 y(digests\).)65
b(Since)36 b(signature)g(v)n(eri\014cation)g(is)g(v)n(ery)e(exp)r
(ensiv)n(e)h(as)-152 3724 y(compared)29 b(to)g(hashing,)g(this)g(sc)n
(heme)f(is)h(computationally)g(more)-152 3812 y(exp)r(ensiv)n(e.)-152
3986 y(In)24 b(summary)-6 b(,)24 b(the)g(prop)r(osed)h(DSA)n(C)e(sc)n
(heme)i(is)g(clearly)g(more)g(ef-)-152 4073 y(\014cien)n(t)20
b(in)g(terms)g(of)g(computation,)i(storage,)h(bandwidth)c(and)g(also)
-152 4160 y(pro)n(vides)24 b(a)f(ric)n(her)h(set)f(of)h(features)h(as)f
(compared)g(to)f(the)g(VB-tree)-152 4247 y(approac)n(h.)46
b(When)28 b(compared)i(to)f(AuthDS,)f(DSA)n(C)g(is)i(v)n(ery)e(e\016-)
-152 4335 y(cien)n(t)f(in)h(terms)f(of)h(storage)h(and)e(is)h(as)f
(e\016cien)n(t)h(for)g(V)n(O)e(size)i(and)-152 4422 y(v)n
(eri\014cation)g(costs.)42 b(Both)28 b(AuthDS)e(and)h(DSA)n(C)g
(require)h(exp)r(en-)-152 4509 y(siv)n(e)g(signature)g(recomputations)g
(for)g(tuple)f(inserts)h(and)f(deletes.)-152 4596 y(\(F)-6
b(or)34 b(AuthDS,)d(the)i(ro)r(ots)i(of)f(all)g(the)f(B-trees)h(of)g
(that)f(relation)-152 4683 y(need)j(to)g(b)r(e)g(recomputed)f(b)n(y)g
(the)g(o)n(wner)i(whereas)g(for)f(DSA)n(C,)-152 4770
y(follo)n(wing)i(an)c(up)r(date)g(op)r(eration,)k(the)d(signatures)g
(of)h Fm(l)g Fq(succes-)-152 4858 y(sor)30 b(no)r(des)g(need)f(to)h(b)r
(e)f(recomputed\).)45 b(Ho)n(w)n(ev)n(er,)31 b(as)f(tuples)f(are)-152
4945 y(inserted)d(and)g(deleted)g(o)n(v)n(er)g(time,)g(AuthDS)e(in)n(v)
n(olv)n(es)i(additional)-152 5032 y(in)n(tensiv)n(e)i(op)r(erations,)j
(suc)n(h)c(as)i(re-balancing)g(\(one)f(or)h(more\))g(b-)-152
5119 y(trees)d(in)g(addition)g(to)g(re-calculating)h(signatures)g(for)f
(all)h(ro)r(ots.)-152 5378 y Fr(7.)100 b(FUTURE)25 b(DIRECTIONS)-152
5470 y Fq(Another)17 b(desired)h(prop)r(ert)n(y)e(of)i(ODB)g(in)n
(tegrit)n(y)f(is)h(to)f(ensure)h Fp(fr)l(esh-)-152 5557
y(ness)37 b Fq(of)31 b(query)e(replies.)48 b Fp(F)-6
b(r)l(eshness)39 b Fq(means)31 b(the)e(assurance)i(that)-152
5644 y(the)c(query)f(reply)g(w)n(as)i(generated)f(with)h(resp)r(ect)f
(to)g(the)g(most)g(re-)-152 5731 y(cen)n(t)34 b(snapshot)h(of)g(the)e
(database.)61 b(\(F)-6 b(or)34 b(static)h(databases)h(this)-152
5818 y(requiremen)n(t)29 b(is)h(trivially)f(met.\))45
b(Belo)n(w,)32 b(w)n(e)d(outline)h(one)f(p)r(ossi-)-152
5906 y(ble)j(mec)n(hanism)g(that)g(aids)g(in)f(prev)n(en)n(ting)g(the)h
(serv)n(er)f(from)i Fp(r)l(e-)2040 1545 y(playing)j Fq(old)30
b(signature)g(c)n(hains.)47 b(T)-6 b(o)30 b(pro)n(vide)f(freshness,)j
(w)n(e)d(can)2040 1632 y(use)h(a)h(single)g(Merkle)g(Hash)f(T)-6
b(ree)30 b({)h(referred)f(to)h(as)f(an)h(FT)-6 b(ree)30
b({)2040 1719 y(for)h(the)f(en)n(tire)g(relation.)48
b(The)31 b(ro)r(ot)f(of)h(the)f(FT)-6 b(ree)30 b(is)h(signed)g(b)n(y)
2040 1807 y(the)24 b(data)i(o)n(wner)f(and)f(is)i(assumed)f(to)g(b)r(e)
f(published)h(and/or)g(sen)n(t)2040 1894 y(to)32 b(all)h(the)f
(queriers.)53 b(When)32 b(a)g(query)f(is)h(p)r(osed,)i(the)e(serv)n
(er,)i(in)2040 1981 y(addition)25 b(to)g(the)f(result)h(set,)h(pro)n
(vides)f(the)f(path)g(from)i(the)e(result)2040 2068 y(set)j(to)g(the)f
(ro)r(ot)i(of)f(the)g(FT)-6 b(ree)27 b(and)f(rev)n(eals)i(the)e(ro)r
(ot)h(signature.)2040 2155 y(Up)r(on)j(receiving)h(a)f(query)g(reply)-6
b(,)31 b(the)f(querier)g(can)g(v)n(erify)g(fresh-)2040
2242 y(ness)j(b)n(y)e(recomputing)h(the)g(ro)r(ot)h(of)g(the)f(FT)-6
b(ree)33 b(and)f(v)l(alidating)2040 2330 y(it)d(b)n(y)f(v)n(erifying)h
(the)g(o)n(wner's)h(signature.)45 b(The)29 b(signature)h(of)g(the)2040
2417 y(ro)r(ot)g(is)g(refreshed)f(p)r(erio)r(dically)i(\(b)n(y)d(the)h
(o)n(wner\))g(in)h(accordance)2040 2504 y(with)d(a)f(system-wide)h
(freshness)g(p)r(olicy)-6 b(,)27 b(th)n(us)e(ensuring)i(that)f(the)2040
2591 y(data)32 b(is)h(fairly)f(recen)n(t.)53 b(As)32
b(part)f(of)i(our)f(future)f(w)n(ork,)j(w)n(e)f(plan)2040
2678 y(to)28 b(study)e(this)h(problem)h(in)f(depth.)39
b(W)-6 b(e)27 b(also)i(plan)e(to)g(conduct)g(a)2040 2765
y(detailed)g(study)f(of)h(the)f(applicabilit)n(y)h(of)h(our)e(approac)n
(h)h(to)g(other)2040 2853 y(more)f(adv)l(anced)f(query)g(t)n(yp)r(es.)
2040 3059 y Fr(8.)99 b(CONCLUSIONS)2040 3150 y Fq(This)19
b(w)n(ork)f(explored)g(the)g(problem)g(of)h(authen)n(ticit)n(y)e(and)h
(in)n(tegrit)n(y)2040 3237 y(of)30 b(query)e(replies)i(in)e(outsourced)
i(databases.)45 b(In)28 b(particular,)j(w)n(e)2040 3324
y(dev)n(elop)r(ed)19 b(a)g(new)g(approac)n(h)g(\(DSA)n(C\))f(based)h
(of)h(signature)g(aggre-)2040 3412 y(gation)27 b(and)f(c)n(haining)g
(whic)n(h)g(ac)n(hiev)n(es)g(authen)n(tication)g(of)h(query)2040
3499 y(replies.)58 b(The)34 b(main)f(con)n(tributions)h(of)g(this)f(w)n
(ork)g(are)h(the)f(pro-)2040 3586 y(p)r(osed)17 b(signature)h(c)n
(haining)g(mec)n(hanism)f(whic)n(h)h(pro)n(vides)f(evidence)2040
3673 y(of)31 b(completeness)h(of)f(query)f(result)h(set)f(and)h(the)f
(analysis)i(whic)n(h)2040 3760 y(sheds)k(ligh)n(t)g(on)f(the)h
(applicabilit)n(y)g(of)g(our)g(sc)n(heme)g(for)g(v)l(arious)2040
3847 y(query)25 b(t)n(yp)r(es)h(in)g(the)g(relational)i(mo)r(del.)37
b(W)-6 b(e)26 b(also)i(compared)f(our)2040 3935 y(approac)n(h)c(to)g
(the)g(state-of-the-art)g(in)g(authen)n(ticated)g(publishing)2040
4022 y(whic)n(h)j(is)g(based)g(on)f(authen)n(ticated)h(data)g
(structures.)2040 4228 y Fr(9.)99 b(REFERENCES)2078 4303
y Fq([1])39 b(M.)26 b(Bellare,)i(J.)e(Gara)n(y)-6 b(,)26
b(and)g(T.)g(Rabin.)g(F)-6 b(ast)25 b(batc)n(h)2197 4377
y(v)n(eri\014cation)h(for)g(mo)r(dular)h(exp)r(onen)n(tiation)e(and)h
(digital)2197 4452 y(signatures.)h(In)e Fp(Eur)l(o)l(crypt)30
b(1998)p Fq(.)2078 4563 y([2])39 b(M.)26 b(Bellare,)i(O.)e(Goldreic)n
(h,)g(and)g(S.)f(Goldw)n(asser.)2197 4638 y(Incremen)n(tal)h
(cryptograph)n(y)e(and)i(application)g(to)g(virus)2197
4713 y(protection.)g(In)f Fp(27th)k(A)n(nnual)f(Symp)l(osium)f(of)h
(The)l(ory)g(of)2197 4788 y(Computing)p Fq(,)e(1995.)2078
4899 y([3])39 b(M.)26 b(Bellare)i(and)d(D.)h(Micciancio.)i(A)d(new)h
(paradigm)g(for)2197 4974 y(collsion-free)i(hashing:)35
b(Incremen)n(talit)n(y)25 b(at)h(reduced)f(cost.)2197
5048 y(In)g Fp(EUR)n(OCR)-6 b(YPT)27 b('1997)p Fq(.)2078
5160 y([4])39 b(M.)26 b(Bellare)i(and)d(P)-6 b(.)26 b(Roga)n(w)n(a)n(y)
-6 b(.)26 b(Random)f(oracles)j(are)2197 5235 y(practical:)36
b(a)26 b(paradigm)g(for)h(designing)f(e\016cien)n(t)g(proto)r(cols.)
2197 5309 y(In)f Fp(A)n(CM)i(Pr)l(ess)p Fq(,)g(pages)g(62{73,)h(1993.)
2078 5421 y([5])39 b(D.)26 b(Boneh,)g(C.)g(Gen)n(try)-6
b(,)25 b(B.)h(Lynn,)f(and)g(H.)h(Shac)n(ham.)2197 5495
y(Aggregate)h(and)e(V)-6 b(eri\014ably)25 b(Encrypted)g(Signatures)h
(from)2197 5570 y(Bilinear)h(Maps.)g(In)e Fp(EUR)n(OCR)-6
b(YPT)27 b('2003)p Fq(,)f(2003.)2078 5681 y([6])39 b(P)-6
b(.)26 b(Dev)l(an)n(bu,)e(M.)i(Gertz,)h(C.)f(Martel,)h(and)e(S.)h(G.)
2197 5756 y(Stubblebine.)f(Authen)n(tic)f(third-part)n(y)g(data)i
(publication.)2197 5831 y(In)f Fp(14th)j(IFIP)f(11.3)h(Working)g
(Confer)l(enc)l(e)g(in)g(Datab)l(ase)2197 5906 y(Se)l(curity)p
Fq(,)f(pages)g(101{112,)i(2000.)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop -113 319 a Fq([7])38 b(H.)26 b(Hacig)r(\177)-41
b(um)r(\177)g(u)n(\030)-32 b(s,)28 b(B.)e(Iy)n(er,)g(C.)g(Li,)g(and)g
(S.)f(Mehrotra.)5 394 y(Executing)h(SQL)f(o)n(v)n(er)g(Encrypted)g
(Data)h(in)f(the)5 469 y(Database-Service-Pro)n(vider)h(Mo)r(del.)h(In)
e Fp(SIGMOD)p Fq(,)g(2002.)-113 575 y([8])38 b(H.)26
b(Hacig)r(\177)-41 b(um)r(\177)g(u)n(\030)-32 b(s,)28
b(B.)e(Iy)n(er,)g(and)f(S.)h(Mehrotra.)g(Encrypted)5
650 y(Database)h(In)n(tegrit)n(y)d(in)i(Database)g(Service)g(Pro)n
(vider)5 725 y(Mo)r(del.)h(In)e Fp(CSES'02)j(IFIP)e(WCC)p
Fq(,)g(2002.)-113 831 y([9])38 b(H.)26 b(Hacig)r(\177)-41
b(um)r(\177)g(u)n(\030)-32 b(s,)28 b(B.)e(Iy)n(er,)g(and)f(S.)h
(Mehrotra.)g(Pro)n(viding)5 906 y(Database)h(as)f(a)g(Service.)g(In)f
Fp(ICDE)p Fq(,)g(2002.)-152 1012 y([10])39 b(B.)26 b(Hore,)h(S.)e
(Mehrotra,)i(and)e(G.)i(Tsudik.)e(A)5 1087 y(Priv)l(acy-Preserving)h
(Index)e(for)j(Range)f(Queries.)g(In)5 1162 y Fp(VLDB)p
Fq(,)g(2004.)-152 1268 y([11])39 b(A.)26 b(Joux)f(and)h(K.)f(Nguy)n
(en.)g(Separating)h(Decision)5 1343 y(Di\016e-Hellman)g(from)g
(Di\016e-Hellman)g(in)g(cryptographic)5 1417 y(groups.)h(In)e
Fp(Cryptolo)l(gy)k(ePrint)f(A)n(r)l(chive)p Fq(,)f(n)n(um)n(b)r(er)5
1492 y(2001/003,)i(2001.)-152 1599 y([12])39 b(C.)27
b(Martel,)g(G.)f(Nuc)n(k)n(olls,)g(P)-6 b(.)26 b(Dev)l(an)n(bu,)e(M.)i
(Gertz,)5 1673 y(A.)f(Kw)n(ong,)h(and)e(S.)h(G.)h(Stubblebine.)e(A)g
(general)i(mo)r(del)g(for)5 1748 y(authen)n(ticated)f(data)h
(structures.)g Fp(A)n(lgorithmic)l(a)p Fq(,)h(39\(1\),)5
1823 y(Jan)n(uary)f(2004.)-152 1929 y([13])39 b(A.)26
b(J.)g(Menezes,)h(P)-6 b(.)26 b(C.)g(v)l(an)f(Oorsc)n(hot,)h(and)g(S.)f
(A.)5 2004 y(V)-6 b(anstone.)26 b Fp(Handb)l(o)l(ok)j(of)e(applie)l(d)h
(crypto)l(gr)l(aphy)p Fq(.)h(CR)n(C)5 2079 y(Press,)e(1997.)h(ISBN)d
(0-8493-8523-7.)-152 2185 y([14])39 b(R.)26 b(Merkle.)g(Proto)r(cols)i
(for)e(public)g(k)n(ey)f(cryptosystems.)h(In)5 2260 y
Fp(IEEE)h(Symp)l(osium)h(on)g(R)l(ese)l(ar)l(ch)h(in)f(Se)l(curity)g
(and)5 2334 y(Privacy)p Fq(,)f(1980.)-152 2441 y([15])39
b(E.)26 b(Mykletun,)f(M.)i(Narasimha,)g(and)e(G.)h(Tsudik.)5
2515 y(Authen)n(tication)f(and)h(In)n(tegrit)n(y)e(in)i(Outsourced)5
2590 y(Databases.)h(In)e Fp(Network)k(and)f(Distribute)l(d)h(Systems)5
2665 y(Se)l(curity)p Fq(,)f(2004.)-152 2771 y([16])39
b(National)27 b(Institute)e(of)h(Standards)f(and)h(T)-6
b(ec)n(hnology)5 2846 y(\(NIST\).)25 b(Secure)h(Hash)f(Standard.)g
(FIPS)h(PUB)g(180-1,)5 2921 y(April)g(1995.)-152 3027
y([17])39 b(Op)r(enSSL)24 b(Pro)t(ject,)k(h)n(ttp://www.op)r
(enssl.org.)-152 3134 y([18])39 b(H.)26 b(P)n(ang)g(and)f(K-L)g(T)-6
b(an.)26 b(Authen)n(ticating)f(Query)g(Results)5 3208
y(in)h(Edge)g(Computing.)g(In)f Fp(ICDE)p Fq(,)g(2004.)-152
3315 y([19])39 b(R.)26 b(L.)g(Riv)n(est,)f(A.)h(Shamir,)g(and)f(L.)h
(M.)g(Adleman.)g(A)5 3389 y(metho)r(d)g(for)g(obtaining)g(digital)h
(signatures)g(and)e(public-k)n(ey)5 3464 y(cryptosystems.)h
Fp(Communic)l(ations)i(of)f(the)i(A)n(CM)p Fq(,)c(21\(2\),)5
3539 y(1978.)-152 3737 y Fr(APPENDIX)-152 3847 y(A.)100
b(ST)-9 b(A)g(TIC)25 b(D)m(A)-9 b(T)g(A)-152 3926 y Fq(If)32
b(the)f(outsourced)h(data)g(is)h(static)f(or)g(arc)n(hiv)l(al)g(in)g
(nature,)h(e.g.,)-152 4001 y(a)d(census)g(database,)h(pro)r(ofs)g(of)f
(completeness)h(can)e(b)r(e)h(pro)n(vided)-152 4075 y(quite)25
b(easily)i(as)f(follo)n(ws:)-84 4266 y(1.)38 b(Sort)20
b(all)h(tuples)f(in)h(increasing)g(order)g(along)g(eac)n(h)g(searc)n
(hable)13 4341 y(dimension,)f(i.e.,)g(according)f(to)f(the)f(attribute)
h(v)l(alue)f(for)i(eac)n(h)13 4416 y(searc)n(hable)26
b(attribute.)-84 4519 y(2.)38 b(Compute)18 b(a)h(signature)h(of)f(eac)n
(h)g(tuple)f(b)n(y)f(signing)j(the)e(\\Run-)13 4594 y(ning)j(Hash")g
(of)h(all)g(the)f(tuples)g(in)g(the)f(c)n(hain)h(from)h(the)f(start-)13
4669 y(ing)26 b(no)r(de)f(to)h(the)f(curren)n(t)g(tuple)h(as)g(describ)
r(ed)g(b)r(elo)n(w.)-152 4860 y(F)-6 b(or)32 b(example,)i(assume)f
(that)f(there)g(is)g(only)g(one)g(searc)n(hable)h(di-)-152
4934 y(mension.)50 b(The)31 b(o)n(wner)h(sorts)f(tuples)g(in)f
(ascending)i(order)f(along)-152 5009 y(this)23 b(dimension)g(to)g
(obtain:)33 b Ft(f)p Fm(R)809 5017 y Fo(1)844 5009 y
Fm(;)13 b(R)936 5017 y Fo(2)971 5009 y Fm(;)g(:)g(:)g(:)g(;)g(R)1199
5017 y Fl(n)1242 5009 y Ft(g)p Fq(.)34 b(Owner)22 b(then)g(in-)-152
5084 y(cludes)35 b(t)n(w)n(o)g(b)r(oundary)f(v)l(alues:)53
b(\()p Ft(\0001)p Fm(;)13 b Fq(+)p Ft(1)p Fq(\))34 b(in)h(the)f(table)h
(and)-152 5158 y(computes)28 b(the)f(signatures)i(of)f
Fm(R)839 5166 y Fo(1)901 5158 y Fq(through)f Fm(R)1251
5166 y Fl(n)1321 5158 y Fq(as:)39 b Fm(S)t(ig)s(n)p Fq(\()p
Fm(R)1700 5166 y Fl(i)1727 5158 y Fq(\))24 b(=)-152 5233
y Fm(h)p Fq(\()p Fm(R)-20 5241 y Fl(i)7 5233 y Ft(jj)p
Fm(h)p Fq(\()p Fm(R)181 5241 y Fl(i)p Fk(\000)p Fo(1)287
5233 y Ft(jj)13 b Fm(:)g(:)g(:)g Ft(jj)p Fm(h)p Fq(\()p
Ft(\0001)p Fq(\))g Fm(:)g(:)h(:)p Fq(\)\))890 5241 y
Fl(S)s(K)-152 5308 y Fq(A)n(t)30 b(the)g(end,)i(it)f(computes)f(the)h
(signature)g(of)g(+)p Ft(1)p Fq(.)49 b(The)31 b(tuples)-152
5383 y(and)22 b(their)f(signatures)i(are)f(stored)g(at)g(the)f(serv)n
(er)h(as)g(b)r(efore.)34 b(No)n(w,)-152 5457 y(in)i(order)g(to)f(pro)n
(v)n(e)g(b)r(oth)h(completeness)g(and)f(correctness)i(of)f(a)-152
5532 y(range)c Ft(f)p Fm(R)159 5540 y Fl(i)186 5532 y
Fm(;)13 b(R)278 5540 y Fl(j)310 5532 y Ft(g)p Fq(,)33
b(the)e(serv)n(er)f(simply)h(releases)i(tuples)e Ft(f)p
Fm(R)1630 5540 y Fl(i)1656 5532 y Fm(;)13 b(R)1748 5540
y Fl(j)1781 5532 y Ft(g)p Fq(,)-152 5607 y(running)29
b(hash)h(of)g Fm(R)471 5615 y Fl(i)p Fk(\000)p Fo(1)576
5607 y Fq(,)h(and)e Fm(S)t(ig)s(n)p Fq(\()p Fm(R)1032
5615 y Fl(j)1065 5607 y Fq(\).)46 b(Since)30 b(the)f(signatures)-152
5681 y(are)f(computed)e(on)g(running)g(hashes,)i(it)f(can)g(b)r(e)f
(easily)i(seen)f(that)-152 5756 y(the)38 b(reply)g(set)g(pro)n(vides)g
(a)h(concise)g(pro)r(of)g(of)g(correctness)g(and)-152
5831 y(completeness.)53 b(Note)32 b(that,)h(w)n(e)f(do)f(not)h(require)
f(an)n(y)g(signature)-152 5906 y(aggregation)d(in)e(this)g(scenario.)
2040 319 y Fr(B.)100 b(SIGN)n(A)-9 b(TURE)25 b(A)-5 b(GGREGA)c(TION)
2040 445 y(B.1)100 b(Condensed\255RSA)2040 524 y Fq(The)37
b(RSA)f([19])i(signature)g(sc)n(heme)f(is)g(m)n(ultiplicativ)n(ely)h
(homo-)2040 598 y(morphic)23 b(whic)n(h)g(mak)n(es)g(it)g(suitable)g
(for)h(com)n(bining)f(m)n(ultiple)g(sig-)2040 673 y(natures)i
(generated)g(b)n(y)e(a)i(single)h(signer)g(in)n(to)e(one)h
Fp(c)l(ondense)l(d)i Fq(sig-)2040 760 y(nature.)2279
728 y Fo(8)2370 760 y Fq(A)33 b(v)l(alid)g(condensed)g(signature)g
(signi\014es)h(to)g(the)e(v)n(er-)2040 834 y(i\014er)38
b(that)f(eac)n(h)h(individual)f(signature)i(con)n(tained)e(in)h(the)f
(con-)2040 909 y(densed)32 b(signature)g(is)h(v)l(alid,)h(i.e.,)g
(generated)f(b)n(y)e(the)g(purp)r(orted)2040 984 y(signer.)41
b(Aggregation)29 b(of)g(single-signer)g(RSA)d(signatures)j(can)f(b)r(e)
2040 1059 y(p)r(erformed)c(incremen)n(tally)f(b)n(y)f(an)n(y)n(one)g
(in)h(p)r(ossession)i(of)f(individ-)2040 1133 y(ual)34
b(RSA)f(signatures.)60 b(By)34 b(incremen)n(tally)-6
b(,)36 b(w)n(e)e(mean)g(that)g(the)2040 1208 y(signatures)d(can)g(b)r
(e)f(com)n(bined)g(in)g(an)n(y)g(order)g(and)g(the)g(aggrega-)2040
1283 y(tion)c(need)f(not)h(b)r(e)f(carried)i(out)e(in)h(a)g(single)h
(op)r(eration.)2040 1445 y Fn(RSA)35 b(Signature)h(Sc)n(heme:)42
b Fq(W)-6 b(e)30 b(\014rst)h(describ)r(e)g(the)f(setup)g(of)2040
1519 y(the)f(standard)g(RSA)f(signature)h(sc)n(heme.)45
b(A)29 b(part)n(y)f(has)h(a)h(public)2040 1594 y(k)n(ey)24
b Fm(pk)f Fq(=)e(\()p Fm(n;)13 b(e)p Fq(\))24 b(and)h(a)g(secret)g(k)n
(ey)e Fm(sk)h Fq(=)d(\()p Fm(n;)13 b(d)p Fq(\),)25 b(where)g
Fm(n)g Fq(is)g(a)g Fm(k)r Fq(-)2040 1669 y(bit)19 b(mo)r(dulus)g
(formed)g(as)h(a)f(pro)r(duct)g(of)g(t)n(w)n(o)h Fm(k)r(=)p
Fq(2-bit)f(primes)g Fm(p)g Fq(and)2040 1744 y Fm(q)s
Fq(.)40 b(Both)27 b(public)g(and)g(priv)l(ate)g(exp)r(onen)n(ts)g
Fm(e;)13 b(d)24 b Ft(2)g Fm(Z)3602 1712 y Fk(\003)3597
1757 y Fl(n)3667 1744 y Fq(and)j(satisfy)2040 1818 y
Fm(ed)d Ft(\021)g Fq(1)52 b(mo)r(d)26 b Fm(\036)p Fq(\()p
Fm(n)p Fq(\),)i(where)g Fm(\036)p Fq(\()p Fm(n)p Fq(\))c(=)g(\()p
Fm(p)18 b Ft(\000)g Fq(1\)\()p Fm(q)j Ft(\000)e Fq(1\).)40
b(The)28 b(mini-)2040 1893 y(m)n(um)c(curren)n(tly)g(recommended)g
Fm(k)j Fq(is)e(1024.)36 b(The)24 b(securit)n(y)h(of)g(the)2040
1968 y(RSA)19 b(cryptosystem)h(is)g(based)g(on)g(the)g(conjectured)g
(in)n(tractabilit)n(y)2040 2042 y(of)27 b(the)e(large)i(in)n(teger)f
(factorization)i(problem.)2040 2204 y(In)40 b(practice,)45
b(an)c(RSA)e(signature)j(is)f(computed)f(on)g(the)h(hash)2040
2279 y(of)c(an)f(input)f(message.)68 b(Let)36 b Fm(h)p
Fq(\(\))g(denote)g(a)h(cryptographically)2040 2354 y(strong)32
b(hash)f(function)g(\(suc)n(h)f(as,)j(SHA-1\))d(whic)n(h)h(tak)n(es)g
(a)g(v)l(ari-)2040 2428 y(able)25 b(length)f(input)f
Fm(m)h Fq(and)g(pro)r(duces)g(a)h(\014xed-length)e(output)g(de-)2040
2503 y(noted)32 b(as)g Fm(h)p Fq(\()p Fm(m)p Fq(\).)53
b(A)31 b(standard)h(RSA)f(signature)i(on)e(message)j
Fm(m)2040 2596 y Fq(is)27 b(computed)f(as:)37 b Fm(\033)26
b Fq(=)c Fm(h)p Fq(\()p Fm(m)p Fq(\))2923 2565 y Fl(d)2993
2596 y Fq(\(mo)r(d)k Fm(n)p Fq(\).)37 b(V)-6 b(erifying)27
b(a)g(signature)2040 2671 y(in)n(v)n(olv)n(es)j(c)n(hec)n(king)h(that)f
Fm(\033)2866 2639 y Fl(e)2928 2671 y Ft(\021)f Fm(h)p
Fq(\()p Fm(m)p Fq(\))51 b(mo)r(d)26 b Fm(n)p Fq(.)49
b(Both)31 b(signature)2040 2746 y(generation)e(and)e(v)n(eri\014cation)
h(in)n(v)n(olv)n(e)f(computing)h(one)g(mo)r(dular)2040
2821 y(exp)r(onen)n(tiation.)2040 2983 y Fn(Condensed-RSA)35
b(Signature)g(Sc)n(heme:)42 b Fq(Giv)n(en)30 b Fm(t)g
Fq(di\013eren)n(t)2040 3057 y(messages)42 b Ft(f)p Fm(m)2486
3065 y Fo(1)2520 3057 y Fm(;)13 b(:::;)i(m)2721 3065
y Fl(t)2748 3057 y Ft(g)40 b Fq(and)f(their)h(corresp)r(onding)h
(signatures)2040 3132 y Ft(f)p Fm(\033)2122 3140 y Fo(1)2157
3132 y Fm(;)13 b(:::;)h(\033)2333 3140 y Fl(t)2361 3132
y Ft(g)22 b Fq(generated)g(b)n(y)f(the)g(same)i(signer,)g(a)f
(Condensed-RSA)2040 3207 y(signature)j(is)h(computed)e(as)h(the)f(pro)r
(duct)g(of)i(all)f Fm(t)g Fq(individual)f(sig-)2040 3296
y(natures:)35 b Fm(\033)2388 3304 y Fo(1)p Fl(;t)2486
3296 y Fq(=)2567 3240 y Fa(Q)2640 3260 y Fl(t)2640 3319
y(i)p Fo(=1)2756 3296 y Fm(\033)2800 3304 y Fl(i)2860
3296 y Fq(\(mo)r(d)26 b Fm(n)p Fq(\))2040 3383 y(The)f(resulting)g
(aggregated)h(\(or)e(condensed\))g(signature)h Fm(\033)3793
3391 y Fo(1)p Fl(;t)3895 3383 y Fq(is)g(of)2040 3458
y(the)31 b(same)g(size)h(as)g(a)f(single)h(standard)f(RSA)e(signature.)
51 b(V)-6 b(erify-)2040 3532 y(ing)24 b(an)g(aggregated)h(signature)f
(requires)g(the)f(v)n(eri\014er)g(to)h(m)n(ultiply)2040
3607 y(the)33 b(hashes)h(of)h(all)f Fm(t)g Fq(messages)h(and)e(c)n(hec)
n(king)h(that:)50 b(\()p Fm(\033)3798 3615 y Fo(1)p Fl(;t)3875
3607 y Fq(\))3905 3572 y Fl(e)3973 3607 y Ft(\021)2040
3644 y Fa(Q)2113 3665 y Fl(t)2113 3723 y(i)p Fo(=1)2229
3700 y Fm(h)p Fq(\()p Fm(m)2371 3708 y Fl(i)2397 3700
y Fq(\))34 b(\(mo)r(d)26 b Fm(n)p Fq(\))2040 3787 y Fn(Securit)n(y)j
(of)g(Condensed-RSA:)c Fq([15])h(describ)r(es)g(the)f(securit)n(y)2040
3862 y(of)33 b(Condensed-RSA)d(b)n(y)h(demonstrating)i(that)e(it)h(is)h
(at)f(least)h(as)2040 3937 y(secure)e(as)g(Batc)n(h)f(v)n
(eri\014cation)h(of)g(RSA)e([1].)50 b(Batc)n(h)30 b(v)n(eri\014cation)
2040 4011 y(of)24 b(RSA)d(signatures)j(w)n(as)g(sho)n(wn)f(to)g(b)r(e)g
(secure)g(\(in)f([1]\))i(under)e(the)2040 4086 y(assumption)32
b(that)f(RSA)f(is)h(a)h(collection)h(of)f(one-w)n(a)n(y)f(functions.)
2040 4161 y(The)f(pro)r(of)g(assumes)h(that)e(the)g(individual)g(RSA)g
(signatures)h(are)2040 4236 y(generated)24 b(using)f(a)h(full)g(domain)
f(hash)g(function)h(\(FDH\))e(in)h(place)2040 4310 y(of)g(a)g(standard)
f(hash)h(function)f(\(suc)n(h)g(as)h(SHA-1\))e(as)i(describ)r(ed)g(in)
2040 4385 y([4].)2040 4593 y Fr(B.2)100 b(BGLS)2040 4672
y Fq(Boneh,)27 b(et)f(al.)37 b(in)26 b([5])h(construct)f(an)g(in)n
(teresting)h(aggregated)h(sig-)2040 4747 y(nature)g(sc)n(heme)h(that)g
(allo)n(ws)h(aggregation)h(of)f(signatures)g(gener-)2040
4822 y(ated)21 b(b)n(y)f(m)n(ultiple)h(signers)i(on)e(di\013eren)n(t)f
(messages)j(in)n(to)e(one)g(short)2040 4897 y(signature)38
b(based)g(on)g(elliptic)g(curv)n(es)f(and)h(bilinear)g(mappings.)2040
4971 y(This)19 b(sc)n(heme)e(\(BGLS\))h(op)r(erates)h(in)f(a)g(Gap)g
(Di\016e-Hellman)f(group)2040 5046 y(\(GDH\))22 b({)h(a)g(group)g
(where)g(the)f(Decisional)i(Di\016e-Hellman)f(prob-)2040
5121 y(lem)j(\(DDH\))d(is)j(easy)f(while)h(the)f(Computational)h
(Di\016e-Hellman)2040 5195 y(problem)h(\(CDH\))g(is)h(hard.)38
b(The)28 b(\014rst)f(instance)g(of)h(suc)n(h)f(a)g(group)2040
5270 y(w)n(as)g(illustrated)f(in)f([11].)36 b(Prior)26
b(to)g(describing)g(the)f(BGLS)h(signa-)2040 5345 y(ture)k(sc)n(heme,)j
(w)n(e)e(brie\015y)e(o)n(v)n(erview)i(the)f(necessary)i(parameters)2040
5420 y([5].)2129 5616 y Ft(\017)37 b Fm(G)2264 5624 y
Fo(1)2325 5616 y Fq(is)26 b(a)g(cyclic)g(additiv)n(e)g(group)f(with)h
(generator)h Fm(g)3743 5624 y Fo(1)p 2040 5671 797 4
v 2044 5724 a(8)2078 5756 y Fq(W)-6 b(e)22 b(use)g(the)f(term)h
Fp(c)l(ondense)l(d)i Fq(in)e(the)f(con)n(text)g(of)i(a)f(single)h
(signer)2040 5831 y(and)31 b Fp(aggr)l(e)l(gate)l(d)j
Fq(in)d(the)g(con)n(text)g(of)h(m)n(ultiple)f(signers.)52
b(Clearly)-6 b(,)2040 5906 y(former)27 b(is)f(a)g(sp)r(ecial)h(case)g
(of)f(the)f(latter.)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop -63 319 a Ft(\017)38 b Fm(G)73
327 y Fo(2)133 319 y Fq(is)26 b(a)g(cyclic)g(m)n(ultiplicativ)n(e)h
(group)-63 424 y Ft(\017)38 b Fm(e)30 b Fq(is)h(a)g(computable)f
(bilinear)i(map)e Fm(e)f Fq(:)h Fm(G)1282 432 y Fo(1)1337
424 y Ft(\002)20 b Fm(G)1477 432 y Fo(1)1541 424 y Ft(!)29
b Fm(G)1707 432 y Fo(2)1772 424 y Fq(as)13 499 y(describ)r(ed)d(b)r
(elo)n(w)-152 690 y(A)41 b(bilinear)h(mapping)f Fm(e)47
b Fq(:)h Fm(G)783 698 y Fo(1)845 690 y Ft(\002)27 b Fm(G)992
698 y Fo(1)1074 690 y Ft(!)47 b Fm(G)1258 698 y Fo(2)1293
690 y Fq(,)e(where)d Ft(j)p Fm(G)1678 698 y Fo(1)1713
690 y Ft(j)47 b Fq(=)-152 765 y Ft(j)p Fm(G)-71 773 y
Fo(2)-36 765 y Ft(j)p Fq(,)c(satis\014es)d(the)e(follo)n(wing)j(t)n(w)n
(o)e(prop)r(erties.)74 b(\(1\))39 b(Bilinear-)-152 858
y(it)n(y:)50 b Ft(8)p Fm(P)r(;)13 b(Q)34 b Ft(2)g Fm(G)377
866 y Fo(1)445 858 y Fq(and)f Fm(a;)13 b(b)35 b Ft(2)f
Fj(Z)p Fq(,)h Fm(e)p Fq(\()p Fm(aP)r(;)13 b(bQ)p Fq(\))34
b(=)g Fm(e)p Fq(\()p Fm(P)r(;)13 b(Q)p Fq(\))1622 827
y Fl(ab)1686 858 y Fq(,)36 b(\(2\))-152 933 y(Non-degenerativit)n(y:)e
Fm(e)p Fq(\()p Fm(g)647 941 y Fo(1)681 933 y Fm(;)13
b(g)752 941 y Fo(1)786 933 y Fq(\))21 b Ft(6)p Fq(=)g(1)-152
1095 y Fn(BGLS)45 b(Signature)f(Sc)n(heme)37 b Fq(BGLS)h(requires)g
(the)g(use)g(of)g(a)-152 1170 y(full-domain)g(hash)f(function)g
Fm(h)p Fq(\(\))j(:)h Ft(f)p Fq(0)p Fm(;)13 b Fq(1)p Ft(g)1162
1138 y Fk(\003)1239 1170 y Ft(!)40 b Fm(G)1416 1178 y
Fo(1)1488 1170 y Fq(that)c(maps)-152 1245 y(binary)h(strings)h(to)g
(non-zero)f(p)r(oin)n(ts)h(in)f Fm(G)1194 1253 y Fo(1)1229
1245 y Fq(.)69 b(Key)37 b(generation)-152 1319 y(in)n(v)n(olv)n(es)27
b(pic)n(king)f(a)h(random)g Fm(x)22 b Ft(2)i Fm(Z)944
1327 y Fl(p)980 1319 y Fq(,)j(and)f(computing)h Fm(v)f
Fq(=)d Fm(xg)1786 1327 y Fo(1)1820 1319 y Fq(.)-152 1394
y(The)37 b(public)e(k)n(ey)h(is)g Fm(v)42 b Ft(2)d Fm(G)723
1402 y Fo(1)794 1394 y Fq(and)c(the)h(secret)h(k)n(ey)e(is)h
Fm(x)j Ft(2)g Fj(Z)1784 1402 y Fl(p)1820 1394 y Fq(.)-152
1469 y(Signing)27 b(a)h(message)g Fm(m)e Fq(in)n(v)n(olv)n(es)h
(computing)g Fm(H)h Fq(=)23 b Fm(h)p Fq(\()p Fm(m)p Fq(\),)k(where)-152
1543 y Fm(H)45 b Ft(2)39 b Fm(G)107 1551 y Fo(1)177 1543
y Fq(and)d Fm(\033)42 b Fq(=)c Fm(xH)6 b Fq(.)65 b(The)37
b(signature)g(is)f Fm(\033)s Fq(.)66 b(T)-6 b(o)36 b(v)n(erify)g(a)-152
1618 y(signature)30 b(one)f(needs)g(to)g(compute)g Fm(H)j
Fq(=)27 b Fm(h)p Fq(\()p Fm(m)p Fq(\))h(and)h(c)n(hec)n(k)f(that)-152
1693 y Fm(e)p Fq(\()p Fm(\033)n(;)13 b(g)27 1701 y Fo(1)62
1693 y Fq(\))21 b(=)g Fm(e)p Fq(\()p Fm(H)r(;)12 b(v)s
Fq(\).)-152 1855 y Fn(BGLS)40 b(Aggregated)f(Signature)h(Sc)n(heme)33
b Fq(T)-6 b(o)34 b(aggregate)i Fm(t)-152 1929 y Fq(BGLS)e(signatures,)i
(one)d(computes)h(the)f(p)r(oin)n(t-addition)f(op)r(era-)-152
2004 y(tion)i(\(on)f(the)f(elliptic)i(curv)n(e\))f(of)g(the)g
(individual)g(signatures)h(as)-152 2097 y(follo)n(ws:)39
b Fm(\033)176 2105 y Fo(1)p Fl(;t)276 2097 y Fq(=)359
2041 y Fa(P)440 2062 y Fl(t)440 2120 y(i)p Fo(=1)556
2097 y Fm(\033)600 2105 y Fl(i)626 2097 y Fq(,)27 b(where)g
Fm(\033)941 2105 y Fl(i)994 2097 y Fq(corresp)r(onds)g(to)g(the)f
(signa-)-152 2180 y(ture)g(of)g(message)h Fm(m)461 2188
y Fl(i)487 2180 y Fq(.)35 b(The)26 b(aggregated)h(signature)g
Fm(\033)1467 2188 y Fo(1)p Fl(;t)1569 2180 y Fq(is)g(of)f(the)-152
2255 y(same)34 b(size)g(as)f(a)g(single)i(BGLS)e(signature,)i(i.e.,)i
Ft(j)p Fm(p)p Ft(j)c Fq(bits.)56 b(Simi-)-152 2330 y(lar)23
b(to)g(Condensed-RSA,)e(aggregation)j(can)f(b)r(e)f(p)r(erformed)h
(incre-)-152 2405 y(men)n(tally)g(and)f(b)n(y)g(an)n(y)n(one.)33
b(V)-6 b(eri\014cation)23 b(of)g(an)g(aggregate)i(BGLS)-152
2479 y(signature)32 b Fm(\033)231 2487 y Fo(1)p Fl(;t)340
2479 y Fq(in)n(v)n(olv)n(es)f(computing)g(the)g(p)r(oin)n(t-addition)h
(of)g(all)-152 2572 y(hashes)26 b(and)g(v)n(erifying)g(that:)34
b Fm(e)p Fq(\()p Fm(\033)864 2580 y Fo(1)p Fl(;t)941
2572 y Fm(;)13 b(g)1012 2580 y Fo(1)1046 2572 y Fq(\))21
b(=)1178 2516 y Fa(Q)1251 2536 y Fl(t)1251 2594 y(i)p
Fo(=1)1367 2572 y Fm(e)p Fq(\()p Fm(H)1497 2580 y Fl(i)1522
2572 y Fm(;)13 b(v)1593 2580 y Fl(i)1620 2572 y Fq(\))-152
2742 y(Due)28 b(to)h(the)f(prop)r(erties)h(of)h(the)e(bilinear)h(maps,)
h(w)n(e)f(can)g(expand)-152 2817 y(the)d(left)g(hand)f(side)h(of)h(the)
e(equation)g(as)i(follo)n(ws:)-152 3025 y Fm(e)p Fq(\()p
Fm(\033)-42 3033 y Fo(1)p Fl(;t)35 3025 y Fm(;)13 b(g)106
3033 y Fo(1)140 3025 y Fq(\))22 b(=)f Fm(e)p Fq(\()382
2931 y Fl(t)339 2954 y Fa(X)345 3111 y Fl(i)p Fo(=1)462
3025 y Fm(x)506 3033 y Fl(i)532 3025 y Fm(H)596 3033
y Fl(i)622 3025 y Fm(;)13 b(g)693 3033 y Fo(1)727 3025
y Fq(\))21 b(=)897 2931 y Fl(t)860 2954 y Fa(Y)859 3111
y Fl(i)p Fo(=1)971 3025 y Fm(e)p Fq(\()p Fm(H)1101 3033
y Fl(i)1127 3025 y Fm(;)13 b(x)1205 3033 y Fl(i)1231
3025 y Fm(g)1268 3033 y Fo(1)1302 3025 y Fq(\))21 b(=)1472
2931 y Fl(t)1435 2954 y Fa(Y)1434 3111 y Fl(i)p Fo(=1)1546
3025 y Fm(e)p Fq(\()p Fm(H)1676 3033 y Fl(i)1702 3025
y Fm(;)13 b(v)1773 3033 y Fl(i)1799 3025 y Fq(\))p eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
