%!PS-Adobe-3.0
%%Title: (22.process.doc)
%%Creator: (FrameMaker5: LaserWriter 8 8.3.3)
%%CreationDate: (10:30 AM Wednesday, November 19, 1997)
%%For: (Jaswinder Pal Singh)
%%Pages: 16
%%DocumentFonts: Times-Roman Symbol Helvetica-Bold Helvetica Courier-Bold Courier
%%DocumentNeededFonts: Times-Roman Symbol Helvetica-Bold Helvetica Courier-Bold Courier
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Landscape
%%DocumentMedia: Default 792 612 0 () ()
%ADO_ImageableArea: 8 18 784 594
%%EndComments
userdict begin/dscInfo 5 dict dup begin
/Title(22.process.doc)def
/Creator(FrameMaker5: LaserWriter 8 8.3.3)def
/CreationDate(10:30 AM Wednesday, November 19, 1997)def
/For(Jaswinder Pal Singh)def
/Pages 16 def
end def end
/md 163 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 83 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F1/setgray ld
/:F/setrgbcolor ld
/:F4/setcmykcolor where
{
pop
/setcmykcolor ld
}{
{
3
{
dup
3 -1 roll add
dup 1 gt{pop 1}if
1 exch sub
4 1 roll
}repeat
pop
setrgbcolor
}bd
}ifelse
/:Fx
{
counttomark
{0{G}0{:F}{:F4}}
exch get
exec
pop
}bd
/:rg{/DeviceRGB :ss}bd
/:sc{$cs :ss}bd
/:dc{/$cs xdf}bd
/:sgl{}def
/:dr{}bd
/:fCRD{pop}bd
/:ckcs{}bd
/:ss{/$c xdf}bd
/$cs Z
%%EndFile
%%BeginFile: adobe_psp_customps
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/$t Z
/$p Z
/$s Z
/$o 1. def
/2state? false def
/ps Z
level2 startnoload
/pushcolor/currentrgbcolor ld
/popcolor/setrgbcolor ld
/setcmykcolor where
{
pop/currentcmykcolor where
{
pop/pushcolor/currentcmykcolor ld
/popcolor/setcmykcolor ld
}if
}if
level2 endnoload level2 not startnoload
/pushcolor
{
currentcolorspace $c eq
{
currentcolor currentcolorspace true
}{
currentcmykcolor false
}ifelse
}bd
/popcolor
{
{
setcolorspace setcolor
}{
setcmykcolor
}ifelse
}bd
level2 not endnoload
/pushstatic
{
ps
2state?
$o
$t
$p
$s
$cs
}bd
/popstatic
{
/$cs xs
/$s xs
/$p xs
/$t xs
/$o xs
/2state? xs
/ps xs
}bd
/pushgstate
{
save errordict/nocurrentpoint{pop 0 0}put
currentpoint
3 -1 roll restore
pushcolor
currentlinewidth
currentlinecap
currentlinejoin
currentdash exch aload length
np clippath pathbbox
$m currentmatrix aload pop
}bd
/popgstate
{
$m astore setmatrix
2 index sub exch
3 index sub exch
rC
array astore exch setdash
setlinejoin
setlinecap
lw
popcolor
np :M
}bd
/bu
{
pushgstate
gR
pushgstate
2state?
{
gR
pushgstate
}if
pushstatic
pm restore
mT concat
}bd
/bn
{
/pm save store
popstatic
popgstate
gS
popgstate
2state?
{
gS
popgstate
}if
}bd
/cpat{pop 64 div setgray 8{pop}repeat}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if end
%%EndProlog
%%BeginSetup
md begin
countdictstack[{
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
countdictstack[{
%%BeginFeature: *PageRegion Letter
level2 { 
		2 dict dup /PageSize [612 792] put dup /ImagingBBox null put setpagedevice
	}{
		/letter where {pop letter}{letterR} ifelse
	} ifelse
%%EndFeature
}featurecleanup
(Jaswinder Pal Singh)setjob
countdictstack[{/currentdistillerparams where{pop 1 dict dup/Orientation 1 put setpagedevice}if}featurecleanup
/mT 90 $m rotate[1 0 0 -1 594 784]matrix concatmatrix def/por F def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Symbol
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Helvetica
%%IncludeFont: Courier-Bold
%%IncludeFont: Courier
/f0_1/Times-Roman
:mre
/f0_8 f0_1 8 scf
/f0_7 f0_1 7 scf
/f1_1/Symbol
:bsr
240/apple pd
:esr
/f1_8 f1_1 8 scf
/f2_1/Helvetica-Bold
:mre
/f2_24 f2_1 24 scf
/f2_22 f2_1 22 scf
/f2_18 f2_1 18 scf
/f2_16 f2_1 16 scf
/f3_1/Helvetica
:mre
/f3_20 f3_1 20 scf
/f3_16 f3_1 16 scf
/f4_1/Courier-Bold
:mre
/f4_16 f4_1 16 scf
/f4_14 f4_1 14 scf
/f5_1/Courier
:mre
/f5_20 f5_1 20 scf
/f5_16 f5_1 16 scf
/f5_14 f5_1 14 scf
/f5_8 f5_1 8 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
% Frame PostScript Prolog for use with Macintosh Frame Products 5.x.x
% Copyright (c) 1986-96 Adobe Systems Inc.  All rights reserved.
%%BeginProcSet: "FrameMacDict" 501 1
userdict/FrameMacDict 250 dict put FrameMacDict begin systemdict/setpacking
known{/fMSP currentpacking def true setpacking}if[/fM1/fM18/fM2/fM3/fM4/fMAB
/fM5/fM6/fM8/fM9/fMBC/fMBM/fMC/fMCD/fMCG/fMCK/fMCM/fMCl/fMCO/fMef/fMet/fMeh
/fMew/fMey/fMex/fMei/fMej/fMek/fMel/fMFl/fMGC/fMGL/fMGM/fMIx/fMJB/fMJC/fMJG
/fMJK/fMJM/fMJR/fMJY/fMK/fML1/fMM/fMN/fMNC/fMNg/fMND/fMOx/fMPC/fMPH/fMPt/fMRC
/fMS/fMSJ/fMUC/fMUM/fMUY/fMY/fMdm/fM2x/fMa2/fMi/fMk/fms/fmBS/fMdp/freq/sangle
/sflipx/sflipy/pflipx/pflipy/xx/yy/xindex/yindex/fM1B/fM0B/fMdc/fMds]{0 def}
forall/fML1/languagelevel where{pop languagelevel}{1}ifelse 2 lt def/fMCl fML1{
/statusdict where{pop statusdict/processcolors known{statusdict/processcolors
get exec 1 gt}{F}ifelse}{F}ifelse}{T}ifelse def/fMXN/statusdict where{pop
statusdict/product known{statusdict/product get}{(Unknown)}ifelse}{(Unknown)}
ifelse def/fMHq fMXN(LaserWriter-Sim)eq def/FmBD{bind def}bind def/fmBx{[exch{
dup/FrameMacDict eq{pop FrameMacDict}{dup type dup/arraytype eq exch
/packedarraytype eq or{dup xcheck{fmBi}if}if}ifelse}forall]cvx}FmBD/fmBi{bind
fmBx}FmBD fML1{userdict/FrMacBegin{FrameMacDict begin}fmBi put/FmE{end}FmBD}{
/fMdc 6 array def userdict/FrMacBegin{FrameMacDict begin/fMds currentcolorspace
store mark 0 0 0 0 0 currentcolor fMdc astore pop cleartomark}fmBi put/FmE{fMds
setcolorspace mark fMdc aload pop setcolor cleartomark end}FmBD}ifelse/fMEd 35
dict def/fmPE{fMEd 3 1 roll fmBi put}bind def/T true def/F false def userdict
/FrameSuccessfull F put userdict/FrameEndPictSave F put userdict
/FrameEndPictStopped F put userdict/fM7 known not{userdict/fM7 0 put}if/fmXD{
exch def}FmBD/FmG/gsave load def/FmR/grestore load def/fm_l/grestoreall load
def/fm_v/save load def/fm_g/setgray load def/fm_r/setrgbcolor load def/fm_h
/sethsbcolor load def/fm_f/fill load def/fm_e/eofill load def/fm_t/stroke load
def/fm_m/imagemask load def/fm_i/image load def/fm_s/show load def/fm_a/ashow
load def/fm_w/widthshow load def/fm_y/awidthshow load def/RealKshow/kshow load
def/fMdm matrix defaultmatrix def/fM2x matrix def/fMa2 matrix def/fmSM{fM2x
currentmatrix pop}FmBD/fmRM{fM2x setmatrix}FmBD/FmRF{currentpoint 2 copy
translate 4 2 roll{-1 1 scale}if rotate neg exch neg exch translate}FmBD/fmax{2
copy lt{exch}if pop}FmBD/fmin{2 copy gt{exch}if pop}FmBD systemdict/pdfmark
known{/fMAB true def/FmPD/pdfmark load def/FmPT/fm_s load def
currentdistillerparams/CoreDistVersion get 2000 ge{/FmPD2/pdfmark load def/FmPA
{mark exch/Dest exch 5 3 roll/View[/XYZ null 6 -2 roll FmDC exch pop null]/DEST
FmPD}FmBD}{/FmPD2/cleartomark load def/FmPA{pop pop pop}FmBD}ifelse}{/fMAB
false def/FmPD/cleartomark load def/FmPD2/cleartomark load def/FmPT/pop load
def/FmPA{pop pop pop}FmBD}ifelse/FmDC{transform fMdm itransform cvi exch cvi
exch}FmBD/FmBx{dup 3 index lt{3 1 roll exch}if 1 index 4 index lt{4 -1 roll 3 1
roll exch 4 1 roll}if}FmBD/fmgS 32 array def/fMgt 0 def/fMtp 0 def/fmSG{fmgS
fMgt get dup null eq{pop fmgS fMgt 10 dict dup 4 1 roll put}if 3 1 roll put}
FmBD/fmGG{fMgt -1 -1{fmgS exch get dup null ne{2 copy exch known{2 copy exch
get/_notdef ne{exch get dup exit}if}if}if pop}for pop}FmBD/gsave{FrameMacDict
begin FmG/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{dup dup{pop
/_notdef put dup}forall pop pop}ifelse end}fmPE/grestore{FrameMacDict begin
fMgt fMtp gt{/fMgt fMgt 1 sub def}if FmR null fmCN end}fmPE/grestoreall{
FrameMacDict begin/fMgt fMtp def fm_l null fmCN end}fmPE/save{FrameMacDict/fm_v
get exec FrameMacDict begin/fMgt fMgt 1 add def fmgS fMgt get dup null eq{pop}{
dup dup{pop/_notdef put dup}forall pop pop}ifelse/fMtp fMgt def end}fmPE/fMND F
def/fMCC null fmSG/fMOP F fmSG/fMKO F fmSG/fmRY{1 exch sub 3 1 roll 1 exch sub
3 1 roll 1 exch sub 3 1 roll 3 copy 2 copy le{pop}{exch pop}ifelse 2 copy le{
pop}{exch pop}ifelse dup dup dup 6 1 roll 4 1 roll 7 1 roll sub 6 1 roll sub 5
1 roll sub 4 1 roll}fmSG/fmkn{2 copy known{get T}{pop pop false}ifelse}FmBD
/fmfp{exch currentfont dup/FontMatrix get exch/FontInfo fmkn{T}{currentfont/df
fmkn{dup/FontInfo fmkn{3 1 roll/FontMatrix get mtx concatmatrix exch T}{pop pop
pop F}ifelse}{pop pop F}ifelse}ifelse{3 -1 roll fmkn{exch 0 3 1 roll dtransform
neg exch pop exch pop}{pop exec}ifelse}{exec}ifelse}FmBD/fmdl{3 index 16 and 0
ne{FmG currentlinewidth 2. div dup rmoveto currentpoint newpath moveto 2 index
0 rlineto fm_t FmR}if 3 index 24 and 0 ne{FmG currentrgbcolor dup 4 1 roll eq 3
1 roll eq and{1 currentgray sub setgray}{1 setgray}ifelse 2 index 0 rlineto
fm_t FmR FmG 2 index 0 rlineto strokepath .24 setlinewidth fm_t FmR}{2 index 0
rlineto fm_t 0 0 moveto}ifelse}FmBD/FmUl{FmG/fM2 fmXD currentpoint
/UnderlineThickness{fM2 15 div}fmfp abs dup setlinewidth/fM1 fmXD 4 index 1 and
0 ne{newpath 2 copy moveto 0/UnderlinePosition{fM2 10 div neg}fmfp neg rmoveto
fmdl}if 4 index 2 and 0 ne{newpath 2 copy moveto 0/XHeight{FmG newpath 0 0
moveto(x)F charpath flattenpath pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop
fM2 2. mul 3. div neg}if}fmfp 2. div rmoveto fmdl}if 4 index 4 and 0 ne{newpath
2 copy moveto 0/CapHeight{FmG newpath 0 0 moveto(H)F charpath flattenpath
pathbbox 4 -1 roll pop pop pop FmR dup 0 eq{pop fM2 3. mul 4. div neg}if}fmfp
fM1 sub rmoveto fmdl}if pop pop pop pop pop FmR}FmBD/FmTx{/fM3 fmXD/fM2 fmXD
/fM1 fmXD 0 32 fM1 fM3 stringwidth pop fM2 sub fM3 length div sub 0 fM3 fm_y}
FmBD/fMN 0 def/fMC 1 def/fMM 2 def/fMY 3 def/fMK 4 def/fMS 5 def/fMNg 0
currenttransfer exec .5 gt def/fMCM fMN def/fMJK 0 def/fMJY 0 def/fMJM 0 def
/fMJC 0 def/fMJR 1 def/fMJG 1 def/fMJB 1 def/fMCG 1 def/fMPt null def/fMCK[0 0
0 1 0 0 0]def/fmCH{fML1{14 dict dup begin fMCl{/HalftoneType 2 def
currentcolorscreen[/GraySpotFunction/GrayAngle/GrayFrequency/BlueSpotFunction
/BlueAngle/BlueFrequency/GreenSpotFunction/GreenAngle/GreenFrequency
/RedSpotFunction/RedAngle/RedFrequency]{exch def}forall}{/HalftoneType 1 def
currentscreen[/SpotFunction/Angle/Frequency]{exch def}forall}ifelse statusdict
/checkscreen known{statusdict/accuratescreens get exec}{F}ifelse
/AccurateScreens exch def end}{currenthalftone}ifelse}FmBD/fmSH{fML1{begin
statusdict/checkscreen known{currentdict/AccurateScreens known{AccurateScreens}
{F}ifelse statusdict/setaccuratescreens get exec}if HalftoneType 1 eq{Frequency
Angle currentdict/SpotFunction get setscreen}{HalftoneType 2 eq{fMCl{
RedFrequency RedAngle currentdict/RedSpotFunction get GreenFrequency GreenAngle
currentdict/GreenSpotFunction get BlueFrequency BlueAngle currentdict
/BlueSpotFunction get GrayFrequency GrayAngle currentdict/GraySpotFunction get
setcolorscreen}{GrayFrequency GrayAngle currentdict/GraySpotFunction get
setscreen}ifelse}if}ifelse end}{sethalftone}ifelse}FmBD/FmCS{14 dict begin
/HalftoneType 2 def/AccurateScreens exch def/GraySpotFunction exch def
/GrayAngle exch def/GrayFrequency exch def/BlueSpotFunction exch def/BlueAngle
exch def/BlueFrequency exch def/GreenSpotFunction exch def/GreenAngle exch def
/GreenFrequency exch def/RedSpotFunction exch def/RedAngle exch def
/RedFrequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/FmSS{5 dict
begin/HalftoneType 1 def/AccurateScreens exch def/SpotFunction exch def/Angle
exch def/Frequency exch def currentdict dup end/fMPH exch def fmSH}FmBD/fMPH
fmCH def/fmcp{/FmPr2 exch cvlit def/FmPr1 exch cvlit def/FmPrn FmPr1 length
FmPr2 length add array def FmPrn 0 FmPr1 putinterval FmPrn FmPr1 length FmPr2
putinterval FmPrn cvx}FmBD/fmEp{sub dup 0 lt{neg}if .001 le}FmBD/fmQC{2 copy 0
get exch 0 get fmEp{2 copy 1 get exch 1 get fmEp{2 copy 2 get exch 2 get fmEp{3
get exch 3 get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}{pop pop F}ifelse}FmBD
/fmQR{2 copy 4 get exch 0 get fmEp{2 copy 5 get exch 1 get fmEp{6 get exch 2
get fmEp}{pop pop F}ifelse}{pop pop F}ifelse}FmBD/FmSC{/fMCM fmXD/fMJB fmXD
/fMJG fmXD/fMJR fmXD/fMJK fmXD/fMJY fmXD/fMJM fmXD/fMJC fmXD fmCC}FmBD/FmSP{
/fMCM fmXD fmCC}FmBD/FrameSetSepColors{FrameMacDict begin[exch 1 add 1 roll]
/fMSC exch def end}fmBi def/fmLC{fMSC{exch dup 3 -1 roll fmQC{pop T exit}if}
forall dup T ne{pop F}if}FmBD/fmLR{fMSC{exch dup 3 -1 roll fmQR{pop T exit}if}
forall dup T ne{pop F}if}FmBD/fmLM{fMSC{exch dup 3 -1 roll dup 7 get 3 -1 roll
eq{exch pop T exit}{pop}ifelse}forall dup T ne{pop F}if}FmBD/fmCN{fMND F fMCM
fMN ne{/fMOP fmGG{/fMKO fmGG{pop T}if}if}if dup/fMND exch def{pop pop}{exch dup
null ne{exch pop dup type dup/integertype eq exch/realtype eq or{fm_g}{setcolor
}ifelse}{pop{1 fm_g}if}ifelse}ifelse}FmBD/fill{FrameMacDict begin fMND{newpath}
{fm_f}ifelse end}fmPE/eofill{FrameMacDict begin fMND{newpath}{fm_e}ifelse end}
fmPE/stroke{FrameMacDict begin fMND{newpath}{fm_t}ifelse end}fmPE/imagemask{
FrameMacDict begin fMND{FmG nulldevive fm_m FmR}{fm_m}ifelse end}fmPE/fmNX{load
fMND{FmG fMa2 currentmatrix end nulldevice setmatrix exec currentpoint
FrameMacDict/FmR get exec moveto}{end exec}ifelse}fmBi def/show{FrameMacDict
begin/fm_s fmNX}fmPE/ashow{FrameMacDict begin/fm_a fmNX}fmPE/widthshow{
FrameMacDict begin/fm_w fmNX}fmPE/awidthshow{FrameMacDict begin/fm_y fmNX}fmPE
/kshow{FrameMacDict begin/RealKshow fmNX}fmPE/image{FrameMacDict begin fMCM fMN
ne fMCM fMK ne and{FmG/fMOP fmGG{nulldevice}{fMNg{{pop 0}}{{pop 1}}ifelse
settransfer}ifelse/fm_i load end exec FmR}{/fm_i load end exec}ifelse}fmPE/fMGM
T def/fMBM F def/findcmykcustomcolor{0 0 0 4 -1 roll 8 array astore}fmPE
/findrgbcustomcolor{FrameMacDict begin 4 1 roll 3 copy/fmRY fmGG exec 8 4 roll
4 -1 roll 8 array astore end}fmPE/findgraycustomcolor{0 0 0 exch 1 exch sub
exch findcmykcustomcolor}fmPE/findhsbcustomcolor{FrameMacDict begin 4 1 roll
gsave fm_h currentrgbcolor grestore 4 -1 roll findrgbcustomcolor end}fmPE
/setcustomcolor{FrameMacDict begin dup type dup/integertype eq exch/realtype eq
or not{1.0}if exch dup/fMCC exch fmSG/fMBM F def fMCM fMN eq{0 4 getinterval
aload pop 4{4 index mul 4 1 roll}repeat fmSK pop}{dup{7 get}stopped{pop 4 get}
if fmLM{exch pop 0 4 getinterval aload pop fMCM fMS eq{fMJK eq exch fMJY eq and
exch fMJM eq and exch fMJC eq and{1 exch sub F}{pop 1 T}ifelse}{5{pop}repeat 1
T}ifelse}{fMCM fMK eq{3 get F}{fMCM fMY eq{2 get F}{fMCM fMM eq{1 get F}{fMCM
fMC eq{0 get F}{pop 0 T}ifelse}ifelse}ifelse}ifelse 3 1 roll mul 1 exch sub
exch}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/setoverprint{FrameMacDict begin
/fMOP exch fmSG null fmCN end}fmPE/currentoverprint{FrameMacDict begin/fMOP
fmGG end}fmPE/fmCC{fMCM fMN eq{fMGM fML1 or not{[/Pattern[/DeviceCMYK]]
setcolorspace fMCK 0 4 getinterval aload pop fMPt setcolor}{fMCK 3 get 1.0 ge{
fMCG fm_g}{fMAB not fMCl fMGM and and{0 1 3{fMCK exch get 1 fMCG sub mul}for
fmSK}{4 1 6{fMCK exch get fMGM{1 exch sub 1 fMCG sub mul 1 exch sub}{1.0 lt{
fMCG}{1}ifelse}ifelse}for fm_r}ifelse}ifelse}ifelse null/fMKO F fmSG}{fMBM{fMCG
F}{fMCK 0 4 getinterval aload fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch
fMJM eq and exch fMJC eq and{fMCG F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{
fMCM fMK eq{fMCG 1.0 exch sub mul 1.0 exch sub 4 1 roll pop pop pop F}{fMCM fMY
eq{pop fMCG 1.0 exch sub mul 1.0 exch sub 3 1 roll pop pop F}{fMCM fMM eq{pop
pop fMCG 1.0 exch sub mul 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop fMCG
1.0 exch sub mul 1.0 exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse}ifelse/fMKO exch fmSG fMGM fML1 or not{[/Pattern[/DeviceGray]]
setcolorspace fMPt}{fMGM not fML1 and{dup 1 lt{pop fMCG}if}if}ifelse}ifelse
fmCN}FmBD/setgray{FrameMacDict begin fMCM fMN eq{F}{fMCM fMK eq{F}{fMCM fMS eq
fMJR 0 eq and fMJG 0 eq and fMJB 0 eq and{F}{pop 1 T}ifelse}ifelse}ifelse/fMKO
exch fmSG fmCN end}fmPE/setrgbcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{
fm_r}{3 copy[4 1 roll]fmLR{fMCM fMS eq{fMJB eq exch fMJG eq and exch fMJR eq
and{0 F}{1 T}ifelse}{pop pop pop 1 T}ifelse}{/fmRY fmGG exec fMCM fMK eq{1.0
exch sub 4 1 roll pop pop pop F}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop
F}{fMCM fMM eq{pop pop 1.0 exch sub exch pop F}{fMCM fMC eq{pop pop pop 1.0
exch sub F}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}ifelse}ifelse/fMKO exch
fmSG fmCN}ifelse end}fmPE/sethsbcolor{FrameMacDict begin fMCM fMN eq{fm_h}{fm_h
currentrgbcolor setrgbcolor}ifelse end}fmPE/setcmykcolor where{pop/fmSK
/setcmykcolor load def}{/fmSK{4 1 roll 3{3 index add 0 fmax 1 fmin 1 exch sub 3
1 roll}repeat fm_r pop}FmBD}ifelse/currentcmykcolor where{pop}{
/currentcmykcolor{FrameMacDict begin currentrgbcolor/fmRY fmGG exec end}fmPE}
ifelse/setcmykcolor{FrameMacDict begin/fMBM F def fMCM fMN eq{fmSK}{4 copy[5 1
roll]fmLC{fMCM fMS eq{fMJK eq exch fMJY eq and exch fMJM eq and exch fMJC eq
and{0 F}{1 T}ifelse}{pop pop pop pop 1 T}ifelse}{fMCM fMK eq{1.0 exch sub 4 1
roll pop pop pop dup 1.0 ge}{fMCM fMY eq{pop 1.0 exch sub 3 1 roll pop pop dup
1.0 ge}{fMCM fMM eq{pop pop 1.0 exch sub exch pop dup 1.0 ge}{fMCM fMC eq{pop
pop pop 1.0 exch sub dup 1.0 ge}{pop pop pop pop 1 T}ifelse}ifelse}ifelse}
ifelse}ifelse/fMKO exch fmSG fmCN}ifelse end}fmPE/fMFl[0 .1 .3 .5 .7 .9 .97 1<
0f1e3c78f0e1c387><0f87c3e1f0783c1e><cccccccccccccccc><ffff0000ffff0000><814224
1818244281><0102040810204080><8040201008040201>]def fML1{/patScreenDict 7 dict
dup begin<0f1e3c78f0e1c387>[45{pop}{exch pop}.5 2 sqrt]FmBD<0f87c3e1f0783c1e>[
135{pop}{exch pop}.5 2 sqrt]FmBD<cccccccccccccccc>[0{pop}dup .5 2]FmBD<ffff0000
ffff0000>[90{pop}dup .5 2]FmBD<8142241818244281>[45{2 copy lt{exch}if pop}dup
.75 2 sqrt]FmBD<0102040810204080>[45{pop}{exch pop}.875 2 sqrt]FmBD<8040201008
040201>[135{pop}{exch pop}.875 2 sqrt]FmBD end def}{/fMPP 5 dict dup begin<0f87
c3e1f0783c1e>{3 setlinewidth -1 -1 moveto 9 9 lineto fm_t 4 -4 moveto 12 4
lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<0f1e3c78f0e1c387>{3 setlinewidth
-1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4 lineto fm_t 4 12 moveto 12 4
lineto fm_t}FmBD<8142241818244281>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t
-1 -1 moveto 9 9 lineto fm_t}FmBD<8040201008040201>{1 setlinewidth -1 -1 moveto
9 9 lineto fm_t 4 -4 moveto 12 4 lineto fm_t -4 4 moveto 4 12 lineto fm_t}FmBD<
0102040810204080>{1 setlinewidth -1 9 moveto 9 -1 lineto fm_t -4 4 moveto 4 -4
lineto fm_t 4 12 moveto 12 4 lineto fm_t}FmBD end def/fMPD 15 dict dup begin
/PatternType 1 def/PaintType 2 def/TilingType 3 def/BBox[0 0 8 8]def/XStep 8
def/YStep 8 def/PaintProc{begin fMPP fmBS known{fMPP fmBS get exec}{8 8 T[1 0 0
-1 0 8]fmBS fm_m}ifelse end}FmBD end def}ifelse/fMdp 72 0 fMdm dtransform dup
mul exch dup mul add sqrt def/freq fMdp dup 72 div round dup 0 eq{pop 1}if 8
mul div def/sangle 1 0 fMdm dtransform exch atan def sangle fMa2 rotate fMdm
fMa2 concatmatrix dup 0 get/sflipx exch def 3 get/sflipy exch def fML1{/fmgF{
fMa2 exch get mul 0 lt{-1}{1}ifelse}FmBD}if/fmPM fML1{{dup patScreenDict exch
known{patScreenDict exch get aload pop freq mul 5 2 roll fMa2 currentmatrix 1
get 0 ne{3 -1 roll 90 add 3 1 roll sflipx 1 fmgF sflipy 2 fmgF mul}{sflipx 0
fmgF sflipy 3 fmgF neg mul}ifelse 0 lt{exch pop}{pop}ifelse fMNg{{neg}fmcp}if
bind systemdict/setscreen get exec}{/fmBS fmXD/fM1B 0 def/fM0B 0 def freq 0
fMa2 currentmatrix 1 get 0 ne{90 add/pflipx sflipx 1 fmgF def/pflipy sflipy 2
fmgF def}{/pflipx sflipx 0 fmgF def/pflipy sflipy 3 fmgF neg def}ifelse{pflipy
mul/yy fmXD pflipx mul/xx fmXD/xindex xx 1 add 2 div 8 mul cvi def/yindex yy 1
add 2 div 8 mul cvi def fmBS yindex xindex 8 idiv add get 1 7 xindex 8 mod sub
bitshift and 0 ne fMNg{not}if{/fM1B fM1B 1 add def 1}{/fM0B fM0B 1 add def 0}
ifelse}setscreen fM0B fM0B fM1B add div fMNg{1.0 exch sub}if}ifelse/fMCG exch
def/fMGM F def fmCC}}{/fMPC 8 dict def{dup fMPC exch known{fMPC exch get}{dup
fMPD/fmBS 3 -1 roll put fMPD matrix makepattern dup fMPC 4 -1 roll 3 -1 roll
put}ifelse/fMCG 0 def/fMPt exch def/fMGM F def fmCC}}ifelse FmBD/fmgr{fMGM not{
/fMGM T def fML1{fMPH fmSH}if}if/fMCG exch def fmCC}FmBD/FmP{fMFl exch get dup
type/stringtype eq{fmPM}{fmgr}ifelse}FmBD/FmK{fMCK astore pop/fMBM F def fmCC}
FmBD/FmFB{0 0 0 1 0 0 0 fMCK astore pop/fMCG 0 def/fMBM T def fmCC}FmBD/fMOx
matrix def fMOx currentmatrix pop/FmSO{/FmOs save def fmSM fMOx setmatrix}FmBD
/FmIO{fmRM}FmBD/FmEO{FmOs restore}FmBD/fm3R[{.3 mul add 1}bind{.59 mul add 2}
bind{.11 mul add round cvi fMs exch fMi exch put/fMi fMi 1 add def 0 0}bind]def
/fm31{/fMi 0 def 0 exch 0 exch{exch fm3R exch get exec}forall pop pop fMs}FmBD
/fm41{0 exch 4 exch{exch 1 sub dup 0 eq{pop 4 1 roll 3 index add 255 fmin 255
exch sub .11 mul 3 1 roll 3 index add 255 fmin 255 exch sub .59 mul 3 1 roll 3
index add 255 fmin 255 exch sub .3 mul add add 255 fmin round cvi fMs exch 3
index exch put pop 1 add 4}if}forall pop pop fMs}FmBD fML1{/Fmi{save userdict
/fM7 3 -1 roll put/fM9 F def{{dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD
/fMRC fmXD/fMGC fMGL 1 add array def/setcolortransfer where{pop
currentcolortransfer/gryt fmXD/blut fmXD/grnt fmXD/redt fmXD 0 1 fMGL{/fMIx
fmXD/fMUC 1 fMRC fMIx get sub def/fMUM 1 fMNC fMIx get sub def/fMUY 1 fMBC fMIx
get sub def/fMk fMUC fMUM fmin fMUY fmin def/FmU fMk currentundercolorremoval
exec def fMRC fMIx 1 0 fMUC FmU sub fmax sub redt exec put fMNC fMIx 1 0 fMUM
FmU sub fmax sub grnt exec put fMBC fMIx 1 0 fMUY FmU sub fmax sub blut exec
put fMGC fMIx 1 fMk currentblackgeneration exec sub gryt exec put}for{fMGL mul
cvi fMRC exch get}{fMGL mul cvi fMNC exch get}{fMGL mul cvi fMBC exch get}{fMGL
mul cvi fMGC exch get}setcolortransfer{pop 0}setundercolorremoval{}
setblackgeneration/fM9 T def}{0 1 fMGL{fMGC exch dup dup fMRC exch get .3 mul
exch dup fMNC exch get .59 mul exch fMBC exch get .11 mul add add put}for{fMGL
mul cvi fMGC exch get}currenttransfer fmcp settransfer}ifelse}{dup length 1 sub
/fMGL fmXD/fMGC fmXD{fMGL mul cvi fMGC exch get}currenttransfer fmcp
settransfer}ifelse}{{{1 exch sub}currenttransfer fmcp settransfer}if}ifelse/fM5
fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale}if
/fM18 fM8 string def fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]{currentfile
fM18 fM5{readstring}{readhexstring}ifelse pop}fM9{{fM18}{fM18}T 3 colorimage}{
fm_i}ifelse fM7 restore}FmBD}{/Fmi{save userdict/fM7 3 -1 roll put/fM9 F def{{
dup length 1 sub/fMGL fmXD/fMBC fmXD/fMNC fmXD/fMRC fmXD[/Indexed/DeviceRGB
fMGL{dup fMRC exch get exch dup fMNC exch get exch fMBC exch get}]setcolorspace
}{dup length 1 sub/fMGL fmXD/fMGC fmXD[/Indexed/DeviceGray fMGL{fMGC exch get}]
setcolorspace}ifelse}{1 4 index bitshift 1 sub/fMGL fmXD[/Indexed/DeviceGray
fMGL 5 -1 roll{{fMGL div 1 exch sub}}{{fMGL div}}ifelse]setcolorspace}ifelse
/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD translate rotate scale{-1 1 scale
}if/fM18 fM8 string def 7 dict begin/ImageType 1 def/Width fM4 def/Height fM3
def/ImageMatrix[fM4 0 0 fM3 fM4 2 div fM3 2 div]def/DataSource{currentfile fM18
fM5{readstring}{readhexstring}ifelse pop}def/BitsPerComponent fM6 def/Decode[0
fMGL]def currentdict end fm_i fM7 restore}FmBD}ifelse/Fmci{save userdict/fM7 3
-1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD/fM18 fM8 string def
/fMs fM18 0 fM18 length 3 idiv getinterval def translate rotate scale{-1 1
scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{currentfile fM18 fM5
{readstring}{readhexstring}ifelse pop}F 3 colorimage}{{currentfile fM18 fM5{
readstring}{readhexstring}ifelse pop fm31}fm_i}ifelse fM7 restore}FmBD/Fmc4{
save userdict/fM7 3 -1 roll put/fM5 fmXD/fM8 fmXD/fM6 fmXD/fM3 fmXD/fM4 fmXD
/fM18 fM8 string def/fMs fM18 0 fM18 length 4 idiv getinterval def translate
rotate scale{-1 1 scale}if fM4 fM3 fM6[fM4 0 0 fM3 fM4 2 div fM3 2 div]fMCl{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop}F 4 colorimage}{{
currentfile fM18 fM5{readstring}{readhexstring}ifelse pop fm41}fm_i}ifelse fM7
restore}FmBD fML1{/fmAn{transform round .5 sub exch round .5 sub exch
itransform}FmBD/fmAc{transform round 1.5 sub exch round 1.5 sub exch itransform
}FmBD/fmDn{dtransform round exch round exch idtransform}FmBD/fmLn{0 dtransform
exch cvi 2 idiv 2 mul .1 add exch idtransform pop}FmBD/FmCv{fmDn 6 2 roll fmDn
6 2 roll fmDn 6 2 roll rcurveto}FmBD}{T setstrokeadjust/fmAn{}FmBD/fmAc{}FmBD
/fmDn{}FmBD/fmLn{}FmBD/FmCv{rcurveto}FmBD}ifelse/FmM{fmAn moveto}FmBD/M{moveto}
FmBD/N{0 rmoveto}FmBD/S{fm_s}FmBD/A{0 exch fm_a}FmBD/W{0 exch 32 exch fm_w}FmBD
/X{0 exch 0 32 5 2 roll fm_y}FmBD/fmQP{fML1 fMGM or not{FmG dup 1 fm_g exec FmR
}if exec}FmBD/FmB{newpath fmAn moveto}FmBD/FmL{rlineto}FmBD/FmAL{fmAn lineto}
FmBD/FmSo{fmLn setlinewidth setlinecap{fm_t}fmQP 0 0 moveto}FmBD/FmS{fmLn
setlinewidth closepath{fm_t}fmQP 0 0 moveto}FmBD/FmDS{fmLn setlinewidth
setlinecap{closepath}if setdash{fm_t}fmQP[]0 setdash 0 0 moveto}FmBD/FmFl{FmG{
fm_e}fmQP FmR}FmBD/fmq{fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath}FmBD/FmqP{fmq fmLn setlinewidth{fm_t}fmQP
0 0 moveto}FmBD/FmqF{fmq FmG{fm_f}fmQP FmR}FmBD/FmKp{{currentpoint}stopped{F 5
1 roll}{T 7 3 roll}ifelse fmDn 4 2 roll fmAn newpath moveto 1 index 0 rlineto 0
exch rlineto neg 0 rlineto closepath clip{moveto}{newpath}ifelse}FmBD/FmKb{{
currentpoint}stopped}FmBD/FmKe{clip{newpath}{moveto}ifelse}FmBD/FmAF{FmG
newpath fmAn translate not{0.0 0.0 moveto}if rotate fmDn scale 0.0 0.0 1.0 5 3
roll arc closepath{fm_f}fmQP FmR}FmBD/FmAP{FmG{setdash}if fmLn setlinewidth
setlinecap fmSM newpath 2 index 2 div add exch 3 index 2 div sub exch fmAn 2
index 2 div sub exch 3 index 2 div add exch translate rotate scale 0.0 0.0 1.0
5 3 roll exch arcn{closepath}if fmRM{fm_t}fmQP FmR}FmBD/FmST{FmG fmAn translate
.3 fmLn setlinewidth 0 setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc
fm_f 0 fm_g 0 0 10 0 360 arc fm_t 36{1 0 moveto 0 0 10 -2.5 2.5 arc fm_f 10
rotate}repeat FmR}FmBD/FmSL{FmG fmAn translate .25 fmLn setlinewidth 0
setlinecap 0 setlinejoin newpath 1 fm_g 0 0 10 0 360 arc fm_f 0 fm_g 10 .5 fmLn
neg .1{0 0 3 -1 roll 0 360 arc fm_t}for FmR}FmBD/FrameEr where{pop}{userdict
/FrameEr(\000)put}ifelse/fMSJ 100 string def/fmXC{userdict/FrameEndPictSave 2
index put FmE{countdictstack userdict begin/showpage{}def/FrameDictStackDepth
exch def count/FrameStackDepth exch def}if userdict/FrameSuccessfull false put
FrameMacDict/fMHq get/$brkpage where dup{exch pop}if or{userdict
/FrameEndPictStopped false put}{userdict/FrameEndPictStopped true put
currentfile cvx stopped pop FrameSuccessfull not{systemdict/clear get exec
userdict/FrameEr get 0 1 put FrameMacDict begin FmG systemdict/initmatrix get
exec 0 systemdict/setgray get exec clippath{pathbbox}stopped{100 100 512 692}if
exch pop add 2. div newpath moveto(Courier-BoldOblique)findfont 18 scalefont
setfont FrameEr1 fm_s( \()fm_s $error begin errorname 20 string cvs fm_s(, )
fm_s/command load 128 string cvs fm_s end(\))fm_s FrameEr2 print flush
FrameMacDict/fMSJ get{dup currentfile exch{readline}stopped{pop exch pop T}if
not{exit}if(EndFrame5Picture)eq{exit}if}loop grestore end}if userdict
/FrameSuccessfull false put userdict/FrameEndPictStopped false put FrameMacDict
/fmIR get exec}ifelse}fmBi def/FmEP{save userdict/fM7 3 -1 roll put fMEd{
userdict 3 1 roll put}forall setoverprint{fMN FmSP}if[/fMef/fMet/fMeh/fMew/fMey
/fMex/fMei/fMej/fMek/fMel]{fmXD}forall fMex fMey translate fMet rotate fMew
fMeh scale fMef{-1 1 scale}if 1 fMej fMel sub div 1 fMek fMei sub div scale
fMej fMel add 2 div neg fMei fMek add 2 div neg translate 0 setgray 0
setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit[]0 setdash newpath
fML1 not{F setstrokeadjust}if T fmXC}FmBD/FmPI{newpath 0 0 moveto F fmXC}FmBD
/FmPc{save userdict/fM7 3 -1 roll put newpath 3 index neg 3 index neg translate
1 -1 scale 0.0 0.0 moveto T fmXC}FmBD/fmIR{FrameEndPictSave{fM7 type/savetype
eq{end/FrameDictStackDepth where{pop countdictstack FrameDictStackDepth sub dup
0 gt{{end}repeat}{pop}ifelse count FrameStackDepth sub dup 0 gt{{pop}repeat}{
pop}ifelse}if fM7 restore}if}if FrMacBegin}FmBD userdict/EndFrame5Picture{
userdict/FrameEndPictSave 3 -1 roll put userdict/FrameEndPictStopped get{
userdict/FrameSuccessfull true put stop}{FrameMacDict/fmIR get exec}ifelse}fmBi
put/alphaimage where{pop}{/alphaimage{1 ne{limitcheck}if not{limitcheck}if pop
image}fmPE}ifelse/fmDE{systemdict/initgraphics get exec clippath{pathbbox}
stopped{100 100 512 692}if exch pop add 2. div newpath moveto
(Courier-BoldOblique)findfont 18 scalefont setfont currentpoint 2 copy FrameEr3
fm_s 20 sub 2 copy moveto FrameEr4 fm_s 20 sub 2 copy moveto(\()fm_s statusdict
/jobname get fm_s(\))fm_s 20 sub moveto FrameEr5 fm_s showpage}FmBD/cd where{
dup/cd get/fmRC fmXD/cd{FrameMacDict begin FrameEr 0 get 0 ne{fmDE}if/fmRC load
end exec}fmBi put}{/endp where{dup/endp get/fMRE fmXD/endp{FrameMacDict/fMRE
get exec FrameEr 0 get 0 ne{FrameMacDict begin currentfile fMSJ{readline}
stopped{pop exch pop true}if pop(%%Trailer)eq{fmDE}if end}if}fmBi put}if}ifelse
systemdict/setpacking known{fMSP setpacking}if end
%%EndProcSet
%%FRMSetup
FrameMacDict begin
/FrameEr1(PostScript error)def
/FrameEr2(A PostScript error occurred. FrameMaker is attempting recovery.)def
/FrameEr3(FrameMaker has detected one or more)def
/FrameEr4(PostScript errors in this document.)def
/FrameEr5(Please check your output.)def
end
%%FRMEndSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 1 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
0 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
0 0 :M
f0_8 sf
( )S
2 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
2 0 :M
f1_8 sf
( )S
4 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
4 0 :M
f0_8 sf
( )S
6 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
114.541 N (Computer Science 217: )S
(Processes)S
240.471 N (P)S
-0.121 N (age )S
(202)S
7 FmP
64 0 648 18 FmqF
FmE
6 0 :M
f0_7 sf
( )S
7 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
8 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
8 0 :M
f2_24 sf
( )S
14 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
328.214 61 M (Pr)S
-0.48 N (ocesses)S
FmE
15 0 :M
f2_22 sf
( )S
21 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 115.333 M (\245)S
FmE
21 0 :M
f3_20 sf
( )S
26 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 115.333 M (UNIX process creation)S
FmE
26 0 :M
f3_16 sf
( )S
30 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 144.667 M (image-\336)S
0 N (le arg1 arg2 ...)S
FmE
31 0 :M
f2_22 sf
( )S
37 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 174.667 M (\245)S
FmE
37 0 :M
f2_16 sf
( )S
41 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 174.667 M (Shell command line e)S
-0.242 N (xample)S
FmE
41 0 :M
f3_16 sf
( )S
45 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 202.667 M (ls -l)S
100 230.667 M (Equiv)S
-0.402 N (alent to /bin/ls -l)S
100 258.667 M (Wh)S
-0.48 N (y?)S
FmE
46 0 :M
f2_22 sf
( )S
52 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 288.667 M (\245)S
FmE
52 0 :M
f2_16 sf
( )S
56 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 288.667 M (Ho)S
-0.242 N (w do y)S
-0.402 N (ou \336)S
0 N (nd out where the ima)S
-0.16 N (g)S
0.156 N (e \336)S
0 N (le is?)S
FmE
56 0 :M
f2_22 sf
( )S
62 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 318.667 M (\245)S
FmE
62 0 :M
f2_16 sf
( )S
66 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 318.667 M (Bac)S
-0.32 N (kgr)S
-0.32 N (ound pr)S
-0.32 N (ocesses)S
FmE
67 0 :M
f3_16 sf
( )S
71 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 346.667 M (ls -l &)S
FmE
71 0 :M
f2_22 sf
( )S
77 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 376.667 M (\245)S
FmE
77 0 :M
f2_16 sf
( )S
81 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 376.667 M (Ex)S
-0.16 N (ecute a pr)S
-0.32 N (ocess b)S
-0.32 N (y a system call)S
FmE
82 0 :M
f4_14 sf
( )S
90 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 403.333 M 0 0 445.091(int execlp \( const char *file, const char *arg, ... \))FmTx
FmE
90 0 :M
f3_16 sf
( )S
94 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 482.666 M (Replace the current process image with the speci\336)S
0 N (ed image \336)S
0 N (le)S
100 510.666 M (Retur)S
0.398 N (n only if it f)S
-0.48 N (ails)S
FmE
95 0 :M
f2_16 sf
( )S
99 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145 443.664 M (ima)S
-0.16 N (g)S
0.156 N (e-\336)S
0 N (le name)S
301.9 414.603 FmB
-1.785 -2.381 FmL
10.088 -3.846 FmL
-6.517 8.607 FmL
0.5 FmS
301.9 414.603 FmB
-1.785 -2.381 FmL
10.088 -3.846 FmL
-6.517 8.607 FmL
FmFl
274.928 434.832 FmB
26.772 -20.079 FmL
2 0.5 FmSo
330.848 452.664 M (Ar)S
-0.242 N (guments as in main\(\) and end with NULL)S
468.356 417.562 FmB
-2.566 -1.507 FmL
7.823 -7.441 FmL
-2.691 10.455 FmL
0.5 FmS
468.356 417.562 FmB
-2.566 -1.507 FmL
7.823 -7.441 FmL
-2.691 10.455 FmL
FmFl
451 443.832 FmB
13.672 -20 FmL
3.557 -6.054 FmL
2 0.5 FmSo
FmE
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 2 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
99 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
99 0 :M
f0_8 sf
( )S
101 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
101 0 :M
f1_8 sf
( )S
103 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
103 0 :M
f0_8 sf
( )S
105 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
100.858 N (Computer Science 217: )S
(Processes \(cont\325)S
-0.4 N (d\))S
226.788 N (P)S
-0.121 N (age )S
(203)S
7 FmP
64 0 648 18 FmqF
FmE
105 0 :M
f0_7 sf
( )S
106 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
107 0 :M
f2_24 sf
( )S
113 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
281.866 61 M (Pr)S
-0.48 N (ocesses \(cont\325)S
-1.922 N (d\))S
FmE
114 0 :M
f2_22 sf
( )S
120 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 109.667 M (\245)S
FmE
120 0 :M
f2_16 sf
( )S
124 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 109.667 M (Example)S
FmE
124 0 :M
f4_14 sf
( )S
132 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 136.333 M 0 0 277.132(execlp\( \322ls\323, \322ls\323, \322-l\323, NULL \);)FmTx
100 162.333 M 0 0 453.489(fprintf\( stderr, \322Couldn\325t execute \324ls\325\\n\323 \); exit\(1\);)FmTx
FmE
133 0 :M
f2_22 sf
( )S
139 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 197.333 M (\245)S
FmE
139 0 :M
f3_20 sf
( )S
144 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 197.333 M (There are man)S
-0.303 N (y other alter)S
0.498 N (nativ)S
-0.503 N (es to )S
FmE
144 0 :M
f5_20 sf
( )S
156 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
409.632 197.333 M 0 0 72.012(execlp)FmTx
FmE
156 0 :M
f3_20 sf
( )S
161 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
481.644 197.333 M (:)S
FmE
162 0 :M
f5_16 sf
( )S
171 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 227.667 M 0 0 499.281(int execl\( const char *path, const char *arg, ... \);)FmTx
100 256.667 M 0 0 489.68(int execv\( const char *path, char * const argv[] \);)FmTx
100 285.667 M 0 0 288.047(int execle\( const char *path, )FmTx
172 314.667 M 0 0 422.469(const char *arg, ..., char * const envp[] \);)FmTx
100 343.666 M 0 0 288.047(int execve\( const char *path, )FmTx
172 372.666 M 0 0 412.867(char * const argv[], char * const envp[] \);)FmTx
100 401.666 M 0 0 288.047(int execvp\( const char *file, )FmTx
172 430.666 M 0 0 211.234(char * const argv[] \);)FmTx
FmE
171 0 :M
f2_22 sf
( )S
177 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 466.333 M (\245)S
FmE
178 0 :M
f3_20 sf
( )S
183 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 466.333 M (What are the diff)S
-0.601 N (erences from )S
FmE
183 0 :M
f5_20 sf
( )S
195 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
350.403 466.333 M 0 0 72.012(execlp)FmTx
FmE
195 0 :M
f3_20 sf
( )S
200 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
422.415 466.333 M (?)S
FmE
201 0 :M
f2_22 sf
( )S
207 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 503.333 M (\245)S
FmE
207 0 :M
f3_20 sf
( )S
212 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 503.333 M (See man page f)S
-0.601 N (or details)S
FmE
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 3 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
212 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
212 0 :M
f0_8 sf
( )S
214 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
214 0 :M
f1_8 sf
( )S
216 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
216 0 :M
f0_8 sf
( )S
218 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
122.598 N (Computer Science 217: )S
(F)S
-0.121 N (ork)S
248.527 N (P)S
-0.121 N (age )S
(204)S
7 FmP
64 0 648 18 FmqF
FmE
218 0 :M
f0_7 sf
( )S
219 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 78 621 18 rC
220 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 78 621 18 FmqF
0 FmP
64 87 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
220 0 :M
f2_24 sf
( )S
226 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
348.502 70 M (Fork)S
FmE
227 0 :M
f2_22 sf
( )S
233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 118.667 M (\245)S
FmE
233 0 :M
f2_16 sf
( )S
237 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 118.667 M (Sometimes y)S
-0.402 N (ou don\325t want the ne)S
-0.242 N (w pr)S
-0.32 N (ocess to replace the current one)S
FmE
237 0 :M
f2_22 sf
( )S
243 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 148.667 M (\245)S
FmE
243 0 :M
f2_16 sf
( )S
247 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 148.667 M (f)S
-0.32 N (ork\(\) splits the current pr)S
-0.32 N (ocess into tw)S
-0.32 N (o copies:)S
FmE
248 0 :M
f2_22 sf
( )S
254 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 388.666 M (\245)S
FmE
254 0 :M
f2_16 sf
( )S
258 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 388.666 M (Return -1 on failure \(see man pa)S
-0.16 N (g)S
0.156 N (e f)S
-0.32 N (or more details\))S
FmE
258 0 :M
f2_22 sf
( )S
264 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 418.666 M (\245)S
FmE
264 0 :M
f2_16 sf
( )S
268 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 418.666 M (A c)S
-0.16 N (hild pr)S
-0.32 N (ocess has a unique pr)S
-0.32 N (ocess id \(pid\),)S
-0.641 N ( diff)S
-0.16 N (erent fr)S
-0.32 N (om its parent\325)S
-0.961 N (s)S
FmE
269 0 :M
f2_22 sf
( )S
275 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 448.666 M (\245)S
FmE
275 0 :M
f2_16 sf
( )S
279 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 448.666 M (A c)S
-0.16 N (hild pr)S
-0.32 N (ocess inherits en)S
-0.641 N (vir)S
-0.32 N (onment v)S
-0.32 N (ariab)S
-0.16 N (les fr)S
-0.32 N (om its parents)S
FmE
279 0 :M
f2_22 sf
( )S
285 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 478.666 M (\245)S
FmE
286 0 :M
f2_16 sf
( )S
290 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 478.666 M (A c)S
-0.16 N (hild pr)S
-0.32 N (ocess share \336)S
0 N (le descriptor)S
-0.242 N (s with its parent)S
FmE
290 0 :M
f2_22 sf
( )S
296 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 508.666 M (\245)S
FmE
296 0 :M
f2_16 sf
( )S
300 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 508.666 M (Are there an)S
-0.32 N (y pr)S
-0.32 N (ob)S
-0.16 N (lems with sharing \336)S
0 N (le descriptor)S
-0.242 N (s?)S
0.5 127 162 171 153 FmqP
127 207 FmB
207 0 FmL
2 0.5 FmSo
0.5 334 207 171 108 FmqP
FmE
301 0 :M
f2_18 sf
( )S
306 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
179.015 275.024 M (P)S
-0.541 N (arent)S
FmE
306 0 :M
f4_16 sf
( )S
315 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
145 234 M 0 0 134.422(/* pid != 0 */)FmTx
352.674 238.672 M 0 0 134.422(/* pid == 0 */)FmTx
FmE
315 0 :M
f2_18 sf
( )S
320 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
386.015 275.024 M (Child)S
FmE
320 0 :M
f4_16 sf
( )S
329 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
154 186.681 M 0 0 124.82(pid = fork\(\);)FmTx
FmE
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 4 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
330 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
330 0 :M
f0_8 sf
( )S
332 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
332 0 :M
f1_8 sf
( )S
334 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
334 0 :M
f0_8 sf
( )S
336 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
108.915 N (Computer Science 217: )S
(F)S
-0.121 N (ork \(cont\325)S
-0.4 N (d\))S
234.845 N (P)S
-0.121 N (age )S
(205)S
7 FmP
64 0 648 18 FmqF
FmE
336 0 :M
f0_7 sf
( )S
337 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
338 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
338 0 :M
f2_24 sf
( )S
344 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
315.654 61 M (Fork \(cont\325)S
-1.922 N (d\))S
FmE
345 0 :M
f2_22 sf
( )S
351 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 115.333 M (\245)S
FmE
351 0 :M
f3_20 sf
( )S
356 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 115.333 M (Duplicate a \336)S
0 N (le descr)S
0.298 N (iptor and )S
-0.601 N (\322pic)S
-0.4 N (k\323)S
-0.801 N ( an un)S
-0.2 N (used descr)S
0.298 N (iptor f)S
-0.601 N (or it)S
FmE
356 0 :M
f4_16 sf
( )S
365 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 145.667 M 0 0 172.828(int dup\( int fd \);)FmTx
FmE
366 0 :M
f3_16 sf
( )S
370 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 173.667 M (Duplicate )S
-0.48 N (\322fd\323)S
100 201.667 M (Use the )S
-0.48 N (\322lo)S
-0.242 N (w)S
-0.16 N (est\323)S
-0.641 N ( n)S
-0.16 N (umbered, unallocated \336)S
0 N (le descr)S
0.238 N (iptor)S
100 229.667 M (Thus)S
-0.242 N (, one can close \336)S
0 N (le descr)S
0.238 N (iptors to let the system pic)S
-0.32 N (k the r)S
0.238 N (ight one)S
FmE
370 0 :M
f2_22 sf
( )S
376 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 259.667 M (\245)S
FmE
376 0 :M
f2_16 sf
( )S
380 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 259.667 M (Connect the standar)S
-0.32 N (d input \(stdin\) of a pr)S
-0.32 N (ogram to a \336)S
0 N (le:)S
FmE
381 0 :M
f5_16 sf
( )S
390 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 288.667 M 0 0 67.211(int fd;)FmTx
100 304.667 M 0 0 307.25(fd = open\( \322foo\323, O_RDONLY, 0 \);)FmTx
100 320.667 M 0 0 105.617(close\( 0 \);)FmTx
100 336.667 M 0 0 96.016(dup\( fd \);)FmTx
100 352.666 M 0 0 115.219(close\( fd \);)FmTx
FmE
391 0 :M
f2_22 sf
( )S
397 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 375.666 M (\245)S
FmE
397 0 :M
f2_16 sf
( )S
401 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 375.666 M (This is not so con)S
-0.641 N (venient,)S
-0.641 N ( so there is an e)S
-0.242 N (xtension call:)S
FmE
401 0 :M
f4_14 sf
( )S
409 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 402.333 M 0 0 243.541(int dup2\( int fd1, int fd2 \);)FmTx
FmE
409 0 :M
f3_16 sf
( )S
413 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 429.666 M (Use )S
-0.48 N (\322fd2\323)S
-0.641 N ( to duplicate )S
-0.48 N (\322fd1\323)S
100 450.666 M (If )S
-0.48 N (\322fd2\323)S
-0.641 N ( is in use)S
-0.242 N (, perf)S
-0.48 N (or)S
0.398 N (m )S
-0.48 N (\322close\( fd2 \)\323)S
FmE
414 0 :M
f5_16 sf
( )S
423 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 473.666 M 0 0 307.25(fd = open\( \322foo\323, O_RDONLY, 0 \);)FmTx
100 489.666 M 0 0 124.82(dup\( fd, 0 \);)FmTx
100 505.666 M 0 0 115.219(close\( fd \);)FmTx
FmE
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 5 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
424 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
424 0 :M
f0_8 sf
( )S
426 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
426 0 :M
f1_8 sf
( )S
428 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
428 0 :M
f0_8 sf
( )S
430 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
122.641 N (Computer Science 217: )S
(W)S
-0.641 N (ait)S
248.57 N (P)S
-0.121 N (age )S
(206)S
7 FmP
64 0 648 18 FmqF
FmE
430 0 :M
f0_7 sf
( )S
431 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
432 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
432 0 :M
f2_24 sf
( )S
438 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
363.156 61 M (W)S
-0.961 N (ait)S
FmE
439 0 :M
f2_22 sf
( )S
445 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 109.667 M (\245)S
FmE
445 0 :M
f2_16 sf
( )S
449 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 109.667 M (A parent ma)S
-0.32 N (y want to wait until its c)S
-0.16 N (hild dies \(terminates\),)S
-0.641 N ( and then do something)S
FmE
449 0 :M
f4_14 sf
( )S
457 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 136.333 M 0 0 293.928(pid_t wait\( int *status_location \);)FmTx
FmE
458 0 :M
f3_16 sf
( )S
462 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 163.667 M (Retur)S
0.398 N (ned )S
-0.48 N (\322pid\323)S
-0.641 N ( is the pid of the ter)S
0.398 N (minated child process)S
FmE
462 0 :M
f2_16 sf
( )S
466 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 190.333 M (Return -1 if no c)S
-0.16 N (hilden alive)S
FmE
467 0 :M
f2_22 sf
( )S
473 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 219.667 M (\245)S
FmE
473 0 :M
f2_16 sf
( )S
477 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 219.667 M (The basic wa)S
-0.32 N (y to f)S
-0.32 N (ork and wait is:)S
FmE
477 0 :M
f4_14 sf
( )S
485 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 246.333 M 0 0 167.959(if \( fork\(\) == 0 \) {)FmTx
136 272.333 M 0 0 268.734(execlp\( \322ls\323, \322ls\323, -l\323, NULL \);)FmTx
0 0 8.398( )FmTx
46.868 N 0 0 92.377(/* child */)FmTx
136 298.333 M 0 0 25.194(...)FmTx
136 324.333 M 0 0 134.367(fd = dup\( fd1 \);)FmTx
189.633 N 0 0 125.969(/* if needed */)FmTx
136 350.333 M 0 0 25.194(...)FmTx
100 376.333 M 0 0 8.398(})FmTx
100 402.333 M 0 0 184.755(pid = wait\( &status \);)FmTx
175.245 N 0 0 100.775(/* parent */)FmTx
FmE
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 6 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
485 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
485 0 :M
f0_8 sf
( )S
487 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
487 0 :M
f1_8 sf
( )S
489 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
489 0 :M
f0_8 sf
( )S
491 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
103.428 N (Computer Science 217: )S
(Pipes and Filters)S
229.357 N (P)S
-0.121 N (age )S
(207)S
7 FmP
64 0 648 18 FmqF
FmE
491 0 :M
f0_7 sf
( )S
492 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
493 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
493 0 :M
f2_24 sf
( )S
499 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
292.173 61 M (Pipes and Filter)S
-0.363 N (s)S
FmE
500 0 :M
f2_22 sf
( )S
506 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 115.333 M (\245)S
FmE
506 0 :M
f3_20 sf
( )S
511 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 115.333 M (A pipe -- An inter)S
0.596 N (process comm)S
-0.2 N (unication channel)S
FmE
511 0 :M
f2_22 sf
( )S
517 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 314.667 M (\245)S
FmE
517 0 :M
f2_16 sf
( )S
521 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 314.667 M (A \336)S
0 N (lter takes input fr)S
-0.32 N (om stdin and puts output to stdout)S
FmE
522 0 :M
f2_22 sf
( )S
528 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 484.666 M (\245)S
FmE
528 0 :M
f2_16 sf
( )S
532 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 484.666 M (Man)S
-0.32 N (y Unix tools are \336)S
0 N (lter)S
-0.242 N (s and csh suppor)S
0.316 N (ts pipes)S
FmE
532 0 :M
f5_14 sf
( )S
540 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 511.333 M 0 0 100.775(ls -l | more)FmTx
0.5 91 135 117 72 FmqP
FmE
541 0 :M
f2_16 sf
( )S
545 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
109 176.466 M (Pr)S
-0.32 N (ocess A)S
327.055 N (Pr)S
-0.32 N (ocess B)S
484.715 171 FmB
0 -2.976 FmL
10.378 2.976 FmL
-10.378 2.976 FmL
0.5 FmS
484.715 171 FmB
0 -2.976 FmL
10.378 2.976 FmL
-10.378 2.976 FmL
FmFl
460 171 FmB
24.465 0 FmL
2 0.5 FmSo
3 FmP
0 360 9 18 0 T 253 171 FmAF
0 FmP
T 0 360 9 18 0 253 171 2 3 F FmAP
T 0 360 9 18 0 451 171 2 0.5 F FmAP
253 153 FmB
198 0 FmL
2 0.5 FmSo
253 189 FmB
198 0 FmL
2 0.5 FmSo
241.715 171 FmB
0 -2.976 FmL
10.378 2.976 FmL
-10.378 2.976 FmL
0.5 FmS
241.715 171 FmB
0 -2.976 FmL
10.378 2.976 FmL
-10.378 2.976 FmL
FmFl
208 171 FmB
33.465 0 FmL
2 0.5 FmSo
226 216 M (output)S
166.25 N (input)S
0.5 496 135 117 73 FmqP
0.5 289 341 117 73 FmqP
330.901 383.466 M (Filter)S
277.715 378 FmB
0 -2.976 FmL
10.378 2.976 FmL
-10.378 2.976 FmL
0.5 FmS
277.715 378 FmB
0 -2.976 FmL
10.378 2.976 FmL
-10.378 2.976 FmL
FmFl
235 378 FmB
42.465 0 FmL
2 0.5 FmSo
439.715 378 FmB
0 -2.976 FmL
10.378 2.976 FmL
-10.378 2.976 FmL
0.5 FmS
439.715 378 FmB
0 -2.976 FmL
10.378 2.976 FmL
-10.378 2.976 FmL
FmFl
406 378 FmB
33.465 0 FmL
2 0.5 FmSo
FmE
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 7 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
545 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
545 0 :M
f0_8 sf
( )S
547 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
547 0 :M
f1_8 sf
( )S
549 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
549 0 :M
f0_8 sf
( )S
551 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
108.209 N (Computer Science 217: )S
(Pipe Creation)S
234.139 N (P)S
-0.121 N (age )S
(208)S
7 FmP
64 0 648 18 FmqF
FmE
551 0 :M
f0_7 sf
( )S
552 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
553 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
553 0 :M
f2_24 sf
( )S
559 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
310.668 61 M (Pipe Creation)S
FmE
560 0 :M
f2_22 sf
( )S
566 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 115.333 M (\245)S
FmE
566 0 :M
f3_20 sf
( )S
571 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 115.333 M (System call to create a pipe )S
FmE
571 0 :M
f4_16 sf
( )S
580 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 145.667 M 0 0 230.438(int pipe\( int fd[ 2 ] \);)FmTx
FmE
581 0 :M
f3_16 sf
( )S
585 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 173.667 M (Retur)S
0.398 N (n 0 on success and -1 on f)S
-0.48 N (ailure)S
100 201.667 M (fd[ 0 ] is opened f)S
-0.48 N (or reading)S
100 229.667 M (fd[ 1 ] is opened f)S
-0.48 N (or wr)S
0.238 N (iting)S
FmE
585 0 :M
f2_22 sf
( )S
591 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 259.667 M (\245)S
FmE
591 0 :M
f2_16 sf
( )S
595 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 259.667 M (T)S
-0.961 N (w)S
-0.32 N -0.04(o coor)W
-0.32 N -0.04(dinated pr)W
-0.32 N -0.04(ocesses created b)W
-0.32 N -0.04(y f)W
-0.32 N -0.04(ork\(\) can pass data using read\(\) and write\(\))W
FmE
596 0 :M
f2_22 sf
( )S
602 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 289.667 M (\245)S
FmE
602 0 :M
f2_16 sf
( )S
606 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 289.667 M (Simple e)S
-0.242 N (xample:)S
-0.641 N ( a parent writes to a pipe and a c)S
-0.16 N (hild reads fr)S
-0.32 N (om a pipe)S
FmE
606 0 :M
f5_14 sf
( )S
614 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 316.333 M 0 0 117.571(int pid, p[2];)FmTx
100 336.333 M 0 0 25.194(...)FmTx
FmE
615 0 :M
f4_14 sf
( )S
623 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 356.333 M 0 0 75.582(pipe\( p \))FmTx
FmE
623 0 :M
f5_14 sf
( )S
631 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.582 356.333 M 0 0 8.398(;)FmTx
100 376.333 M 0 0 109.173(if \( \( pid = )FmTx
FmE
632 0 :M
f4_14 sf
( )S
640 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
209.173 376.333 M 0 0 50.388(fork\(\))FmTx
FmE
640 0 :M
f5_14 sf
( )S
648 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.561 376.333 M 0 0 92.377( \) == 0 \) {)FmTx
136 396.333 M 0 0 117.571(close\( p[1] \);)FmTx
136 416.333 M 0 0 352.714(... read using p[0] as file descriptor ...)FmTx
100 436.333 M 0 0 8.398(})FmTx
100 456.333 M 0 0 117.571(close\( p[0] \);)FmTx
100 476.333 M 0 0 361.112(... write using p[1] as file descriptor ...)FmTx
FmE
648 0 :M
f4_14 sf
( )S
656 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 496.333 M 0 0 117.571(close\( p[1] \);)FmTx
98.429 N 0 0 260.336(/* send EOF to the read port */)FmTx
100 516.333 M 0 0 33.592(wait)FmTx
FmE
657 0 :M
f5_14 sf
( )S
665 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
133.592 516.333 M 0 0 100.775(\( &status \);)FmTx
FmE
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 8 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
665 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
665 0 :M
f0_8 sf
( )S
667 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
667 0 :M
f1_8 sf
( )S
669 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
669 0 :M
f0_8 sf
( )S
671 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
101.432 N (Computer Science 217: )S
(Standard I/O Pipe)S
227.361 N (P)S
-0.121 N (age )S
(209)S
7 FmP
64 0 648 18 FmqF
FmE
671 0 :M
f0_7 sf
( )S
672 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
673 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
673 0 :M
f2_24 sf
( )S
679 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288.235 61 M (Standar)S
-0.48 N (d I/O Pipe)S
FmE
680 0 :M
f2_22 sf
( )S
686 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 109.667 M (\245)S
FmE
686 0 :M
f2_16 sf
( )S
690 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 109.667 M (Connect a pipe to parent\325)S
-0.961 N (s stdout and c)S
-0.16 N (hild\325)S
-0.961 N (s stdin)S
FmE
690 0 :M
f5_14 sf
( )S
698 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 136.333 M 0 0 117.571(int pid, p[2];)FmTx
100 162.333 M 0 0 25.194(...)FmTx
FmE
699 0 :M
f4_14 sf
( )S
707 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 188.333 M 0 0 75.582(pipe\( p \))FmTx
FmE
707 0 :M
f5_14 sf
( )S
715 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
175.582 188.333 M 0 0 8.398(;)FmTx
100 214.333 M 0 0 109.173(if \( \( pid = )FmTx
FmE
715 0 :M
f4_14 sf
( )S
723 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
209.173 214.333 M 0 0 50.388(fork\(\))FmTx
FmE
724 0 :M
f5_14 sf
( )S
732 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
259.561 214.333 M 0 0 92.377( \) == 0 \) {)FmTx
136 240.333 M 0 0 117.571(close\( p[1] \);)FmTx
FmE
732 0 :M
f4_14 sf
( )S
740 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 266.333 M 0 0 125.969(dup2\( p[0], 0 \))FmTx
FmE
741 0 :M
f5_14 sf
( )S
749 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
261.969 266.333 M 0 0 8.398(;)FmTx
81.633 N 0 0 268.734(/* duplicate p[0] using stdin */)FmTx
136 292.333 M 0 0 117.571(close\( p[0] \);)FmTx
136 318.333 M 0 0 193.153(... read from stdin ...)FmTx
136 344.333 M 0 0 83.979(exit\( 0 \);)FmTx
100 370.333 M 0 0 8.398(})FmTx
100 396.333 M 0 0 117.571(close\( p[0] \);)FmTx
FmE
749 0 :M
f4_14 sf
( )S
757 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 422.333 M 0 0 125.969(dup2\( p[1], 1 \))FmTx
FmE
757 0 :M
f5_14 sf
( )S
765 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
225.969 422.333 M 0 0 8.398(;)FmTx
117.633 N 0 0 277.132(/* duplicate p[1] using stdout */)FmTx
100 448.333 M 0 0 117.571(close\( p[1] \);)FmTx
100 474.333 M 0 0 193.153(... write to stdout ...)FmTx
FmE
766 0 :M
f4_14 sf
( )S
774 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 500.333 M 0 0 125.969(wait\( &status \))FmTx
FmE
774 0 :M
f5_14 sf
( )S
782 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
225.969 500.333 M 0 0 8.398(;)FmTx
FmE
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 9 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
783 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
783 0 :M
f0_8 sf
( )S
785 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
785 0 :M
f1_8 sf
( )S
787 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
787 0 :M
f0_8 sf
( )S
789 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
113.291 N (Computer Science 217: )S
FmE
789 0 :M
f5_8 sf
( )S
793 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
409.744 563.333 M 0 0 33.605(Signals)FmTx
FmE
794 0 :M
f0_8 sf
( )S
796 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
682.57 563.333 M (P)S
-0.121 N (age )S
(210)S
7 FmP
64 0 648 18 FmqF
FmE
796 0 :M
f0_7 sf
( )S
797 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
798 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
798 0 :M
f2_24 sf
( )S
804 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345.326 61 M (Signals)S
FmE
805 0 :M
f2_22 sf
( )S
811 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 115.333 M (\245)S
FmE
811 0 :M
f3_20 sf
( )S
816 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 115.333 M (Outside w)S
-0.2 N (or)S
0.298 N (ld signals are interr)S
0.298 N (upts)S
FmE
816 0 :M
f3_16 sf
( )S
820 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 144.667 M (CTRL-C is typed)S
100 172.667 M (phone is hung up)S
136 200.667 M (.)S
-0.961 N ( .)S
-0.961 N ( .)S
FmE
821 0 :M
f2_22 sf
( )S
827 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 230.667 M (\245)S
FmE
827 0 :M
f2_16 sf
( )S
831 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 230.667 M (Pr)S
-0.32 N (ocesses ma)S
-0.32 N (y need to respond to the signals)S
7 FmP
145 261 135 243 FmqF
0 FmP
0.5 FmS
172 333 M (...)S
172 365 M (...)S
210.129 340.145 FmB
0.489 2.935 FmL
-10.726 -1.229 FmL
9.748 -4.641 FmL
0.5 FmS
210.129 340.145 FmB
0.489 2.935 FmL
-10.726 -1.229 FmL
9.748 -4.641 FmL
FmFl
361 315 FmB
-150.624 25.104 FmL
2 0.5 FmSo
379 342 FmB
-9.941 0 -18 8.059 -18 18 FmCv
0 15 0 30 0 45 FmCv
0 9.941 8.059 18 18 18 FmCv
45 0 90 0 135 0 FmCv
9.941 0 18 -8.059 18 -18 FmCv
0 -15 0 -30 0 -45 FmCv
0 -9.941 -8.059 -18 -18 -18 FmCv
-45 0 -90 0 -135 0 FmCv
0.5 FmS
397 369 M (handler\(\))S
370 306 M (a signal)S
349.716 342 FmB
0 -2.976 FmL
10.378 2.976 FmL
-10.378 2.976 FmL
0.5 FmS
349.716 342 FmB
0 -2.976 FmL
10.378 2.976 FmL
-10.378 2.976 FmL
FmFl
199 342 FmB
150.466 0 FmL
2 0.5 FmSo
209.198 346.831 FmB
-1.274 2.689 FmL
-8.105 -7.132 FmL
10.653 1.753 FmL
0.5 FmS
209.198 346.831 FmB
-1.274 2.689 FmL
-8.105 -7.132 FmL
10.653 1.753 FmL
FmFl
370 423 FmB
-160.576 -76.062 FmL
2 0.5 FmSo
172 254.664 M (A pr)S
-0.32 N (ocess)S
FmE
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 10 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
831 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
831 0 :M
f0_8 sf
( )S
833 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
833 0 :M
f1_8 sf
( )S
835 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
835 0 :M
f0_8 sf
( )S
837 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
95.713 N (Computer Science 217: )S
(UNIX Signal F)S
-0.121 N (acility)S
221.643 N (P)S
-0.121 N (age )S
(211)S
7 FmP
64 0 648 18 FmqF
FmE
837 0 :M
f0_7 sf
( )S
838 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
839 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
839 0 :M
f2_24 sf
( )S
845 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
275.567 61 M (UNIX Signal F)S
-0.48 N (acility)S
FmE
846 0 :M
f2_22 sf
( )S
852 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 109.667 M (\245)S
FmE
852 0 :M
f2_16 sf
( )S
856 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 109.667 M (UNIX pr)S
-0.32 N (o)S
-0.32 N (vides a mec)S
-0.16 N (hanism f)S
-0.32 N (or catc)S
-0.16 N (hing a signal \(like an e)S
-0.242 N (xception\))S
FmE
856 0 :M
f4_16 sf
( )S
865 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 138.667 M 0 0 566.492(void \(* signal\( int sig, void \(* handler\)\( int \) \) \( int \);)FmTx
FmE
866 0 :M
f3_16 sf
( )S
870 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 166.667 M (The function )S
-0.48 N (\322handler\(\)\323)S
-0.641 N ( will be in)S
-0.32 N (v)S
-0.402 N (ok)S
-0.32 N (ed on a signal )S
-0.48 N (\322sig\323)S
FmE
870 0 :M
f4_14 sf
( )S
878 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 193.333 M 0 0 117.571(handler\( sig \))FmTx
FmE
879 0 :M
f5_14 sf
( )S
887 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
253.571 193.333 M 0 0 8.398(;)FmTx
FmE
887 0 :M
f3_16 sf
( )S
891 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 220.667 M (Retur)S
0.398 N (n the old signal handler on success and -1 on an error)S
FmE
892 0 :M
f2_22 sf
( )S
898 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 250.667 M (\245)S
FmE
898 0 :M
f2_16 sf
( )S
902 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 250.667 M (Examples)S
FmE
902 0 :M
f5_14 sf
( )S
910 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 277.333 M 0 0 159.561(#include <signal.h>)FmTx
100 303.333 M 0 0 25.194(...)FmTx
FmE
910 0 :M
f4_14 sf
( )S
918 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 329.333 M 0 0 209.949(signal\( SIGINT, SIG_IGN \))FmTx
FmE
919 0 :M
f5_14 sf
( )S
927 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
309.949 329.333 M 0 0 16.796(; )FmTx
61.255 N 0 0 193.153(/* ignore interrupts */)FmTx
100 355.333 M 0 0 25.194(...)FmTx
FmE
927 0 :M
f4_14 sf
( )S
935 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 381.333 M 0 0 209.949(signal\( SIGINT, SIG_DFL \))FmTx
FmE
936 0 :M
f5_14 sf
( )S
944 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
309.949 381.333 M 0 0 8.398(;)FmTx
69.653 N 0 0 277.132(/* restore the default handler */)FmTx
FmE
944 0 :M
f2_22 sf
( )S
950 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 436.666 M (\245)S
FmE
950 0 :M
f2_16 sf
( )S
954 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 436.666 M (There are more than 30 prede\336)S
0 N (ned signals in <signal.h>)S
FmE
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 11 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
955 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
955 0 :M
f0_8 sf
( )S
957 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
957 0 :M
f1_8 sf
( )S
959 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
959 0 :M
f0_8 sf
( )S
961 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
88.768 N (Computer Science 217: )S
(Signal Handling Example)S
214.697 N (P)S
-0.121 N (age )S
(212)S
7 FmP
64 0 648 18 FmqF
FmE
961 0 :M
f0_7 sf
( )S
962 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
963 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
963 0 :M
f2_24 sf
( )S
969 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
244.659 61 M (Signal Handling Example)S
FmE
970 0 :M
f2_22 sf
( )S
976 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 115.333 M (\245)S
FmE
976 0 :M
f3_20 sf
( )S
981 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 115.333 M (Remo)S
-0.303 N (v)S
-0.503 N (e )S
-0.601 N (\322temp\336)S
0 N (le\323)S
-0.801 N ( on an interr)S
0.298 N (upt:)S
FmE
981 0 :M
f5_14 sf
( )S
989 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 143.333 M 0 0 193.153(#include <sys/signal.h>)FmTx
100 164.333 M 0 0 235.143(char *tempfile = \322temp.xxx\323;)FmTx
100 190.333 M 0 0 41.99(void )FmTx
FmE
990 0 :M
f4_14 sf
( )S
998 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.99 190.333 M 0 0 58.786(cleanup)FmTx
FmE
998 0 :M
f5_14 sf
( )S
1006 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.775 190.333 M 0 0 92.377(\( int sig \))FmTx
100 211.333 M 0 0 8.398({)FmTx
FmE
1007 0 :M
f4_14 sf
( )S
1015 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 232.333 M 0 0 50.388(unlink)FmTx
FmE
1015 0 :M
f5_14 sf
( )S
1023 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.388 232.333 M 0 0 109.173(\( tempfile \);)FmTx
136 253.333 M 0 0 83.979(exit\( 1 \);)FmTx
100 274.333 M 0 0 16.796(};)FmTx
100 300.333 M 0 0 142.765(void main\( void \))FmTx
100 321.333 M 0 0 8.398({)FmTx
136 342.333 M 0 0 58.786(int fd;)FmTx
FmE
1023 0 :M
f4_14 sf
( )S
1031 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 384.333 M 0 0 209.949(signal\( SIGINT, cleanup \))FmTx
FmE
1032 0 :M
f5_14 sf
( )S
1040 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
345.949 384.333 M 0 0 8.398(;)FmTx
33.653 N 0 0 302.326(/* set up cleanup\(\) for interrupt */)FmTx
136 426.333 M 0 0 310.724(fd = open\( tempfile, O_CREAT, 0666 \);)FmTx
172 447.333 M 0 0 25.194(...)FmTx
190.806 N 0 0 260.336(/* processing using tempfile */)FmTx
136 468.333 M 0 0 100.775(close\( fd \);)FmTx
100 489.333 M 0 0 8.398(})FmTx
FmE
1040 0 :M
f2_22 sf
( )S
1046 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 513.666 M (\245)S
FmE
1046 0 :M
f2_16 sf
( )S
1050 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 513.666 M (What happens to bac)S
-0.32 N (kgr)S
-0.32 N (ound pr)S
-0.32 N (ocesses \(star)S
0.316 N (ted with )S
-1.281 N (\322&\323)S
-1.281 N ( f)S
-0.32 N (or e)S
-0.242 N (xample\)?)S
FmE
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 12 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
1051 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1051 0 :M
f0_8 sf
( )S
1053 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
1053 0 :M
f1_8 sf
( )S
1055 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
1055 0 :M
f0_8 sf
( )S
1057 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
92.766 N (Computer Science 217: )S
(Signal Handling Safely)S
218.695 N (P)S
-0.121 N (age )S
(213)S
7 FmP
64 0 648 18 FmqF
FmE
1057 0 :M
f0_7 sf
( )S
1058 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
1059 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
1059 0 :M
f2_24 sf
( )S
1065 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
258.965 61 M (Signal Handling Saf)S
-0.24 N (el)S
-0.363 N (y)S
FmE
1066 0 :M
f5_14 sf
( )S
1074 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 106.333 M 0 0 193.153(#include <sys/signal.h>)FmTx
100 127.333 M 0 0 235.143(char *tempfile = \322temp.xxx\323;)FmTx
100 169.333 M 0 0 41.99(void )FmTx
FmE
1074 0 :M
f4_14 sf
( )S
1082 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.99 169.333 M 0 0 58.786(cleanup)FmTx
FmE
1082 0 :M
f5_14 sf
( )S
1090 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.775 169.333 M 0 0 92.377(\( int sig \))FmTx
100 190.333 M 0 0 8.398({)FmTx
FmE
1091 0 :M
f4_14 sf
( )S
1099 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 211.333 M 0 0 50.388(unlink)FmTx
FmE
1099 0 :M
f5_14 sf
( )S
1107 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
186.388 211.333 M 0 0 109.173(\( tempfile \);)FmTx
136 232.333 M 0 0 83.979(exit\( 1 \);)FmTx
100 253.333 M 0 0 16.796(};)FmTx
100 295.333 M 0 0 142.765(void main\( void \))FmTx
100 316.333 M 0 0 8.398({)FmTx
136 337.333 M 0 0 58.786(int fd;)FmTx
352 358.333 M 0 0 285.53(/* protect background processes */)FmTx
FmE
1108 0 :M
f4_14 sf
( )S
1116 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 379.333 M 0 0 361.112(if \( signal\( SIGINT, SIG_IGN \) != SIG_IGN \))FmTx
172 400.333 M 0 0 209.949(signal\( SIGINT, cleanup \))FmTx
FmE
1116 0 :M
f5_14 sf
( )S
1124 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
381.949 400.333 M 0 0 8.398(;)FmTx
136 421.333 M 0 0 310.724(fd = open\( tempfile, O_CREAT, 0666 \);)FmTx
172 442.333 M 0 0 25.194(...)FmTx
154.806 N 0 0 260.336(/* processing using tempfile */)FmTx
136 463.333 M 0 0 100.775(close\( fd \);)FmTx
100 484.333 M 0 0 8.398(})FmTx
FmE
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 13 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
1124 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1124 0 :M
f0_8 sf
( )S
1126 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
1126 0 :M
f1_8 sf
( )S
1128 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
1128 0 :M
f0_8 sf
( )S
1130 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
103.545 N (Computer Science 217: )S
(Interpret Signals)S
229.475 N (P)S
-0.121 N (age )S
(214)S
7 FmP
64 0 648 18 FmqF
FmE
1130 0 :M
f0_7 sf
( )S
1131 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
1132 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
1132 0 :M
f2_24 sf
( )S
1138 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
293.336 61 M (Interpret Signals)S
FmE
1139 0 :M
f2_22 sf
( )S
1145 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 115.333 M (\245)S
FmE
1145 0 :M
f3_20 sf
( )S
1150 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 115.333 M (Interr)S
0.298 N (upt a long pr)S
0.298 N (intout and go to main processing loop)S
FmE
1150 0 :M
f5_14 sf
( )S
1158 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 143.333 M 0 0 193.153(#include <sys/signal.h>)FmTx
100 163.333 M 0 0 159.561(#include <setjmp.h>)FmTx
100 188.333 M 0 0 125.969(jmp_buf jmpbuf;)FmTx
100 228.333 M 0 0 193.153(void handler\( int sig \))FmTx
100 248.333 M 0 0 8.398({)FmTx
FmE
1159 0 :M
f4_14 sf
( )S
1167 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 268.333 M 0 0 218.347(signal\( SIGINT, handler \);)FmTx
105.653 N 0 0 159.561(/* reset handler */)FmTx
FmE
1167 0 :M
f5_14 sf
( )S
1175 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 288.333 M 0 0 293.928(fprintf\( stderr, \322Interrupted\\n\323 \);)FmTx
FmE
1176 0 :M
f4_14 sf
( )S
1184 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 308.333 M 0 0 176.357(longjmp\( jmpbuf, 0 \);)FmTx
147.643 N 0 0 176.357(/* go to main loop */)FmTx
FmE
1184 0 :M
f5_14 sf
( )S
1192 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 328.333 M 0 0 8.398(})FmTx
100 358.333 M 0 0 142.765(void main\( void \))FmTx
100 378.333 M 0 0 8.398({)FmTx
FmE
1192 0 :M
f4_14 sf
( )S
1200 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 398.333 M 0 0 361.112(if \( signal\( SIGINT, SIG_IGN \) != SIG_IGN \))FmTx
172 418.333 M 0 0 201.551(signal\( SIGINT, handler\))FmTx
FmE
1201 0 :M
f5_14 sf
( )S
1209 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
373.551 418.333 M 0 0 8.398(;)FmTx
FmE
1209 0 :M
f4_14 sf
( )S
1217 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 438.333 M 0 0 142.765(setjmp\( jmpbuf \);)FmTx
FmE
1218 0 :M
f5_14 sf
( )S
1226 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
136 463.333 M 0 0 109.173(for \( ; ; \) {)FmTx
214.827 N 0 0 218.347(/* main processing loop */)FmTx
172 483.333 M 0 0 25.194(...)FmTx
136 503.333 M 0 0 8.398(})FmTx
100 523.333 M 0 0 8.398(})FmTx
FmE
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 14 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
1226 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1226 0 :M
f0_8 sf
( )S
1228 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
1228 0 :M
f1_8 sf
( )S
1230 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
1230 0 :M
f0_8 sf
( )S
1232 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
101.707 N (Computer Science 217: )S
(Signals with F)S
-0.121 N (ork)S
227.637 N (P)S
-0.121 N (age )S
(215)S
7 FmP
64 0 648 18 FmqF
FmE
1232 0 :M
f0_7 sf
( )S
1233 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
1234 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
1234 0 :M
f2_24 sf
( )S
1240 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
288.669 61 M (Signals with Fork)S
FmE
1241 0 :M
f2_22 sf
( )S
1247 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 115.333 M (\245)S
FmE
1247 0 :M
f3_20 sf
( )S
1252 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 115.333 M (Signals are sent to all y)S
-0.4 N (our processes)S
FmE
1252 0 :M
f2_22 sf
( )S
1258 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 152.333 M (\245)S
FmE
1258 0 :M
f3_20 sf
( )S
1263 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 152.333 M (Y)S
-2.803 N (ou often w)S
-0.303 N (ant to disab)S
-0.4 N (le signals and enab)S
-0.4 N (le them later)S
FmE
1264 0 :M
f2_22 sf
( )S
1270 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 189.333 M (\245)S
FmE
1270 0 :M
f3_20 sf
( )S
1275 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 189.333 M (f)S
-0.601 N (or)S
0.298 N (k\(\) ma)S
-0.601 N (y cause tw)S
-0.2 N (o processes to read y)S
-0.4 N (our ter)S
0.498 N (minal \(/de)S
-0.601 N (v/tty\) at the )S
82 211.333 M (same time)S
FmE
1276 0 :M
f2_22 sf
( )S
1282 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 248.333 M (\245)S
FmE
1282 0 :M
f3_20 sf
( )S
1287 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 248.333 M (An e)S
-0.601 N (xample:)S
FmE
1287 0 :M
f5_14 sf
( )S
1295 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 276.333 M 0 0 159.561(#include <signal.h>)FmTx
100 328.333 M 0 0 25.194(...)FmTx
FmE
1296 0 :M
f4_14 sf
( )S
1304 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 354.333 M 0 0 151.163(if \( fork\(\) == 0 \))FmTx
136 380.333 M 0 0 117.571(execlp\( ... \);)FmTx
100 406.333 M 0 0 251.938(h = signal\( SIGINT, SIG_IGN \);)FmTx
36.062 N 0 0 260.336(/* parent ignores interrupts */)FmTx
100 432.333 M 0 0 134.367(wait\( &status \);)FmTx
153.633 N 0 0 209.949(/* until child is done */)FmTx
100 458.333 M 0 0 167.959(signal\( SIGINT, h \);)FmTx
120.041 N 0 0 201.551(/* restore interrupts */)FmTx
FmE
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 15 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
1304 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1304 0 :M
f0_8 sf
( )S
1306 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
1306 0 :M
f1_8 sf
( )S
1308 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
1308 0 :M
f0_8 sf
( )S
1310 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
119.875 N (Computer Science 217: )S
(Alarm)S
245.805 N (P)S
-0.121 N (age )S
(216)S
7 FmP
64 0 648 18 FmqF
FmE
1310 0 :M
f0_7 sf
( )S
1311 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
1312 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
1312 0 :M
f2_24 sf
( )S
1318 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
353.998 61 M (Alarm)S
FmE
1319 0 :M
f2_22 sf
( )S
1325 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 115.333 M (\245)S
FmE
1325 0 :M
f3_20 sf
( )S
1330 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 115.333 M (Create a child process and kill it in 20 seconds)S
FmE
1330 0 :M
f5_14 sf
( )S
1338 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 143.333 M 0 0 159.561(#include <signal.h>)FmTx
100 164.333 M 0 0 67.184(int pid;)FmTx
100 206.333 M 0 0 41.99(void )FmTx
FmE
1339 0 :M
f4_14 sf
( )S
1347 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
141.99 206.333 M 0 0 58.786(OnAlarm)FmTx
FmE
1347 0 :M
f5_14 sf
( )S
1355 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
200.775 206.333 M 0 0 92.377(\( int sig \))FmTx
100 227.333 M 0 0 8.398({)FmTx
136 248.333 M 0 0 176.357(kill\( pid, SIGKILL \);)FmTx
100 269.333 M 0 0 8.398(})FmTx
100 290.333 M 0 0 25.194(...)FmTx
100 311.333 M 0 0 251.938(if \( \( pid = fork\(\) \) == 0 \) {)FmTx
136 332.333 M 0 0 134.367(execlp\( . . . \);)FmTx
100 353.333 M 0 0 8.398(})FmTx
FmE
1356 0 :M
f4_14 sf
( )S
1364 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 374.333 M 0 0 226.745(signal\( SIGALARM, OnAlarm \))FmTx
FmE
1364 0 :M
f5_14 sf
( )S
1372 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
326.745 374.333 M 0 0 8.398(;)FmTx
52.857 N 0 0 193.153(/* setup the handler */)FmTx
FmE
1372 0 :M
f4_14 sf
( )S
1380 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 395.333 M 0 0 92.377(alarm\( 20 \))FmTx
FmE
1381 0 :M
f5_14 sf
( )S
1389 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
192.377 395.333 M 0 0 8.398(;)FmTx
187.225 N 0 0 201.551(/* fire off the alarm */)FmTx
100 416.333 M 0 0 25.194(...)FmTx
FmE
1389 0 :M
f2_22 sf
( )S
1395 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 445.666 M (\245)S
FmE
1395 0 :M
f2_16 sf
( )S
1399 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 445.666 M (What if y)S
-0.402 N (ou want to ha)S
-0.242 N (ve an alarm in less than a second?)S
FmE
1400 0 :M
f4_14 sf
( )S
1408 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 472.333 M 0 0 436.693(unsigned ualarm\( unsigned value, unsigned interval \))FmTx
100 498.333 M 0 0 428.295(int setitimer\( int which, struct itimerval *value, )FmTx
244 524.333 M 0 0 218.347(struct itimerval *ovalue \))FmTx
FmE
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(Jaswinder Pal Singh; page: 16 of 16)setjob
%%EndPageSetup
gS 0 0 776 576 rC
1408 0 :M
FrMacBegin
0 FmP
0 FmSP
FmE
1408 0 :M
f0_8 sf
( )S
1410 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 563.333 M (Cop)S
-0.08 N (yright )S
FmE
1410 0 :M
f1_8 sf
( )S
1412 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
98.365 563.333 M (\323)S
FmE
1412 0 :M
f0_8 sf
( )S
1414 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
104.686 563.333 M (1995 D. Hanson, K. Li & J.P)S
-0.889 N (. Singh)S
93.658 N (Computer Science 217: )S
(More )S
-0.441 N (Alarm Examples)S
219.588 N (P)S
-0.121 N (age )S
(217)S
7 FmP
64 0 648 18 FmqF
FmE
1414 0 :M
f0_7 sf
( )S
1415 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
656.42 4.667 M (No)S
-0.106 N (v)S
-0.106 N (ember 19, 1997)S
FmE
64 69 648 18 rC
1416 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
7 FmP
64 69 648 18 FmqF
0 FmP
64 78 FmB
612 0 FmL
2 2 FmSo
FmE
gR
gS 0 0 776 576 rC
1416 0 :M
f2_24 sf
( )S
1422 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
262.65 61 M (More Alarm Examples)S
FmE
1423 0 :M
f2_22 sf
( )S
1429 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 115.333 M (\245)S
FmE
1429 0 :M
f3_20 sf
( )S
1434 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 115.333 M (Implement time out in comm)S
-0.2 N (unication protocols)S
FmE
1434 0 :M
f3_16 sf
( )S
1438 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 144.667 M (Retr)S
-0.16 N (ansmission if no ac)S
-0.32 N (kno)S
-0.242 N (wledgment )S
100 172.667 M (Decide )S
-0.48 N (\322NFS is not responding.)S
-1.602 N (\323)S
FmE
1439 0 :M
f2_22 sf
( )S
1445 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 208.333 M (\245)S
FmE
1445 0 :M
f3_20 sf
( )S
1450 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 208.333 M (Implement imestamps f)S
-0.601 N (or perf)S
-0.601 N (or)S
0.498 N (mance measurements)S
FmE
1450 0 :M
f3_16 sf
( )S
1454 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 237.667 M (The typical w)S
-0.242 N (a)S
-0.48 N (y to get a timestamp is:)S
FmE
1455 0 :M
f5_14 sf
( )S
1463 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 264.333 M 0 0 176.357(#include <sys/time.h>)FmTx
100 290.333 M 0 0 25.194(...)FmTx
FmE
1463 0 :M
f4_14 sf
( )S
1471 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 316.333 M 0 0 470.285(gettimeofday\( struct timeval *tp; struct timezone *tzp \))FmTx
FmE
1472 0 :M
f5_14 sf
( )S
1480 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
570.285 316.333 M 0 0 8.398(;)FmTx
FmE
1480 0 :M
f3_16 sf
( )S
1484 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
100 369.666 M (But, this call tak)S
-0.32 N (es x0 to x00 microseconds)S
100 397.666 M (So)S
-0.641 N (, use ualar)S
0.398 N (m to implement something less e)S
-0.48 N (xpensiv)S
-0.402 N (e)S
-0.242 N (.)S
FmE
1485 0 :M
f2_22 sf
( )S
1491 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
64 427.666 M (\245)S
FmE
1491 0 :M
f2_16 sf
( )S
1495 0 :M
FrMacBegin
0 0 0 1 0 0 0 FmK
0 FmP
82 427.666 M (Other e)S
-0.242 N (xamples?)S
FmE
endp
%%Trailer
end
%%EOF
