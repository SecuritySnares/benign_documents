{\rtf0\mac{\fonttbl{\f1 Helvetica;}{\f2 Symbol;}{\f3 Geneva;}{\f4 Zapf Dingbats;}{\f5 Helvetica-Math;}}{\stylesheet{\s255 \plain\b\f1\fs32 \qc \level1 heading 1;}{\s254 \plain\b\f1\fs28 \fi-225\li225\ql \level2 heading 2;}{\s253 \plain\b\f1\fs24 \fi-180\li540\ql \level3 heading 3;}{\s252 \plain\b\f1\fs20 \fi-180\li900\ql \level4 heading 4;}{\s251 \plain\b\f1\fs20 \fi-135\li1215\ql \level5 heading 5;}{\s250 \plain\b\f1\fs18 \fi-135\li1575\ql \level6 heading 6;}}{\pard\s255\qc \plain\b\f1\fs32 {\par}}{\pard\s255\qc \plain\b\f1\fs32 {The Story Thus Far\par}}{{{\pntext\plain\b\f1\fs28 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs28\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\f1\fs28 \plain\b\f1\fs28 We have seen a brief intro to Z\par}}{{{\pntext\plain\b\f1\fs28 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs28\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\f1\fs28 Main features\par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 \plain\b\f1\fs24 use of schemas to encapsulate state\par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 use of schemas to describe operations\par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 the delta and xi conventions\par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 use of schema calculus to build up bigger operations out of smaller ones\par}}{\pard\s255\qc \plain\b\f1\fs32 {Relating Birthday Book \line to State Machines\par}}{\pard\s254\fi-225\li225\ql \plain\b\f1\fs24 {S = \{known: NAME; \plain\b\f1\fs24 birthday: NAME  \plain\b\f5\fs24 \'a3\plain\b\f1\fs24   DATE\plain\b\f1\fs24  |\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {known = dom(birthday)\}\par}}{\pard\s254\fi-225\li225\ql \plain\b\f1\fs24 {I = \plain\b\f1\fs28 \{\plain\b\f1\fs24 known: NAME; \plain\b\f1\fs24 birthday: NAME  \plain\b\f5\fs24 \'a3\plain\b\f1\fs24   DATE\plain\b\f1\fs24  |\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {birthday = \plain\b\f2\fs24 \'c6\}\par}}{\pard\s254\fi-225\li225\ql \plain\b\f1\fs24 {A = \{AddBirthday(date?:DATE, name?:NAME),\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {FindBirthday(date?:DATE)/name!(NAME),\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {Remind(date?:DATE)/names!(P Name)\}\par}}{\pard\s254\fi-225\li225\ql \plain\b\f2\fs24 {d\plain\b\f1\fs24  = ...\par}}{\pard\s254\fi-225\li225\ql \plain\b\f1\fs28 {\par}}{\pard\s255\qc \plain\b\f1\fs32 {AddBirthday\par}}{\pard\s254\fi-225\li225\ql \plain\b\f1\fs24 {AddBirthday(date?:DATE, name?:NAME)\par}}{\pard\s253\fi-180\li540\ql \plain\b\ul\f1\fs24 {pre\plain\b\f1\fs24  \plain\b\f1\fs24 name? \plain\b\f2\fs20 \'cf  \plain\b\f1\fs24 known\par}}{\pard\s253\fi-180\li540\ql \plain\b\ul\f1\fs24 {post\plain\b\f1\fs24  birthday' = birthday \plain\b\f2\fs24 \'c8 \plain\b\f1\fs24 \{ name? \plain\b\f5\fs24 \'a2 \plain\b\f1\fs24 date? \}\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {\par}}{\pard\s254\fi-225\li225\ql \plain\b\f1\fs24 {FindBirthday(date?:DATE)/name!(NAME)\par}}{\pard\s253\fi-180\li540\ql \plain\b\ul\f1\fs24 {pre\plain\b\f1\fs24  \plain\b\f1\fs24 name? \plain\b\f5\fs24 \'da \plain\b\f1\fs24 known\par}}{\pard\s253\fi-180\li540\ql \plain\b\ul\f1\fs24 {post\plain\b\f1\fs24  birthday' = birthday\par}}{\pard\s252\fi-180\li900\ql \plain\b\f1\fs24 {known\rquote  = known\par}}{\pard\s252\fi-180\li900\ql \plain\b\f1\fs24 {name! = birthday(date?)\par}}{\pard\s255\qc \plain\b\f1\fs32 {RAddBirthday\par}}{\pard\s254\fi-225\li225\ql \plain\b\f1\fs24 {RAddBirthday(date?:DATE, name?:NAME) \tab \tab \tab \tab \tab report!(REPORT)\par}}{\pard\s253\fi-180\li540\ql \plain\b\ul\f1\fs24 {pre\plain\b\f1\fs24  true\plain\b\f1\fs24 \par}}{\pard\s253\fi-180\li540\ql \plain\b\ul\f1\fs24 {post\plain\b\f1\fs24  \par}}{\pard\s252\fi-180\li900\ql \plain\b\f1\fs20 {(name? \plain\b\f2\fs20 \'cf  \plain\b\f1\fs20 known \plain\b\f5\fs24 \'df \par}}{\pard\s252\fi-180\li900\ql \plain\b\f1\fs20 {birthday' = birthday \plain\b\f2\fs20 \'c8 \plain\b\f1\fs20 \{ name? \plain\b\f5\fs24 \'a2 \plain\b\f1\fs20 date? \} \plain\b\f5\fs24 \'df \par}}{\pard\s252\fi-180\li900\ql \plain\b\f1\fs20 {report = ok)\par}}{\pard\s252\fi-180\li900\ql \plain\b\f5\fs24 {\'e0 \par}}{\pard\s252\fi-180\li900\ql \plain\b\f1\fs20 {(name? \plain\b\f5\fs20 \'da \plain\b\f1\fs20 known \plain\b\f5\fs24 \'df \par}}{\pard\s252\fi-180\li900\ql \plain\b\f1\fs20 {birthday' = birthday \plain\b\f5\fs24 \'df \par}}{\pard\s252\fi-180\li900\ql \plain\b\f1\fs20 {known\rquote = known\plain\b\f5\fs24 \'df\par}}{\pard\s252\fi-180\li900\ql \plain\b\f1\fs20 {report = alreadyknown)\par}}{\pard\s252\fi-180\li900\ql \plain\b\f1\fs20 {  \par}}{\pard\s255\qc \plain\b\f1\fs32 {Lecture Outline\par}}{{{\pntext\plain\b\f1\fs28 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs28\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\f1\fs28 \plain\b\f1\fs28 A Second Example: Telephone Net\par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 \plain\b\f1\fs24 Adapted from "Telephone Network", by Carroll Morgan\par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 In \plain\b\ul\f1\fs24 Specification Case Studies\plain\b\f1\fs24 , Ian Hayes (ed)\par}}{{{\pntext\plain\b\f1\fs28 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs28\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\f1\fs28 \plain\b\f1\fs28 Concepts\par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 \plain\b\f1\fs24 Use of strong state invariants to make concise models\par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 Use of schema calculus to simplify descriptions and associated reasoning\par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 Disj, (Generic Definitions)\plain\b\f2\fs24  \par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 \plain\b\f1\fs24 Framing\par}}{{{\pntext\plain\b\f1\fs24 >\tab}\pard\s253\fi-180\li540\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb >}}\plain\b\f1\fs24 Reasoning with state invariants\par}}{\pard\s255\qc \plain\b\f1\fs32 {Telephones\par}}{\pard\s255\qc \plain\b\f1\fs32 {Requests for Connection\par}}{\pard\s255\qc \plain\b\f1\fs32 {Connections\par}}{\pard\s255\qc \plain\b\f1\fs32 {Operations\par}}{{{\pntext\plain\b\i\f1\fs28 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs28\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\i\f1\fs28 \plain\b\i\f1\fs28 Call\plain\b\f1\fs28 : Request a connection between two phones\par}}{{{\pntext\plain\b\i\f1\fs28 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs28\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\i\f1\fs28 \plain\b\i\f1\fs28 Hangup\plain\b\f1\fs28 : Terminate a connection\par}}{{{\pntext\plain\b\i\f1\fs28 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs28\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\i\f1\fs28 \plain\b\i\f1\fs28 Busy\plain\b\f1\fs28 : Report whether a phone is busy\par}}{\pard\s255\qc \plain\b\f1\fs32 {State Space\par}}{\pard\s255\qc \plain\b\f1\fs32 {Example\par}}{\pard\s255\qc \plain\b\f1\fs32 {Pairwise disjoint sets\par}}{\pard\s255\qc \plain\b\f1\fs32 {What's Wrong With This Net?\par}}{\pard\s255\qc \plain\b\f1\fs32 {An Inefficient Net\par}}{\pard\s255\qc \plain\b\f1\fs32 {Efficient Networks\par}}{\pard\s255\qc \plain\b\f1\fs32 {\par}}{\pard\s255\qc \plain\b\f1\fs32 {Initial Telephone Net\par}}{\pard\s255\qc \plain\b\f1\fs32 {Framing: Event\par}}{\pard\s255\qc \plain\b\f1\fs32 {This Really Means ...\par}}{\pard\s255\qc \plain\b\f1\fs32 {Call\par}}{\pard\s255\qc \plain\b\f1\fs32 {Example\par}}{\pard\s255\qc \plain\b\f1\fs32 {Example\par}}{\pard\s255\qc \plain\b\f1\fs32 {Hangup\par}}{\pard\s255\qc \plain\b\f1\fs32 {Busy\par}}{\pard\s255\qc \plain\b\f1\fs32 {Reasoning about the Specification\par}}{{{\pntext\plain\b\ul\f1\fs24 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\ul\f1\fs24 \plain\b\ul\f1\fs24 Theorem\plain\b\f1\fs24 : (Informal) If an operation doesn't change any of the requests then it doesn't change any of the connections.\par}}{{{\pntext\plain\b\ul\f1\fs24 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\ul\f1\fs24 \plain\b\ul\f1\fs24 Proof\plain\b\f1\fs24 : (Informal)\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {1. The constraint on Event tells us that any original connection won't be broken if it is still requested.\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {2. If an operation doesn't change the requests, all original connections will still be requested.\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {3. Hence, no connections are broken.\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {4. Also, no new connections are added because if a connection could be added afterwards, it could have been added before.\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {5. So connections aren't changed.\par}}{\pard\s255\qc \plain\b\f1\fs32 {The Fuzz Type Checker \par}}{{{\pntext\plain\b\f1\fs24 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\f1\fs24 \plain\b\f1\fs24 One of the benefits of being precise about types is that we can type-check our descriptions\par}}{{{\pntext\plain\b\f1\fs24 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\f1\fs24 We will use the Fuzz Type Checker to do this.\par}}{{{\pntext\plain\b\f1\fs24 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\f1\fs24 It takes Latex descriptions of Z specifications as input and produces error reports and other useful type information.\par}}{{{\pntext\plain\b\f1\fs24 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\f1\fs24 To type check a file spec.tex, invoke\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {fuzz spec.tex\par}}{{{\pntext\plain\b\f1\fs24 \bullet \tab}\pard\s254\fi-225\li225\ql {\*\pn \pnlvlblt\pnfs24\pnf1\pnstart1{\pntxtb \bullet }}\plain\b\f1\fs24 To get type information about spec.tex, invoke\par}}{\pard\s253\fi-180\li540\ql \plain\b\f1\fs24 {fuzz -t spec.tex\par}}{\pard\s255\qc \plain\b\f1\fs24 {Last Slide\par}}{\pard\s255\qc \plain\b\f1\fs32 {\par}}{\pard\s255\qc \plain\b\f1\fs32 {\par}}}